{"version":3,"sources":["services/history.js","services/User.js","pages/Login/index.js","services/Validator.js","pages/Register/index.js","pages/Planner/index.js","pages/Guest/index.js","pages/Events/index.js","services/LocalStorage.js","routes/Route.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","User","userName","this","LoginBox","props","storage","clear","id","React","Component","GuestLogin","state","gID","error","changeGID","bind","handleSubmit","event","target","value","length","setState","substr","preventDefault","push","className","onSubmit","type","placeholder","onChange","PlannerLogin","user","pass","changeUser","changePass","handleRegister","newUser","setUser","validatePlanner","data-testid","onClick","withRouter","RegisterBox","name","repass","errorMessage","changeName","changeRepass","registered","match","registerPlanner","console","log","required","CreateGuest","clicked","email","phone","address","openDialog","closeDialog","changeEmail","changeAddress","changePhone","document","getElementById","style","display","open","Planner","Guest","GuestView","EventList","eventList","getEvents","listItems","i","Key","Event","setEvent","undefined","listLength","addEvent","prevState","getUser","EventItem","goToEvent","key","LocalStorage","ls","curUser","newEvent","curEvent","guestList","itemList","RouteWrapper","isPrivate","rest","hasUser","to","Routes","path","exact","render","Login","Register","Events","defaultProps","App","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94a85d30.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\nexport default history;","export class User {\r\n\r\n    constructor(userName) {\r\n        this.userName = userName;\r\n    }\r\n}\r\n\r\nexport class Guest extends User {\r\n\r\n}","import React from 'react';\r\nimport '../../SeatPlanner.css';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {validatePlanner, validateGuest} from \"../../services/Validator\";\r\n\r\n\r\nexport class LoginBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.storage.clear();\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id = \"wrapperbox\">\r\n                <div id = \"welcome\">\r\n                    <h1>Welcome to Best Fit Seating</h1>\r\n                    <h1>Are you here as an Event Planner or as a Guest?</h1>\r\n                </div>\r\n                <div id = \"loginbox\">\r\n                    <PlannerLogin history = {this.props.history} storage = {this.props.storage}/>\r\n                    <GuestLogin history = {this.props.history} storage = {this.props.storage}/>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport class GuestLogin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {gID: '', error: \"guestError\"};\r\n\r\n        this.changeGID = this.changeGID.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    changeGID(event) {\r\n        if (event.target.value.length > 10) {\r\n            this.setState({gID: event.target.value.substr(0,10)});\r\n        } else {\r\n            this.setState({gID: event.target.value});\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (validateGuest(this.state.gID)) {\r\n            this.props.history.push('/guest');\r\n        } else {\r\n            this.setState({error: 'loginError'});\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <div className='box' id= 'guestLogin'>\r\n                <h2>Login as Guest</h2>\r\n                <form onSubmit= {this.handleSubmit}>\r\n                    <div className='infoBox'>\r\n                        <input type= 'text' className='textBox' id='guestID'\r\n                               placeholder='Unique Guest ID' value={this.state.gID} onChange={this.changeGID} />\r\n                        <div className='loginError' id={this.state.error}>\r\n                            Invalid Guest ID\r\n                        </div>\r\n                    </div>\r\n                    <input type='submit' className='button' id='guest' value='CONTINUE' />\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport class PlannerLogin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {user:'', pass:'', error:'plannerError'};\r\n\r\n        this.changeUser = this.changeUser.bind(this);\r\n        this.changePass = this.changePass.bind(this);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    changeUser(event) {\r\n        this.setState({user: event.target.value});\r\n    }\r\n\r\n    changePass(event) {\r\n        this.setState({pass: event.target.value});\r\n    }\r\n\r\n    handleRegister(event) {\r\n        event.preventDefault();\r\n        this.props.history.push('/register');\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (validatePlanner(this.state, this.props.storage)) {\r\n            this.props.history.push('/events');\r\n        } else {\r\n            this.setState({error: 'loginError'});\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <div className= 'box' id= 'plannerLogin'>\r\n                <h2>Login as Planner</h2>\r\n                <form data-testid=\"plannerLoginForm\" onSubmit={this.handleSubmit}>\r\n                    <div className='infoBox'>\r\n                        <input data-testid={this.state.user} type='text' className='textBox' id='email'\r\n                               placeholder='E-mail' value={this.state.user} onChange={ this.changeUser} />\r\n                        <input data-testid={this.state.pass} type='password' className='textBox' id='pass'\r\n                               placeholder='Password' value ={this.state.pass} onChange={this.changePass} />\r\n                        <div className='loginError' id={this.state.error}>\r\n                            Invalid Username/Password\r\n                        </div>\r\n                    </div>\r\n                    <div id='newRegister' onClick={this.handleRegister}>\r\n                        New User? Click Here to Register\r\n                    </div>\r\n                    <input type='submit' className='button' id='planner' value='LOGIN' />\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginBox);","import {User} from \"./User\";\r\n\r\nexport function validateGuest(gID) {\r\n    return gID !== \"\" && gID.length === 10;\r\n}\r\n\r\nexport function validatePlanner(state, storage) {\r\n    if (state.user !== \"\" && state.pass !== \"\") {\r\n        let newUser = new User(state.user);\r\n        storage.setUser(newUser);\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function registerPlanner(state, storage) {\r\n    var emailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,24})+$/;\r\n    var passFormat = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\r\n\r\n    if (state.pass !== state.repass) {\r\n      return [false, 'Passwords do not match']\r\n    } else if (!state.user.match(emailFormat)) {\r\n        return [false, `${state.user} is not a valid email address`]\r\n    } else if (!state.pass.match(passFormat)){\r\n        return [false, 'Passwords must be at least 8 characters long; contain at least 1 lower case letter [a-z]; at least 1 upper case letter [A-Z]; at least 1 number [0-9]']\r\n    } else if (state.name !== \"\" && state.user !== \"\" && state.pass !== \"\" && state.repass !== \"\"){\r\n        let newUser = new User(state.user);\r\n        storage.setUser(newUser);\r\n        return [true];\r\n    } else {\r\n        return [false, 'Please fill in all fields']\r\n    }\r\n}\r\n","import React from 'react';\r\nimport '../../SeatPlanner.css';\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {registerPlanner} from \"../../services/Validator\";\r\n\r\nclass RegisterBox extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {name: '', user:'', pass:'', repass:'', error:'plannerError', errorMessage:\"Invalid Registration\"};\r\n\r\n\t\tthis.changeName = this.changeName.bind(this);\r\n\t\tthis.changeUser = this.changeUser.bind(this);\r\n\t\tthis.changePass = this.changePass.bind(this);\r\n\t\tthis.changeRepass = this.changeRepass.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\tchangeName(event) {\r\n\t\t\tthis.setState({name: event.target.value});\r\n\t}\r\n\r\n\tchangeUser(event) {\r\n\t\t\tthis.setState({user: event.target.value});\r\n\t}\r\n\r\n\tchangePass(event) {\r\n\t\t\tthis.setState({pass: event.target.value});\r\n\t}\r\n\r\n\tchangeRepass(event) {\r\n\t\t\tthis.setState({repass: event.target.value});\r\n\t}\r\n\r\n\r\n\thandleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tlet registered = registerPlanner(this.state, this.props.storage);\r\n\t\tif (registered[0]) {\r\n\t\t\tthis.props.history.push('/events');\r\n\t\t} else {\r\n\t\t\tthis.setState({error: 'loginError'});\r\n\t\t\tthis.setState({errorMessage: registered[1]});\r\n\t\t}\r\n\t\tconsole.log(registered[0]);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className='userMain' id = 'wrapperbox'>\r\n\t\t\t\t<form id='registerBox' onSubmit={this.handleSubmit}>\r\n        \t\t\t<h1 id='registerTitle'>Account Information</h1>\r\n        \t\t\t<div id='inputs'>\r\n          \t\t\t\t<input type='text' className='textBox' id='firstName' required placeholder='Full Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.name} onChange={this.changeName}/>\r\n          \t\t\t\t<input type='text' className='textBox' id='e-mail' required placeholder='E-mail Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t value={this.state.user} onChange={ this.changeUser}/>\r\n          \t\t\t\t<input type='password' className='textBox' id='password' required placeholder='Password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.pass} onChange={this.changePass}/>\r\n          \t\t\t\t<input type='password' className='textBox' id='re_password' required placeholder='Re-Enter Password'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue ={this.state.repass} onChange={this.changeRepass}/>\r\n\t\t\t\t\t\t\t\t\t<div className='loginError' id={this.state.error} >\r\n\t\t\t\t\t\t\t\t\t\t{this.state.errorMessage}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n        \t\t\t<input type='submit' className='button' id='newUser' value='Create Account' />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default withRouter(RegisterBox);\r\n","import React from 'react';\r\nimport '../../SeatPlanner.css';\r\n\r\nclass CreateGuest extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {clicked: 'false', name: '', email: '', phone: '', address: ''};\r\n\r\n\r\n\t\tthis.openDialog = this.openDialog.bind(this);\r\n\t\tthis.closeDialog = this.closeDialog.bind(this);\r\n\t\tthis.changeName = this.changeName.bind(this);\r\n\t\tthis.changeEmail = this.changeEmail.bind(this);\r\n\t\tthis.changeAddress = this.changeAddress.bind(this);\r\n\t\tthis.changePhone = this.changePhone.bind(this);\r\n\t}\r\n\r\n\topenDialog() {\r\n\t\tdocument.getElementById('dialogbox').style.display = 'block';\r\n\t}\r\n\r\n\tcloseDialog() {\r\n\t\tdocument.getElementById('dialogbox').style.display = 'none';\r\n\t}\r\n\r\n\tchangeName(event) {\r\n\t\tthis.setState({name: event.target.value});\r\n\t}\r\n\r\n\tchangeEmail(event) {\r\n\t\tthis.setState({email: event.target.value});\r\n\t}\r\n\r\n\tchangeAddress(event) {\r\n\t\tthis.setState({address: event.target.value});\r\n\t}\r\n\r\n\tchangePhone(event) {\r\n\t\tthis.setState({phone: event.target.value});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"wrapperbox\">\r\n\t\t\t\t<div id = \"welcome\">\r\n\t\t\t\t\t<h1>Event Title</h1>\r\n\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Add Guest' onClick={() => this.openDialog()}/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id=\"dialogbox\">\r\n\t\t\t\t\t<dialog open>\r\n\t\t\t\t\t\t<h1>Add a Guest</h1>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"name\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Name\" onChange={this.changeName}/>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"email\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\" onChange={this.changeEmail}/>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"phone\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Phone Number\" onChange={this.changePhone}/>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"address\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Address\" onChange={this.changeAddress}/>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<div id=\"buttonbox\">\r\n\t\t\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Submit' onClick={() => this.closeDialog()}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</dialog>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default function Planner() {\r\n\treturn <CreateGuest />\r\n}\r\n","import React from 'react';\r\nimport '../../SeatPlanner.css';\r\n\r\nexport default function Guest() {\r\n    return <GuestView />\r\n}\r\n\r\nclass GuestView extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div id = \"welcome\">\r\n                <h1>Welcome to the Guest Page</h1>\r\n                <h1>We are currently working on this page...</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import {withRouter} from \"react-router-dom\";\r\nimport '../../SeatPlanner.css';\r\nimport React from \"react\";\r\n\r\nexport class EventList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {eventList:this.props.storage.getEvents(), listItems:[]};\r\n        for (let i = 0; i < this.state.eventList.length; i++) {\r\n            this.state.listItems.push(\r\n                <EventItem\r\n                    Key={i}\r\n                    Event={this.state.eventList[i]}\r\n                    storage = {this.props.storage}\r\n                    history = {this.props.history}\r\n                />);\r\n        }\r\n        this.props.storage.setEvent(undefined);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let listLength = this.state.eventList.length;\r\n        this.props.storage.addEvent('Event' + (this.state.eventList.length));\r\n        this.setState({eventList: this.props.storage.getEvents()});\r\n        this.setState(prevState => ({\r\n            listItems: [...prevState.listItems, <EventItem\r\n                Key={listLength}\r\n                Event = {'Event' + listLength}\r\n                storage = {this.props.storage}\r\n                history = {this.props.history}\r\n            />]\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"wrapperbox\">\r\n                <div id = \"welcome\">\r\n                    <h1>Welcome, {this.props.storage.getUser()}!</h1>\r\n                </div>\r\n                <div id=\"listWrapper\">\r\n                    <ul id=\"eventList\">{this.state.listItems}</ul>\r\n                    <input type='submit' className='button' id='add_event' value='Add Event' onClick={this.handleSubmit}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass EventItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.goToEvent = this.goToEvent.bind(this);\r\n    }\r\n\r\n    goToEvent(event) {\r\n        event.preventDefault();\r\n        this.props.storage.setEvent(this.props.Event);\r\n        this.props.history.push('/planner');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li key={this.props.Key} className='eventItem' onClick={this.goToEvent}>{this.props.Event}</li>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(EventList);","import ls from 'local-storage';\r\nimport {Guest, User} from \"./User\";\r\n\r\nexport class LocalStorage {\r\n    constructor() {\r\n        const guestList = [];\r\n        ls('guestList', guestList);\r\n        const itemList = [];\r\n        ls('itemList', itemList);\r\n        const eventList = [];\r\n        ls('eventList', eventList);\r\n        let curUser;\r\n        let curEvent;\r\n\r\n    }\r\n\r\n    setUser(newUser) {\r\n        if (newUser instanceof User) {\r\n            this.curUser = newUser;\r\n            ls('curUser', this.curUser);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    getUser() {\r\n        return this.curUser.userName;\r\n    }\r\n    addGuest() {\r\n\r\n    }\r\n    addEvent(newEvent) {\r\n        this.eventList.push(newEvent);\r\n        ls('eventList', this.eventList);\r\n\r\n    }\r\n    setEvent(newEvent) {\r\n        this.curEvent = newEvent;\r\n        ls('curEvent', this.curEvent);\r\n    }\r\n    getEvents() {\r\n        return ls('eventList');\r\n    }\r\n\r\n    clear() {\r\n        this.curUser = undefined;\r\n        ls('curUser', this.curUser);\r\n        this.curEvent = undefined;\r\n        ls('curEvent', this.curEvent);\r\n        this.guestList = [];\r\n        ls('guestList', this.guestList);\r\n        this.itemList = [];\r\n        ls('itemList', this.itemList);\r\n        this.eventList = [];\r\n        ls('eventList', this.eventList);\r\n\r\n    }\r\n\r\n    hasUser() {\r\n        return this.curUser !== undefined;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport {LocalStorage} from \"../services/LocalStorage\";\r\n\r\nexport default function RouteWrapper({\r\n    isPrivate,\r\n    storage,\r\n    ...rest\r\n    }) {\r\n\r\n    /**\r\n     * Redirect user to SignIn page if he tries to access a private route\r\n     * without authentication.\r\n     */\r\n    if (isPrivate && !storage.hasUser()) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    /**\r\n     * If not included on both previous cases, redirect user to the desired route.\r\n     */\r\n    return <Route {...rest} />;\r\n}\r\n\r\nRouteWrapper.propTypes = {\r\n    isPrivate: PropTypes.bool,\r\n    storage: PropTypes.instanceOf(LocalStorage).isRequired\r\n};\r\n\r\nRouteWrapper.defaultProps = {\r\n    isPrivate: false\r\n};","import React from \"react\";\r\nimport { BrowserRouter, Switch} from \"react-router-dom\";\r\nimport Login from '../pages/Login';\r\nimport Register from '../pages/Register';\r\nimport Planner from '../pages/Planner';\r\nimport Guest from '../pages/Guest';\r\nimport Events from '../pages/Events';\r\nimport Route from './Route'\r\nimport {LocalStorage} from '../services/LocalStorage'\r\n\r\nexport default function Routes() {\r\n    let storage = new LocalStorage();\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n            <Route path=\"/\" exact\r\n                   render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\r\n                   storage={storage}\r\n            />\r\n            <Route path=\"/register\"\r\n                   render = {(props) =><Register{...props} history = {Routes.history} storage = {storage}/>}\r\n                   storage={storage}\r\n            />\r\n            <Route path = \"/events\"\r\n                    render = {(props) =><Events{...props} history = {Routes.history} storage = {storage}/>}\r\n                    isPrivate = {true} storage={storage}\r\n            />\r\n            <Route path=\"/planner\"\r\n                   render = {(props) =><Planner{...props} history = {Routes.history} storage = {storage}/>}\r\n                   isPrivate = {true} storage={storage}\r\n            />\r\n            <Route path=\"/guest\"\r\n                   render = {(props) =><Guest{...props} history = {Routes.history} storage = {storage}/>}\r\n                   isPrivate = {true} storage={storage}\r\n            />\r\n            {/* redirect user to Login page if route does not exist and user is not authenticated */}\r\n            <Route\r\n                render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\r\n                storage={storage}\r\n            />\r\n        </Switch>\r\n       </BrowserRouter>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Router } from 'react-router';\r\n\r\nimport history from './services/history';\r\nimport Routes from './routes';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router history={history}>\r\n            <Routes  />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"mainbox\"));\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}