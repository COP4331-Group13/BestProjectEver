{"version":3,"sources":["services/history.js","services/User.js","services/event.js","services/Validator.js","pages/Login/index.js","pages/Register/index.js","services/navigation.js","pages/Planner/index.js","pages/Guest/index.js","pages/Events/index.js","services/LocalStorage.js","routes/Route.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","User","userName","this","Event","name","pin","address","eventDate","maxPeople","randomize","require","callAuthenticate","state","xhr","XMLHttpRequest","open","setRequestHeader","send","user","pass","status","registerPlanner","storage","repass","match","authCode","callRegister","newUser","setUser","addEvent","curUser","date","max","callEvent","LoginBox","id","props","React","Component","GuestLogin","gID","error","changeGID","bind","handleSubmit","event","target","value","length","setState","substr","preventDefault","push","className","onSubmit","type","placeholder","onChange","PlannerLogin","changeUser","changePass","handleRegister","validated","validatePlanner","errorMessage","data-testid","required","onClick","withRouter","RegisterBox","changeName","changeRepass","registered","console","log","Navigation","handleEventPage","towhere","text","CreateGuest","clicked","email","phone","search","curEvent","getEvent","openDialog","closeDialog","changeEmail","changeAddress","changePhone","changeSearch","document","getElementById","style","display","Guest","GuestView","EventList","eventList","getEvents","listItems","i","Key","setEvent","undefined","handleLogout","changeDate","changeMax","added","listLength","prevState","clear","getUser","EventItem","goToEvent","key","LocalStorage","ls","newEvent","RouteWrapper","isPrivate","rest","isSigned","to","Routes","path","exact","render","Login","Register","Events","Planner","defaultProps","App","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69f45fdb.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default history;","export class User {\n\n    constructor(userName) {\n        this.userName = userName;\n    }\n}\n\nexport class Guest extends User {\n\n}","\n\nexport class Event {\n    constructor(name, pin, address, eventDate, maxPeople) {\n        this.name = name;\n        this.pin = pin;\n        this.address = address;\n        this.eventDate = eventDate;\n        this.maxPeople = maxPeople;\n    }\n}","import {User} from \"./User\";\nimport {Event} from \"./event\";\n\nconst randomize = require(\"randomatic\");\n\nfunction callAuthenticate(state) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/login\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"email=\"+state.user+\"&password=\"+state.pass);\n  return xhr.status;\n}\n\nfunction callRegister(state) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/register\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"full_name=\"+state.name+\"&email=\"+state.user+\"&password=\"+state.pass);\n  return xhr.status;\n}\n\nfunction callEvent(state, curUser, pin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/add-event\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"planner=\"+curUser+\"&pin=\"+pin+\"&event_name=\"+state.name+\"&event_time=\"+state.date+\"&address=\"+state.address+\"&max_people=\"+state.max);\n  return xhr.status;\n}\n\nfunction callGuest(state, curEventPin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/add-guest\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"full_name=\"+state.name+\"&email=\"+state.email+\"&address=\"+state.address+\"&phone_number=\"+state.phone_number+\"&event_pin=\"+state.event_pin);\n  return xhr.status;\n}\n\nfunction callEventList(curUser) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", \"http://35.243.169.229:5000/api/get-event-list\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"planner=\"+curUser);\n  return [xhr.status, xhr.responseText];\n}\n\nexport function validateGuest(gID) {\n    return gID !== \"\" && gID.length === 10;\n}\n\nexport function validatePlanner(state, storage) {\n    if (state.user !== \"\" && state.pass !== \"\") {\n        let authCode = callAuthenticate(state);\n        if (authCode === 200) { // account exists\n          let newUser = new User(state.user);\n          storage.setUser(newUser);\n          return [true];\n        } else if (authCode === 204 || authCode === 205) { // email or password are wrong\n          return [false, 'Invalid email or password']\n        } else { // error sending query 400\n          return [false, 'Error has occured']\n        }\n    } else {\n        return [false, 'Please fill in all fields'];\n    }\n}\n\nexport function registerPlanner(state, storage) {\n    let emailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,24})+$/;\n    let passFormat = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n\n    if (state.pass !== state.repass) {\n      return [false, 'Passwords do not match']\n    } else if (!state.user.match(emailFormat)) {\n        return [false, `${state.user} is not a valid email address`]\n    } else if (!state.pass.match(passFormat)){\n        return [false, 'Passwords must be at least 8 characters long; contain at least 1 lower case letter [a-z]; at least 1 upper case letter [A-Z]; at least 1 number [0-9]']\n    } else if (state.name !== \"\" && state.user !== \"\" && state.pass !== \"\" && state.repass !== \"\"){\n        let authCode = callAuthenticate(state);\n        if (authCode === 200 || authCode === 204) { // email with password already exists\n          return [false, `An account already exists for ${state.user}`]\n        } else if (authCode === 205) { // email does not exist\n            let registerCode = callRegister(state);\n            if (registerCode === 200) {\n              let newUser = new User(state.user);\n              storage.setUser(newUser);\n              return [true];\n            } else { // error sending query 400\n                  return [false, 'Error has occurred']\n            }\n        } else { // error sending query 400\n           return [false, 'Error has occurred']\n        }\n    } else {\n        return [false, 'Please fill in all fields']\n    }\n}\n\nexport function addEvent(state, curUser) {\n  let pin = randomize('Aa0', 5);\n  let addEventCode = callEvent(state, curUser, pin);\n  if (addEventCode === 200) { // event added successfully\n    let newEvent = new Event(state.name, pin, state.address, state.date, state.max);\n    return [true, newEvent];\n  } else {\n    return [false, 'Error has occurred'];\n  }\n}\n\nexport function addGuest(state, storage) {\n  // need from state: state.name, state.email, state.address, state.phone_number\n  let curEventPin; // = get event_pin from storage;\n  let addGuestCode = callGuest(state, curEventPin);\n  if (addGuestCode === 200) { // event added successfully\n    // do stuff to add to storage\n    return [true];\n  } else {\n    return [false, 'Error has occurred'];\n  }\n}\n\nexport function getEventList(curUser) {\n  let eventListCode = callEventList(curUser);\n  if (eventListCode[0] === 200) {\n    var data = JSON.parse(eventListCode[1]);\n    // number of results: data.length\n    /* format to get data: data.results[i].event_pin);\n                           data.results[i].event_name);\n                           data.results[i].event_time);\n                           data.results[i].address);\n                           data.results[i].max_people);\n       and put it into eventList\n    */\n  } else {\n     // error occurred\n  }\n}\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {validatePlanner, validateGuest} from \"../../services/Validator\";\n\n\nexport class LoginBox extends React.Component {\n    render() {\n\n        return (\n            <div id = \"wrapperbox\">\n                <div id = \"welcome\">\n                    <h1>Welcome to Best Fit Seating<br/>Are you here as an Event Planner or as a Guest?</h1>\n                </div>\n                <div id = \"loginbox\">\n                    <PlannerLogin history = {this.props.history} storage = {this.props.storage}/>\n                    <GuestLogin history = {this.props.history} storage = {this.props.storage}/>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport class GuestLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {gID: '', error: \"guestError\"};\n\n        this.changeGID = this.changeGID.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeGID(event) {\n        if (event.target.value.length > 10) {\n            this.setState({gID: event.target.value.substr(0,10)});\n        } else {\n            this.setState({gID: event.target.value});\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (validateGuest(this.state.gID)) {\n            this.props.history.push('/guest');\n        } else {\n            this.setState({error: 'loginError'});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className='box' id= 'guestLogin'>\n                <h2>Login as Guest</h2>\n                <form onSubmit= {this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input type= 'text' className='textBox' id='guestID'\n                               placeholder='Unique Guest ID' value={this.state.gID} onChange={this.changeGID} />\n                        <div className='loginError' id={this.state.error}>\n                            Invalid Guest ID\n                        </div>\n                    </div>\n                    <input type='submit' className='button' id='guest' value='CONTINUE' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport class PlannerLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {user:'', pass:'', error:'plannerError'};\n\n        this.changeUser = this.changeUser.bind(this);\n        this.changePass = this.changePass.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeUser(event) {\n        this.setState({user: event.target.value});\n    }\n\n    changePass(event) {\n        this.setState({pass: event.target.value});\n    }\n\n    handleRegister(event) {\n        event.preventDefault();\n        this.props.history.push('/register');\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let validated = validatePlanner(this.state, this.props.storage);\n        if (validated[0]) {\n    \t\t\tthis.props.history.push('/events');\n    \t\t} else {\n            this.setState({error: 'loginError'});\n            this.setState({errorMessage: validated[1]});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className= 'box' id= 'plannerLogin'>\n                <h2>Login as Planner</h2>\n                <form data-testid=\"plannerLoginForm\" onSubmit={this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input data-testid={this.state.user} type='text' className='textBox' id='email' required\n                               placeholder='E-mail' value={this.state.user} onChange={ this.changeUser} />\n                        <input data-testid={this.state.pass} type='password' className='textBox' id='pass' required\n                               placeholder='Password' value ={this.state.pass} onChange={this.changePass} />\n                        <div className='loginError' id={this.state.error}>\n                            {this.state.errorMessage}\n                        </div>\n                    </div>\n                    <div id='newRegister' onClick={this.handleRegister}>\n                        New User? Click Here to Register\n                    </div>\n                    <input type='submit' className='button' id='planner' value='LOGIN' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport default withRouter(LoginBox);\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\"\nimport {registerPlanner} from \"../../services/Validator\";\n\nclass RegisterBox extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {name: '', user:'', pass:'', repass:'', error:'plannerError', errorMessage:\"Invalid Registration\"};\n\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeUser = this.changeUser.bind(this);\n\t\tthis.changePass = this.changePass.bind(this);\n\t\tthis.changeRepass = this.changeRepass.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tchangeName(event) {\n\t\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeUser(event) {\n\t\t\tthis.setState({user: event.target.value});\n\t}\n\n\tchangePass(event) {\n\t\t\tthis.setState({pass: event.target.value});\n\t}\n\n\tchangeRepass(event) {\n\t\t\tthis.setState({repass: event.target.value});\n\t}\n\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tlet registered = registerPlanner(this.state, this.props.storage);\n\t\tif (registered[0]) {\n\t\t\tthis.props.history.push('/events');\n\t\t} else {\n\t\t\tthis.setState({error: 'loginError'});\n\t\t\tthis.setState({errorMessage: registered[1]});\n\t\t}\n\t\tconsole.log(registered[0]);\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className='userMain' id = 'wrapperbox'>\n\t\t\t\t<form id='registerBox' onSubmit={this.handleSubmit}>\n        \t\t\t<h1 id='registerTitle'>Account Information</h1>\n        \t\t\t<div id='inputs'>\n          \t\t\t\t<input type='text' className='textBox' id='firstName' required placeholder='Full Name'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.name} onChange={this.changeName}/>\n          \t\t\t\t<input type='text' className='textBox' id='e-mail' required placeholder='E-mail Address'\n\t\t\t\t\t\t\t\t\t\t\t\t value={this.state.user} onChange={ this.changeUser}/>\n          \t\t\t\t<input type='password' className='textBox' id='password' required placeholder='Password'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.pass} onChange={this.changePass}/>\n          \t\t\t\t<input type='password' className='textBox' id='re_password' required placeholder='Re-Enter Password'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue ={this.state.repass} onChange={this.changeRepass}/>\n\t\t\t\t\t\t\t\t\t<div className='loginError' id={this.state.error} >\n\t\t\t\t\t\t\t\t\t\t{this.state.errorMessage}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n        \t\t\t<input type='submit' className='button' id='newUser' value='Create Account' />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default withRouter(RegisterBox);\n","import React from 'react';\r\n\r\nexport class Navigation extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.handleEventPage = this.handleEventPage.bind(this);\r\n\t}\r\n\r\n\thandleEventPage(event){\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.history.push(this.props.towhere);\r\n\t}\r\n\r\n    render(){\r\n        return(\r\n          <div className='button' id=\"navigation\" onClick={this.handleEventPage}>\r\n              {this.props.text}\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {Navigation} from '../../services/navigation.js';\n\n\nclass CreateGuest extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {clicked: 'false', name: '', email: '',\n\t\t\tphone: '', address: '', search: '', curEvent:this.props.storage.getEvent()};\n\n\t\tthis.openDialog = this.openDialog.bind(this);\n\t\tthis.closeDialog = this.closeDialog.bind(this);\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeEmail = this.changeEmail.bind(this);\n\t\tthis.changeAddress = this.changeAddress.bind(this);\n\t\tthis.changePhone = this.changePhone.bind(this);\n\t\tthis.changeSearch = this.changeSearch.bind(this);\n\t}\n\n\topenDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'block';\n\t}\n\n\tcloseDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'none';\n\t}\n\n\tchangeName(event) {\n\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeEmail(event) {\n\t\tthis.setState({email: event.target.value});\n\t}\n\n\tchangeAddress(event) {\n\t\tthis.setState({address: event.target.value});\n\t}\n\n\tchangePhone(event) {\n\t\tthis.setState({phone: event.target.value});\n\t}\n\n\tchangeSearch(event) {\n\t\tthis.setState({search: event.target.value});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"wrapperbox\">\n\t\t\t\t<div id = \"welcome\">\n\t\t\t\t<Navigation history={this.props.history} towhere={\"/events\"} text={\"Events\"} />\n\t\t\t\t<h1>{this.state.curEvent.name}</h1>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"sidebar\">\n\t\t\t\t\t<div id=\"search\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"search\"\n\t\t\t\t\t\t\t\tplaceholder=\"Search...\" onChange={this.changeSearch}/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Add Guest' onClick={() => this.openDialog()}/>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"dialogbox\">\n\t\t\t\t\t<dialog open>\n\t\t\t\t\t\t<div id=\"closeWindow\">\n\t\t\t\t\t\t\t<input type='submit' id=\"closeButton\" value='X' onClick={() => this.closeDialog()}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h1>Add a Guest</h1>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"name\"\n\t\t\t\t\t\t\t\tplaceholder=\"Name\" onChange={this.changeName}/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\" onChange={this.changeEmail}/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"phone\"\n\t\t\t\t\t\t\t\tplaceholder=\"Phone Number\" onChange={this.changePhone}/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"address\"\n\t\t\t\t\t\t\t\tplaceholder=\"Address\" onChange={this.changeAddress}/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<div id=\"buttonbox\">\n\t\t\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Submit' onClick={() => this.closeDialog()}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</dialog>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default withRouter(CreateGuest);\n","import React from 'react';\nimport '../../SeatPlanner.css';\n\nexport default function Guest() {\n    return <GuestView />\n}\n\nclass GuestView extends React.Component {\n\n    render() {\n        return(\n            <div id = \"welcome\">\n                <h1>Welcome to the Guest Page</h1>\n                <h1>We are currently working on this page...</h1>\n            </div>\n        );\n    }\n}","import {withRouter} from \"react-router-dom\";\nimport '../../SeatPlanner.css';\nimport React from \"react\";\n\nexport class EventList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {eventList:this.props.storage.getEvents(), listItems:[], name: '', date:'', address:'', max:''};\n        for (let i = 0; i < this.state.eventList.length; i++) {\n            this.state.listItems.push(\n                <EventItem\n                    Key={i}\n                    Event={this.state.eventList[i]}\n                    storage = {this.props.storage}\n                    history = {this.props.history}\n                />);\n        }\n        this.props.storage.setEvent(undefined);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.openDialog = this.openDialog.bind(this);\n    \t\tthis.closeDialog = this.closeDialog.bind(this);\n        this.changeName = this.changeName.bind(this);\n    \t\tthis.changeDate = this.changeDate.bind(this);\n    \t\tthis.changeAddress = this.changeAddress.bind(this);\n    \t\tthis.changeMax = this.changeMax.bind(this);\n    }\n\n    openDialog() {\n  \t\tdocument.getElementById('dialogbox').style.display = 'block';\n  \t}\n\n  \tcloseDialog() {\n  \t\tdocument.getElementById('dialogbox').style.display = 'none';\n  \t}\n\n    changeName(event) {\n  \t\tthis.setState({name: event.target.value});\n  \t}\n\n  \tchangeDate(event) {\n  \t\tthis.setState({date: event.target.value});\n  \t}\n\n  \tchangeAddress(event) {\n  \t\tthis.setState({address: event.target.value});\n  \t}\n\n  \tchangeMax(event) {\n  \t\tthis.setState({max: event.target.value});\n  \t}\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let added = this.props.storage.addEvent(this.state);\n        if (added[0]) {\n          this.closeDialog();\n          let listLength = this.state.eventList.length;\n          this.setState({eventList: this.props.storage.getEvents()});\n          this.setState(prevState => ({\n              listItems: [...prevState.listItems, <EventItem\n                  Key={listLength}\n                  Event = {added[1]}\n                  storage = {this.props.storage}\n                  history = {this.props.history}\n              />]\n          }));\n    \t\t} else {\n            this.setState({error: 'eventError'});\n            this.setState({errorMessage: added[1]});\n        }\n    }\n\n    handleLogout(event) {\n        event.preventDefault();\n        this.props.storage.clear();\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        return (\n            <div id=\"logoutBox\">\n\n                <div id=\"wrapperbox\">\n                    <div id = \"welcome\">\n                        <div className='button' id='logout' onClick={this.handleLogout}>\n                            Logout\n                        </div>\n                        <h1>Welcome, {this.props.storage.getUser()}!</h1>\n                    </div>\n                    <div id=\"listWrapper\">\n                        <ul id=\"eventList\">{this.state.listItems}</ul>\n                        <input type='submit' className='button' id='add_event' value='Add Event' onClick={() => this.openDialog()}/>\n                    </div>\n                    <div id=\"dialogbox\">\n                        <dialog open>\n                            <div id=\"closeWindow\">\n                                <input type='submit' id=\"closeButton\" value='X' onClick={() => this.closeDialog()}/>\n                            </div>\n                            <h1>Add an Event</h1>\n                            <form onSubmit={this.handleSubmit}>\n                                <input type=\"text\" className=\"textBox\"\n                                        id=\"name\" placeholder=\"Event Name\"\n                                        value ={this.state.name}\n                                        onChange={this.changeName} required />\n                                <input type=\"datetime-local\" className=\"textBox\"\n                                       id=\"date\" placeholder=\"Date/Time\"\n                                       value ={this.state.date}\n                                       onChange={this.changeDate} required />\n                                <input type=\"text\" className=\"textBox\"\n                                        id=\"address\" placeholder=\"Address\"\n                                        value ={this.state.address}\n                                        onChange={this.changeAddress} required/>\n                                <input type=\"number\" className=\"textBox\"\n                                        id=\"max\" placeholder=\"Max # of Guests\"\n                                        value ={this.state.max}\n                                        onChange={this.changeMax} required/>\n                                <div className='eventError' id={this.state.error} >\n                                    {this.state.errorMessage}\n                                </div>\n                                <div id=\"buttonbox\">\n                                    <input type='submit' className='button' id='add_event' value='Submit'/>\n                                </div>\n                            </form>\n                        </dialog>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass EventItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.goToEvent = this.goToEvent.bind(this);\n    }\n\n    goToEvent(event) {\n        event.preventDefault();\n        this.props.storage.setEvent(this.props.Event);\n        this.props.history.push('/planner');\n    }\n\n    render() {\n        return (\n            <li key={this.props.Key} className='eventItem' onClick={this.goToEvent}>{this.props.Event.name}</li>\n        );\n    }\n}\n\n\nexport default withRouter(EventList);\n","import ls from 'local-storage';\nimport {Guest, User} from \"./User\";\nimport {addEvent} from \"./Validator\";\n\nexport class LocalStorage {\n    constructor() {\n        if (ls('guestList') === null)\n            ls('guestList', []);\n        if (ls('itemList') === null)\n            ls('itemList', []);\n        if (ls('eventList') === null)\n            ls('eventList', []);\n        if (ls('curUser') === null)\n            ls('curUser', undefined);\n        if (ls('curEvent') == null)\n            ls('curEvent', undefined);\n        if (ls('signed') === null)\n            ls('signed', false);\n    }\n\n    setUser(newUser) {\n        if (newUser instanceof User) {\n            ls('curUser', newUser);\n            ls('signed', true);\n            return true;\n        } else {\n            return false;\n        }\n    }\n    getUser() {\n        return ls('curUser').userName;\n    }\n    addGuest() {\n\n    }\n    addEvent(state) {\n        let eventList = ls('eventList');\n        let added = addEvent(state, this.getUser());\n        if (added[0]) {\n            eventList.push(added[1]);\n            ls('eventList', eventList);\n        }\n        return added;\n    }\n    setEvent(newEvent) {\n        ls('curEvent', newEvent);\n    }\n    getEvent() {\n        return ls('curEvent');\n    }\n    getEvents() {\n        return ls('eventList');\n    }\n\n    clear() {\n        ls('curUser', undefined);\n        ls('curEvent', undefined);\n        ls('guestList', []);\n        ls('itemList', []);\n        ls('eventList', []);\n        ls('signed', false);\n    }\n\n    isSigned() {\n        return ls('signed');\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {LocalStorage} from \"../services/LocalStorage\";\n\nexport default function RouteWrapper({\n    isPrivate,\n    storage,\n    ...rest\n    }) {\n\n    /**\n     * Redirect user to SignIn page if he tries to access a private route\n     * without authentication.\n     */\n    if (isPrivate && !storage.isSigned()) {\n        return <Redirect to=\"/\" />;\n    }\n\n    /**\n     * If not included on both previous cases, redirect user to the desired route.\n     */\n    return <Route {...rest} />;\n}\n\nRouteWrapper.propTypes = {\n    isPrivate: PropTypes.bool,\n    storage: PropTypes.instanceOf(LocalStorage).isRequired\n};\n\nRouteWrapper.defaultProps = {\n    isPrivate: false\n};","import React from \"react\";\nimport { BrowserRouter, Switch} from \"react-router-dom\";\nimport Login from '../pages/Login';\nimport Register from '../pages/Register';\nimport Planner from '../pages/Planner';\nimport Guest from '../pages/Guest';\nimport Events from '../pages/Events';\nimport Route from './Route'\nimport {LocalStorage} from '../services/LocalStorage'\n\nexport default function Routes() {\n    let storage = new LocalStorage();\n    return (\n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact\n                   render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path=\"/register\"\n                   render = {(props) =><Register{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path = \"/events\"\n                    render = {(props) =><Events{...props} history = {Routes.history} storage = {storage}/>}\n                    isPrivate = {true} storage={storage}\n            />\n            <Route path=\"/planner\"\n                   render = {(props) =><Planner{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            <Route path=\"/guest\"\n                   render = {(props) =><Guest{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            {/* redirect user to Login page if route does not exist and user is not authenticated */}\n            <Route\n                render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                storage={storage}\n            />\n        </Switch>\n       </BrowserRouter>\n    );\n}\n","import React from 'react';\nimport { Router } from 'react-router';\n\nimport history from './services/history';\nimport Routes from './routes';\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <Routes  />\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"mainbox\"));\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}