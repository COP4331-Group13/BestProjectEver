{"version":3,"sources":["services/history.js","services/User.js","services/Validator.js","pages/Login/index.js","pages/Register/index.js","pages/Planner/index.js","pages/Guest/index.js","pages/Events/index.js","services/LocalStorage.js","routes/Route.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","User","userName","this","callAuthenticate","state","xhr","XMLHttpRequest","open","setRequestHeader","send","user","pass","status","registerPlanner","storage","repass","match","name","authCode","callRegister","newUser","setUser","LoginBox","props","clear","id","React","Component","GuestLogin","gID","error","changeGID","bind","handleSubmit","event","target","value","length","setState","substr","preventDefault","push","className","onSubmit","type","placeholder","onChange","PlannerLogin","changeUser","changePass","handleRegister","validated","validatePlanner","errorMessage","console","log","data-testid","required","onClick","withRouter","RegisterBox","changeName","changeRepass","registered","CreateGuest","clicked","email","phone","address","openDialog","closeDialog","changeEmail","changeAddress","changePhone","document","getElementById","style","display","Planner","Guest","GuestView","EventList","eventList","getEvents","listItems","i","Key","Event","setEvent","undefined","listLength","addEvent","prevState","getUser","EventItem","goToEvent","key","LocalStorage","ls","curUser","newEvent","curEvent","guestList","itemList","RouteWrapper","isPrivate","rest","hasUser","to","Routes","path","exact","render","Login","Register","Events","defaultProps","App","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yOAEeA,EADCC,c,kDCDHC,G,MAET,WAAYC,GAAW,oBACnBC,KAAKD,SAAWA,ICDxB,SAASE,EAAiBC,GACxB,IAAMC,EAAM,IAAIC,eAKhB,OAJAD,EAAIE,KAAK,OAAQ,wCAAwC,GACzDF,EAAIG,iBAAiB,eAAgB,qCACrCH,EAAII,KAAK,SAASL,EAAMM,KAAK,aAAaN,EAAMO,MACrCN,EAAIO,OAkCV,SAASC,EAAgBT,EAAOU,GAInC,GAAIV,EAAMO,OAASP,EAAMW,OACvB,MAAO,EAAC,EAAO,0BACV,GAAKX,EAAMM,KAAKM,MALL,kDAOX,IAAKZ,EAAMO,KAAKK,MANN,+CAQV,IAAmB,KAAfZ,EAAMa,MAA8B,KAAfb,EAAMM,MAA8B,KAAfN,EAAMO,MAAgC,KAAjBP,EAAMW,OAAc,CAC1F,IAAIG,EAAWf,EAAiBC,GAChC,GAAiB,MAAbc,GAAiC,MAAbA,EACtB,MAAO,EAAC,EAAD,wCAAyCd,EAAMM,OACjD,GAAiB,MAAbQ,EAAkB,CAEzB,GAAqB,MA9CjC,SAAsBd,GACpB,IAAMC,EAAM,IAAIC,eAKhB,OAJAD,EAAIE,KAAK,OAAQ,2CAA2C,GAC5DF,EAAIG,iBAAiB,eAAgB,qCACrCH,EAAII,KAAK,aAAaL,EAAMa,KAAK,UAAUb,EAAMM,KAAK,aAAaN,EAAMO,MAC9DN,EAAIO,OAwCcO,CAAaf,GACN,CACxB,IAAIgB,EAAU,IAAIpB,EAAKI,EAAMM,MAE7B,OADAI,EAAQO,QAAQD,GACT,EAAC,GAEJ,MAAO,EAAC,EAAO,sBAGtB,MAAO,EAAC,EAAO,sBAGlB,MAAO,EAAC,EAAO,6BAlBf,MAAO,EAAC,EAAO,yJAFf,MAAO,EAAC,EAAD,UAAWhB,EAAMM,KAAjB,kCC1CR,IAAMY,EAAb,YACI,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDA,MAAMT,QAAQU,QAFJ,EADvB,sEASQ,OACI,yBAAKC,GAAK,cACN,yBAAKA,GAAK,WACN,2DACA,gFAEJ,yBAAKA,GAAK,YACN,kBAAC,EAAD,CAAc3B,QAAWI,KAAKqB,MAAMzB,QAASgB,QAAWZ,KAAKqB,MAAMT,UACnE,kBAAC,EAAD,CAAYhB,QAAWI,KAAKqB,MAAMzB,QAASgB,QAAWZ,KAAKqB,MAAMT,gBAjBrF,GAA8BY,IAAMC,WAyBvBC,EAAb,YAEI,WAAYL,GAAQ,IAAD,8BACf,4CAAMA,KACDnB,MAAQ,CAACyB,IAAK,GAAIC,MAAO,cAE9B,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBALL,EAFvB,uEAUcE,GACFA,EAAMC,OAAOC,MAAMC,OAAS,GAC5BnC,KAAKoC,SAAS,CAACT,IAAKK,EAAMC,OAAOC,MAAMG,OAAO,EAAE,MAEhDrC,KAAKoC,SAAS,CAACT,IAAKK,EAAMC,OAAOC,UAd7C,mCAkBiBF,GD7BV,IAAuBL,EC8BtBK,EAAMM,iBD7BK,MADWX,EC+BJ3B,KAAKE,MAAMyB,MD9BG,KAAfA,EAAIQ,OC+BjBnC,KAAKqB,MAAMzB,QAAQ2C,KAAK,UAExBvC,KAAKoC,SAAS,CAACR,MAAO,iBAvBlC,+BA6BQ,OACI,yBAAKY,UAAU,MAAMjB,GAAI,cACrB,8CACA,0BAAMkB,SAAWzC,KAAK+B,cAClB,yBAAKS,UAAU,WACX,2BAAOE,KAAM,OAAOF,UAAU,UAAUjB,GAAG,UACpCoB,YAAY,kBAAkBT,MAAOlC,KAAKE,MAAMyB,IAAKiB,SAAU5C,KAAK6B,YAC3E,yBAAKW,UAAU,aAAajB,GAAIvB,KAAKE,MAAM0B,OAA3C,qBAIJ,2BAAOc,KAAK,SAASF,UAAU,SAASjB,GAAG,QAAQW,MAAM,mBAxC7E,GAAgCV,IAAMC,WAgDzBoB,EAAb,YAEI,WAAYxB,GAAQ,IAAD,8BACf,4CAAMA,KACDnB,MAAQ,CAACM,KAAK,GAAIC,KAAK,GAAImB,MAAM,gBAEtC,EAAKkB,WAAa,EAAKA,WAAWhB,KAAhB,gBAClB,EAAKiB,WAAa,EAAKA,WAAWjB,KAAhB,gBAClB,EAAKkB,eAAiB,EAAKA,eAAelB,KAApB,gBACtB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,EAFvB,wEAYeE,GACPhC,KAAKoC,SAAS,CAAC5B,KAAMwB,EAAMC,OAAOC,UAb1C,iCAgBeF,GACPhC,KAAKoC,SAAS,CAAC3B,KAAMuB,EAAMC,OAAOC,UAjB1C,qCAoBmBF,GACXA,EAAMM,iBACNtC,KAAKqB,MAAMzB,QAAQ2C,KAAK,eAtBhC,mCAyBiBP,GACTA,EAAMM,iBACN,IAAIW,EDlFL,SAAyB/C,EAAOU,GACnC,GAAmB,KAAfV,EAAMM,MAA8B,KAAfN,EAAMO,KAAa,CACxC,IAAIO,EAAWf,EAAiBC,GAChC,GAAiB,MAAbc,EAAkB,CACpB,IAAIE,EAAU,IAAIpB,EAAKI,EAAMM,MAE7B,OADAI,EAAQO,QAAQD,GACT,EAAC,GACH,OAAiB,MAAbF,EACF,EAAC,EAAO,6BAER,EAAC,EAAO,qBAGjB,MAAO,EAAC,EAAO,6BCqECkC,CAAgBlD,KAAKE,MAAOF,KAAKqB,MAAMT,SACnDqC,EAAU,GACfjD,KAAKqB,MAAMzB,QAAQ2C,KAAK,YAExBvC,KAAKoC,SAAS,CAACR,MAAO,eACtB5B,KAAKoC,SAAS,CAACe,aAAcF,EAAU,MAExCG,QAAQC,IAAIJ,EAAU,MAlC5B,+BAuCQ,OACI,yBAAKT,UAAW,MAAMjB,GAAI,gBACtB,gDACA,0BAAM+B,cAAY,mBAAmBb,SAAUzC,KAAK+B,cAChD,yBAAKS,UAAU,WACX,2BAAOc,cAAatD,KAAKE,MAAMM,KAAMkC,KAAK,OAAOF,UAAU,UAAUjB,GAAG,QAAQgC,UAAQ,EACjFZ,YAAY,SAAST,MAAOlC,KAAKE,MAAMM,KAAMoC,SAAW5C,KAAK8C,aACpE,2BAAOQ,cAAatD,KAAKE,MAAMO,KAAMiC,KAAK,WAAWF,UAAU,UAAUjB,GAAG,OAAOgC,UAAQ,EACpFZ,YAAY,WAAWT,MAAQlC,KAAKE,MAAMO,KAAMmC,SAAU5C,KAAK+C,aACtE,yBAAKP,UAAU,aAAajB,GAAIvB,KAAKE,MAAM0B,OACtC5B,KAAKE,MAAMiD,eAGpB,yBAAK5B,GAAG,cAAciC,QAASxD,KAAKgD,gBAApC,oCAGA,2BAAON,KAAK,SAASF,UAAU,SAASjB,GAAG,UAAUW,MAAM,gBAvD/E,GAAkCV,IAAMC,WA+DzBgC,cAAWrC,GCzIpBsC,E,YAEL,WAAYrC,GAAQ,IAAD,8BAClB,4CAAMA,KAEDnB,MAAQ,CAACa,KAAM,GAAIP,KAAK,GAAIC,KAAK,GAAII,OAAO,GAAIe,MAAM,eAAgBuB,aAAa,wBAExF,EAAKQ,WAAa,EAAKA,WAAW7B,KAAhB,gBAClB,EAAKgB,WAAa,EAAKA,WAAWhB,KAAhB,gBAClB,EAAKiB,WAAa,EAAKA,WAAWjB,KAAhB,gBAClB,EAAK8B,aAAe,EAAKA,aAAa9B,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATF,E,wEAYRE,GACThC,KAAKoC,SAAS,CAACrB,KAAMiB,EAAMC,OAAOC,U,iCAGzBF,GACThC,KAAKoC,SAAS,CAAC5B,KAAMwB,EAAMC,OAAOC,U,iCAGzBF,GACThC,KAAKoC,SAAS,CAAC3B,KAAMuB,EAAMC,OAAOC,U,mCAGvBF,GACXhC,KAAKoC,SAAS,CAACvB,OAAQmB,EAAMC,OAAOC,U,mCAIzBF,GACZA,EAAMM,iBACN,IAAIuB,EAAalD,EAAgBX,KAAKE,MAAOF,KAAKqB,MAAMT,SACpDiD,EAAW,GACd7D,KAAKqB,MAAMzB,QAAQ2C,KAAK,YAExBvC,KAAKoC,SAAS,CAACR,MAAO,eACtB5B,KAAKoC,SAAS,CAACe,aAAcU,EAAW,MAEzCT,QAAQC,IAAIQ,EAAW,M,+BAKvB,OACC,yBAAKrB,UAAU,WAAWjB,GAAK,cAC9B,0BAAMA,GAAG,cAAckB,SAAUzC,KAAK+B,cAC/B,wBAAIR,GAAG,iBAAP,uBACA,yBAAKA,GAAG,UACL,2BAAOmB,KAAK,OAAOF,UAAU,UAAUjB,GAAG,YAAYgC,UAAQ,EAACZ,YAAY,YAC5ET,MAAQlC,KAAKE,MAAMa,KAAM6B,SAAU5C,KAAK2D,aACvC,2BAAOjB,KAAK,OAAOF,UAAU,UAAUjB,GAAG,SAASgC,UAAQ,EAACZ,YAAY,iBACzET,MAAOlC,KAAKE,MAAMM,KAAMoC,SAAW5C,KAAK8C,aACvC,2BAAOJ,KAAK,WAAWF,UAAU,UAAUjB,GAAG,WAAWgC,UAAQ,EAACZ,YAAY,WAC/ET,MAAQlC,KAAKE,MAAMO,KAAMmC,SAAU5C,KAAK+C,aACvC,2BAAOL,KAAK,WAAWF,UAAU,UAAUjB,GAAG,cAAcgC,UAAQ,EAACZ,YAAY,oBACnFT,MAAQlC,KAAKE,MAAMW,OAAQ+B,SAAU5C,KAAK4D,eAC7C,yBAAKpB,UAAU,aAAajB,GAAIvB,KAAKE,MAAM0B,OACzC5B,KAAKE,MAAMiD,eAGX,2BAAOT,KAAK,SAASF,UAAU,SAASjB,GAAG,UAAUW,MAAM,yB,GA9D5CV,IAAMC,WAsEjBgC,cAAWC,GCxEpBI,E,YACL,WAAYzC,GAAQ,IAAD,8BAClB,4CAAMA,KACDnB,MAAQ,CAAC6D,QAAS,QAAShD,KAAM,GAAIiD,MAAO,GAAIC,MAAO,GAAIC,QAAS,IAGzE,EAAKC,WAAa,EAAKA,WAAWrC,KAAhB,gBAClB,EAAKsC,YAAc,EAAKA,YAAYtC,KAAjB,gBACnB,EAAK6B,WAAa,EAAKA,WAAW7B,KAAhB,gBAClB,EAAKuC,YAAc,EAAKA,YAAYvC,KAAjB,gBACnB,EAAKwC,cAAgB,EAAKA,cAAcxC,KAAnB,gBACrB,EAAKyC,YAAc,EAAKA,YAAYzC,KAAjB,gBAVD,E,0EAclB0C,SAASC,eAAe,aAAaC,MAAMC,QAAU,U,oCAIrDH,SAASC,eAAe,aAAaC,MAAMC,QAAU,S,iCAG3C3C,GACVhC,KAAKoC,SAAS,CAACrB,KAAMiB,EAAMC,OAAOC,U,kCAGvBF,GACXhC,KAAKoC,SAAS,CAAC4B,MAAOhC,EAAMC,OAAOC,U,oCAGtBF,GACbhC,KAAKoC,SAAS,CAAC8B,QAASlC,EAAMC,OAAOC,U,kCAG1BF,GACXhC,KAAKoC,SAAS,CAAC6B,MAAOjC,EAAMC,OAAOC,U,+BAG1B,IAAD,OACR,OACC,yBAAKX,GAAG,cACP,yBAAKA,GAAK,WACT,2CACA,2BAAOmB,KAAK,SAASF,UAAU,SAASjB,GAAG,YAAYW,MAAM,YAAYsB,QAAS,kBAAM,EAAKW,iBAG9F,yBAAK5C,GAAG,aACP,4BAAQlB,MAAI,GACX,2CACA,8BACC,2BAAOqC,KAAK,OAAOF,UAAU,UAAUjB,GAAG,OACzCoB,YAAY,OAAOC,SAAU5C,KAAK2D,aACnC,2BAAOjB,KAAK,OAAOF,UAAU,UAAUjB,GAAG,QACzCoB,YAAY,SAASC,SAAU5C,KAAKqE,cACrC,2BAAO3B,KAAK,OAAOF,UAAU,UAAUjB,GAAG,QACzCoB,YAAY,eAAeC,SAAU5C,KAAKuE,cAC3C,2BAAO7B,KAAK,OAAOF,UAAU,UAAUjB,GAAG,UACzCoB,YAAY,UAAUC,SAAU5C,KAAKsE,iBAEvC,yBAAK/C,GAAG,aACP,2BAAOmB,KAAK,SAASF,UAAU,SAASjB,GAAG,YAAYW,MAAM,SAASsB,QAAS,kBAAM,EAAKY,yB,GA5DvE5C,IAAMC,WAsEjB,SAASmD,IACvB,OAAO,kBAAC,EAAD,MCvEO,SAASC,IACpB,OAAO,kBAAC,EAAD,M,IAGLC,E,iLAGE,OACI,yBAAKvD,GAAK,WACN,yDACA,6E,GANQC,IAAMC,W,QCHjBsD,EAAb,YAEI,WAAY1D,GAAQ,IAAD,uBACf,4CAAMA,KACDnB,MAAQ,CAAC8E,UAAU,EAAK3D,MAAMT,QAAQqE,YAAaC,UAAU,IAClE,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAKjF,MAAM8E,UAAU7C,OAAQgD,IAC7C,EAAKjF,MAAMgF,UAAU3C,KACjB,kBAAC,EAAD,CACI6C,IAAKD,EACLE,MAAO,EAAKnF,MAAM8E,UAAUG,GAC5BvE,QAAW,EAAKS,MAAMT,QACtBhB,QAAW,EAAKyB,MAAMzB,WATnB,OAYf,EAAKyB,MAAMT,QAAQ0E,cAASC,GAC5B,EAAKxD,aAAe,EAAKA,aAAaD,KAAlB,gBAbL,EAFvB,0EAoBiBE,GAAQ,IAAD,OAChBA,EAAMM,iBACN,IAAIkD,EAAaxF,KAAKE,MAAM8E,UAAU7C,OACtCnC,KAAKqB,MAAMT,QAAQ6E,SAAS,QAAWzF,KAAKE,MAAM8E,UAAU7C,QAC5DnC,KAAKoC,SAAS,CAAC4C,UAAWhF,KAAKqB,MAAMT,QAAQqE,cAC7CjF,KAAKoC,UAAS,SAAAsD,GAAS,MAAK,CACxBR,UAAU,GAAD,mBAAMQ,EAAUR,WAAhB,CAA2B,kBAAC,EAAD,CAChCE,IAAKI,EACLH,MAAS,QAAUG,EACnB5E,QAAW,EAAKS,MAAMT,QACtBhB,QAAW,EAAKyB,MAAMzB,kBA9BtC,+BAoCQ,OACI,yBAAK2B,GAAG,cACJ,yBAAKA,GAAK,WACN,wCAAcvB,KAAKqB,MAAMT,QAAQ+E,UAAjC,MAEJ,yBAAKpE,GAAG,eACJ,wBAAIA,GAAG,aAAavB,KAAKE,MAAMgF,WAC/B,2BAAOxC,KAAK,SAASF,UAAU,SAASjB,GAAG,YAAYW,MAAM,YAAYsB,QAASxD,KAAK+B,qBA3C3G,GAA+BP,IAAMC,WAkD/BmE,E,YACF,WAAYvE,GAAQ,IAAD,8BACf,4CAAMA,KACDwE,UAAY,EAAKA,UAAU/D,KAAf,gBAFF,E,uEAKTE,GACNA,EAAMM,iBACNtC,KAAKqB,MAAMT,QAAQ0E,SAAStF,KAAKqB,MAAMgE,OACvCrF,KAAKqB,MAAMzB,QAAQ2C,KAAK,c,+BAIxB,OACI,wBAAIuD,IAAK9F,KAAKqB,MAAM+D,IAAK5C,UAAU,YAAYgB,QAASxD,KAAK6F,WAAY7F,KAAKqB,MAAMgE,W,GAdxE7D,IAAMC,WAoBfgC,cAAWsB,G,yBCvEbgB,EAAb,WACI,aAAe,oBAEXC,IAAG,YADe,IAGlBA,IAAG,WADc,IAGjBA,IAAG,YADe,IAN1B,oDAaY9E,GACJ,OAAIA,aAAmBpB,IACnBE,KAAKiG,QAAU/E,EACf8E,IAAG,UAAWhG,KAAKiG,UACZ,KAjBnB,gCAuBQ,OAAOjG,KAAKiG,QAAQlG,WAvB5B,mEA4BamG,GACLlG,KAAKgF,UAAUzC,KAAK2D,GACpBF,IAAG,YAAahG,KAAKgF,aA9B7B,+BAiCakB,GACLlG,KAAKmG,SAAWD,EAChBF,IAAG,WAAYhG,KAAKmG,YAnC5B,kCAsCQ,OAAOH,IAAG,eAtClB,8BA0CQhG,KAAKiG,aAAUV,EACfS,IAAG,UAAWhG,KAAKiG,SACnBjG,KAAKmG,cAAWZ,EAChBS,IAAG,WAAYhG,KAAKmG,UACpBnG,KAAKoG,UAAY,GACjBJ,IAAG,YAAahG,KAAKoG,WACrBpG,KAAKqG,SAAW,GAChBL,IAAG,WAAYhG,KAAKqG,UACpBrG,KAAKgF,UAAY,GACjBgB,IAAG,YAAahG,KAAKgF,aAnD7B,gCAwDQ,YAAwBO,IAAjBvF,KAAKiG,YAxDpB,KCEe,SAASK,EAAT,GAIP,IAHJC,EAGG,EAHHA,UACA3F,EAEG,EAFHA,QACG4F,EACA,uCAMH,OAAID,IAAc3F,EAAQ6F,UACf,kBAAC,IAAD,CAAUC,GAAG,MAMjB,kBAAC,IAAUF,GCZP,SAASG,IACpB,IAAI/F,EAAU,IAAImF,EAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAOa,KAAK,IAAIC,OAAK,EACdC,OAAU,SAACzF,GAAD,OAAU,kBAAC0F,EAAD,iBAAU1F,EAAV,CAAiBzB,QAAW+G,EAAO/G,QAASgB,QAAWA,MAC3EA,QAASA,IAEhB,kBAAC,EAAD,CAAOgG,KAAK,YACLE,OAAU,SAACzF,GAAD,OAAU,kBAAC2F,EAAD,iBAAa3F,EAAb,CAAoBzB,QAAW+G,EAAO/G,QAASgB,QAAWA,MAC9EA,QAASA,IAEhB,kBAAC,EAAD,CAAOgG,KAAO,UACNE,OAAU,SAACzF,GAAD,OAAU,kBAAC4F,EAAD,iBAAW5F,EAAX,CAAkBzB,QAAW+G,EAAO/G,QAASgB,QAAWA,MAC5E2F,WAAa,EAAM3F,QAASA,IAEpC,kBAAC,EAAD,CAAOgG,KAAK,WACLE,OAAU,SAACzF,GAAD,OAAU,kBAACuD,EAAD,iBAAYvD,EAAZ,CAAmBzB,QAAW+G,EAAO/G,QAASgB,QAAWA,MAC7E2F,WAAa,EAAM3F,QAASA,IAEnC,kBAAC,EAAD,CAAOgG,KAAK,SACLE,OAAU,SAACzF,GAAD,OAAU,kBAAC,EAAD,iBAAUA,EAAV,CAAiBzB,QAAW+G,EAAO/G,QAASgB,QAAWA,MAC3E2F,WAAa,EAAM3F,QAASA,IAGnC,kBAAC,EAAD,CACIkG,OAAU,SAACzF,GAAD,OAAU,kBAAC0F,EAAD,iBAAU1F,EAAV,CAAiBzB,QAAW+G,EAAO/G,QAASgB,QAAWA,MAC3EA,QAASA,MDRzB0F,EAAaY,aAAe,CACxBX,WAAW,GEjBAY,MARf,WACI,OACI,kBAAC,IAAD,CAAQvH,QAASA,GACb,kBAAC+G,EAAD,QCGQS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzG,MACvB,2DCbN0G,IAASV,OAAO,kBAAC,EAAD,MAAStC,SAASC,eAAe,YD8H3C,kBAAmBgD,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.04009415.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default history;","export class User {\n\n    constructor(userName) {\n        this.userName = userName;\n    }\n}\n\nexport class Guest extends User {\n\n}","import {User} from \"./User\";\n\nfunction callAuthenticate(state) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/login\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"email=\"+state.user+\"&password=\"+state.pass);\n  var code = xhr.status;\n  return code;\n}\n\nfunction callRegister(state) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/register\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"full_name=\"+state.name+\"&email=\"+state.user+\"&password=\"+state.pass);\n  var code = xhr.status;\n  return code;\n}\n\nexport function validateGuest(gID) {\n    return gID !== \"\" && gID.length === 10;\n}\n\nexport function validatePlanner(state, storage) {\n    if (state.user !== \"\" && state.pass !== \"\") {\n        var authCode = callAuthenticate(state);\n        if (authCode === 200) { // account exists\n          let newUser = new User(state.user);\n          storage.setUser(newUser);\n          return [true];\n        } else if (authCode === 204) { // email or password are wrong\n          return [false, 'Invalid email or password']\n        } else { // error sending query 400\n          return [false, 'Error has occured']\n        }\n    } else {\n        return [false, 'Please fill in all fields'];\n    }\n}\n\nexport function registerPlanner(state, storage) {\n    var emailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,24})+$/;\n    var passFormat = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n\n    if (state.pass !== state.repass) {\n      return [false, 'Passwords do not match']\n    } else if (!state.user.match(emailFormat)) {\n        return [false, `${state.user} is not a valid email address`]\n    } else if (!state.pass.match(passFormat)){\n        return [false, 'Passwords must be at least 8 characters long; contain at least 1 lower case letter [a-z]; at least 1 upper case letter [A-Z]; at least 1 number [0-9]']\n    } else if (state.name !== \"\" && state.user !== \"\" && state.pass !== \"\" && state.repass !== \"\"){\n        var authCode = callAuthenticate(state);\n        if (authCode === 200 || authCode === 204) { // email with password already exists\n          return [false, `An account already exists for ${state.user}`]\n        } else if (authCode === 205) { // email does not exist\n            var registerCode = callRegister(state);\n            if (registerCode === 200) {\n              let newUser = new User(state.user);\n              storage.setUser(newUser);\n              return [true];\n            } else { // error sending query 400\n                  return [false, 'Error has occurred']\n            }\n        } else { // error sending query 400\n           return [false, 'Error has occurred']\n        }\n    } else {\n        return [false, 'Please fill in all fields']\n    }\n}\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {validatePlanner, validateGuest} from \"../../services/Validator\";\n\n\nexport class LoginBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.storage.clear();\n\n    }\n\n    render() {\n\n        return (\n            <div id = \"wrapperbox\">\n                <div id = \"welcome\">\n                    <h1>Welcome to Best Fit Seating</h1>\n                    <h1>Are you here as an Event Planner or as a Guest?</h1>\n                </div>\n                <div id = \"loginbox\">\n                    <PlannerLogin history = {this.props.history} storage = {this.props.storage}/>\n                    <GuestLogin history = {this.props.history} storage = {this.props.storage}/>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport class GuestLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {gID: '', error: \"guestError\"};\n\n        this.changeGID = this.changeGID.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeGID(event) {\n        if (event.target.value.length > 10) {\n            this.setState({gID: event.target.value.substr(0,10)});\n        } else {\n            this.setState({gID: event.target.value});\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (validateGuest(this.state.gID)) {\n            this.props.history.push('/guest');\n        } else {\n            this.setState({error: 'loginError'});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className='box' id= 'guestLogin'>\n                <h2>Login as Guest</h2>\n                <form onSubmit= {this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input type= 'text' className='textBox' id='guestID'\n                               placeholder='Unique Guest ID' value={this.state.gID} onChange={this.changeGID} />\n                        <div className='loginError' id={this.state.error}>\n                            Invalid Guest ID\n                        </div>\n                    </div>\n                    <input type='submit' className='button' id='guest' value='CONTINUE' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport class PlannerLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {user:'', pass:'', error:'plannerError'};\n\n        this.changeUser = this.changeUser.bind(this);\n        this.changePass = this.changePass.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeUser(event) {\n        this.setState({user: event.target.value});\n    }\n\n    changePass(event) {\n        this.setState({pass: event.target.value});\n    }\n\n    handleRegister(event) {\n        event.preventDefault();\n        this.props.history.push('/register');\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let validated = validatePlanner(this.state, this.props.storage);\n        if (validated[0]) {\n    \t\t\tthis.props.history.push('/events');\n    \t\t} else {\n    \t\t\tthis.setState({error: 'loginError'});\n    \t\t\tthis.setState({errorMessage: validated[1]});\n    \t\t}\n    \t\tconsole.log(validated[0]);\n    }\n\n    render () {\n\n        return (\n            <div className= 'box' id= 'plannerLogin'>\n                <h2>Login as Planner</h2>\n                <form data-testid=\"plannerLoginForm\" onSubmit={this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input data-testid={this.state.user} type='text' className='textBox' id='email' required\n                               placeholder='E-mail' value={this.state.user} onChange={ this.changeUser} />\n                        <input data-testid={this.state.pass} type='password' className='textBox' id='pass' required\n                               placeholder='Password' value ={this.state.pass} onChange={this.changePass} />\n                        <div className='loginError' id={this.state.error}>\n                            {this.state.errorMessage}\n                        </div>\n                    </div>\n                    <div id='newRegister' onClick={this.handleRegister}>\n                        New User? Click Here to Register\n                    </div>\n                    <input type='submit' className='button' id='planner' value='LOGIN' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport default withRouter(LoginBox);\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\"\nimport {registerPlanner} from \"../../services/Validator\";\n\nclass RegisterBox extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {name: '', user:'', pass:'', repass:'', error:'plannerError', errorMessage:\"Invalid Registration\"};\n\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeUser = this.changeUser.bind(this);\n\t\tthis.changePass = this.changePass.bind(this);\n\t\tthis.changeRepass = this.changeRepass.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tchangeName(event) {\n\t\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeUser(event) {\n\t\t\tthis.setState({user: event.target.value});\n\t}\n\n\tchangePass(event) {\n\t\t\tthis.setState({pass: event.target.value});\n\t}\n\n\tchangeRepass(event) {\n\t\t\tthis.setState({repass: event.target.value});\n\t}\n\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tlet registered = registerPlanner(this.state, this.props.storage);\n\t\tif (registered[0]) {\n\t\t\tthis.props.history.push('/events');\n\t\t} else {\n\t\t\tthis.setState({error: 'loginError'});\n\t\t\tthis.setState({errorMessage: registered[1]});\n\t\t}\n\t\tconsole.log(registered[0]);\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className='userMain' id = 'wrapperbox'>\n\t\t\t\t<form id='registerBox' onSubmit={this.handleSubmit}>\n        \t\t\t<h1 id='registerTitle'>Account Information</h1>\n        \t\t\t<div id='inputs'>\n          \t\t\t\t<input type='text' className='textBox' id='firstName' required placeholder='Full Name'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.name} onChange={this.changeName}/>\n          \t\t\t\t<input type='text' className='textBox' id='e-mail' required placeholder='E-mail Address'\n\t\t\t\t\t\t\t\t\t\t\t\t value={this.state.user} onChange={ this.changeUser}/>\n          \t\t\t\t<input type='password' className='textBox' id='password' required placeholder='Password'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.pass} onChange={this.changePass}/>\n          \t\t\t\t<input type='password' className='textBox' id='re_password' required placeholder='Re-Enter Password'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue ={this.state.repass} onChange={this.changeRepass}/>\n\t\t\t\t\t\t\t\t\t<div className='loginError' id={this.state.error} >\n\t\t\t\t\t\t\t\t\t\t{this.state.errorMessage}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n        \t\t\t<input type='submit' className='button' id='newUser' value='Create Account' />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default withRouter(RegisterBox);\n","import React from 'react';\nimport '../../SeatPlanner.css';\n\nclass CreateGuest extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {clicked: 'false', name: '', email: '', phone: '', address: ''};\n\n\n\t\tthis.openDialog = this.openDialog.bind(this);\n\t\tthis.closeDialog = this.closeDialog.bind(this);\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeEmail = this.changeEmail.bind(this);\n\t\tthis.changeAddress = this.changeAddress.bind(this);\n\t\tthis.changePhone = this.changePhone.bind(this);\n\t}\n\n\topenDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'block';\n\t}\n\n\tcloseDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'none';\n\t}\n\n\tchangeName(event) {\n\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeEmail(event) {\n\t\tthis.setState({email: event.target.value});\n\t}\n\n\tchangeAddress(event) {\n\t\tthis.setState({address: event.target.value});\n\t}\n\n\tchangePhone(event) {\n\t\tthis.setState({phone: event.target.value});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"wrapperbox\">\n\t\t\t\t<div id = \"welcome\">\n\t\t\t\t\t<h1>Event Title</h1>\n\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Add Guest' onClick={() => this.openDialog()}/>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"dialogbox\">\n\t\t\t\t\t<dialog open>\n\t\t\t\t\t\t<h1>Add a Guest</h1>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"name\"\n\t\t\t\t\t\t\t\tplaceholder=\"Name\" onChange={this.changeName}/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\" onChange={this.changeEmail}/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"phone\"\n\t\t\t\t\t\t\t\tplaceholder=\"Phone Number\" onChange={this.changePhone}/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"address\"\n\t\t\t\t\t\t\t\tplaceholder=\"Address\" onChange={this.changeAddress}/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<div id=\"buttonbox\">\n\t\t\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Submit' onClick={() => this.closeDialog()}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</dialog>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default function Planner() {\n\treturn <CreateGuest />\n}\n","import React from 'react';\nimport '../../SeatPlanner.css';\n\nexport default function Guest() {\n    return <GuestView />\n}\n\nclass GuestView extends React.Component {\n\n    render() {\n        return(\n            <div id = \"welcome\">\n                <h1>Welcome to the Guest Page</h1>\n                <h1>We are currently working on this page...</h1>\n            </div>\n        );\n    }\n}","import {withRouter} from \"react-router-dom\";\nimport '../../SeatPlanner.css';\nimport React from \"react\";\n\nexport class EventList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {eventList:this.props.storage.getEvents(), listItems:[]};\n        for (let i = 0; i < this.state.eventList.length; i++) {\n            this.state.listItems.push(\n                <EventItem\n                    Key={i}\n                    Event={this.state.eventList[i]}\n                    storage = {this.props.storage}\n                    history = {this.props.history}\n                />);\n        }\n        this.props.storage.setEvent(undefined);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let listLength = this.state.eventList.length;\n        this.props.storage.addEvent('Event' + (this.state.eventList.length));\n        this.setState({eventList: this.props.storage.getEvents()});\n        this.setState(prevState => ({\n            listItems: [...prevState.listItems, <EventItem\n                Key={listLength}\n                Event = {'Event' + listLength}\n                storage = {this.props.storage}\n                history = {this.props.history}\n            />]\n        }));\n    }\n\n    render() {\n        return (\n            <div id=\"wrapperbox\">\n                <div id = \"welcome\">\n                    <h1>Welcome, {this.props.storage.getUser()}!</h1>\n                </div>\n                <div id=\"listWrapper\">\n                    <ul id=\"eventList\">{this.state.listItems}</ul>\n                    <input type='submit' className='button' id='add_event' value='Add Event' onClick={this.handleSubmit}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass EventItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.goToEvent = this.goToEvent.bind(this);\n    }\n\n    goToEvent(event) {\n        event.preventDefault();\n        this.props.storage.setEvent(this.props.Event);\n        this.props.history.push('/planner');\n    }\n\n    render() {\n        return (\n            <li key={this.props.Key} className='eventItem' onClick={this.goToEvent}>{this.props.Event}</li>\n        );\n    }\n}\n\n\nexport default withRouter(EventList);","import ls from 'local-storage';\nimport {Guest, User} from \"./User\";\n\nexport class LocalStorage {\n    constructor() {\n        const guestList = [];\n        ls('guestList', guestList);\n        const itemList = [];\n        ls('itemList', itemList);\n        const eventList = [];\n        ls('eventList', eventList);\n        let curUser;\n        let curEvent;\n\n    }\n\n    setUser(newUser) {\n        if (newUser instanceof User) {\n            this.curUser = newUser;\n            ls('curUser', this.curUser);\n            return true;\n        } else {\n            return false;\n        }\n    }\n    getUser() {\n        return this.curUser.userName;\n    }\n    addGuest() {\n\n    }\n    addEvent(newEvent) {\n        this.eventList.push(newEvent);\n        ls('eventList', this.eventList);\n\n    }\n    setEvent(newEvent) {\n        this.curEvent = newEvent;\n        ls('curEvent', this.curEvent);\n    }\n    getEvents() {\n        return ls('eventList');\n    }\n\n    clear() {\n        this.curUser = undefined;\n        ls('curUser', this.curUser);\n        this.curEvent = undefined;\n        ls('curEvent', this.curEvent);\n        this.guestList = [];\n        ls('guestList', this.guestList);\n        this.itemList = [];\n        ls('itemList', this.itemList);\n        this.eventList = [];\n        ls('eventList', this.eventList);\n\n    }\n\n    hasUser() {\n        return this.curUser !== undefined;\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {LocalStorage} from \"../services/LocalStorage\";\n\nexport default function RouteWrapper({\n    isPrivate,\n    storage,\n    ...rest\n    }) {\n\n    /**\n     * Redirect user to SignIn page if he tries to access a private route\n     * without authentication.\n     */\n    if (isPrivate && !storage.hasUser()) {\n        return <Redirect to=\"/\" />;\n    }\n\n    /**\n     * If not included on both previous cases, redirect user to the desired route.\n     */\n    return <Route {...rest} />;\n}\n\nRouteWrapper.propTypes = {\n    isPrivate: PropTypes.bool,\n    storage: PropTypes.instanceOf(LocalStorage).isRequired\n};\n\nRouteWrapper.defaultProps = {\n    isPrivate: false\n};","import React from \"react\";\nimport { BrowserRouter, Switch} from \"react-router-dom\";\nimport Login from '../pages/Login';\nimport Register from '../pages/Register';\nimport Planner from '../pages/Planner';\nimport Guest from '../pages/Guest';\nimport Events from '../pages/Events';\nimport Route from './Route'\nimport {LocalStorage} from '../services/LocalStorage'\n\nexport default function Routes() {\n    let storage = new LocalStorage();\n    return (\n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact\n                   render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path=\"/register\"\n                   render = {(props) =><Register{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path = \"/events\"\n                    render = {(props) =><Events{...props} history = {Routes.history} storage = {storage}/>}\n                    isPrivate = {true} storage={storage}\n            />\n            <Route path=\"/planner\"\n                   render = {(props) =><Planner{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            <Route path=\"/guest\"\n                   render = {(props) =><Guest{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            {/* redirect user to Login page if route does not exist and user is not authenticated */}\n            <Route\n                render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                storage={storage}\n            />\n        </Switch>\n       </BrowserRouter>\n    );\n}\n","import React from 'react';\nimport { Router } from 'react-router';\n\nimport history from './services/history';\nimport Routes from './routes';\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <Routes  />\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"mainbox\"));\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}