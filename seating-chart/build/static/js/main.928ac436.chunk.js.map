{"version":3,"sources":["services/history.js","services/User.js","pages/Login/index.js","services/Validator.js","pages/Register/index.js","pages/Planner/index.js","pages/Guest/index.js","services/LocalStorage.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","User","userName","this","LoginBox","props","storage","clear","id","React","Component","GuestLogin","state","gID","error","changeGID","bind","handleSubmit","event","target","value","length","setState","substr","preventDefault","push","className","onSubmit","type","placeholder","onChange","PlannerLogin","user","pass","changeUser","changePass","handleRegister","newUser","setUser","validatePlanner","data-testid","onClick","withRouter","RegisterBox","name","repass","changeName","changeRepass","registerPlanner","alert","CreateGuest","clicked","email","phone","address","openDialog","closeDialog","changeEmail","changeAddress","changePhone","document","getElementById","style","display","open","Planner","Guest","GuestView","LocalStorage","ls","curUser","undefined","curEvent","guestList","itemList","eventList","Routes","path","exact","render","Login","Register","App","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.928ac436.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default history;","export class User {\n\n    constructor(userName) {\n        this.userName = userName;\n    }\n}\n\nexport class Guest extends User {\n\n}","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {validatePlanner, validateGuest} from \"../../services/Validator\";\n\n\nexport class LoginBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.storage.clear();\n\n    }\n\n    render() {\n\n        return (\n            <div id = \"wrapperbox\">\n                <div id = \"welcome\">\n                    <h1>Welcome to Best Fit Seating</h1>\n                    <h1>Are you here as an Event Planner or as a Guest?</h1>\n                </div>\n                <div id = \"loginbox\">\n                    <PlannerLogin history = {this.props.history} storage = {this.props.storage}/>\n                    <GuestLogin history = {this.props.history} storage = {this.props.storage}/>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport class GuestLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {gID: '', error: \"guestError\"};\n\n        this.changeGID = this.changeGID.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeGID(event) {\n        if (event.target.value.length > 10) {\n            this.setState({gID: event.target.value.substr(0,10)});\n        } else {\n            this.setState({gID: event.target.value});\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (validateGuest(this.state.gID)) {\n            this.props.history.push('/guest');\n        } else {\n            this.setState({error: 'loginError'});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className='box' id= 'guestLogin'>\n                <h2>Login as Guest</h2>\n                <form onSubmit= {this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input type= 'text' className='textBox' id='guestID'\n                               placeholder='Unique Guest ID' value={this.state.gID} onChange={this.changeGID} />\n                        <div className='loginError' id={this.state.error}>\n                            Invalid Guest ID\n                        </div>\n                    </div>\n                    <input type='submit' className='button' id='guest' value='CONTINUE' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport class PlannerLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {user:'', pass:'', error:'plannerError'};\n\n        this.changeUser = this.changeUser.bind(this);\n        this.changePass = this.changePass.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeUser(event) {\n        this.setState({user: event.target.value});\n    }\n\n    changePass(event) {\n        this.setState({pass: event.target.value});\n    }\n\n    handleRegister(event) {\n        event.preventDefault();\n        this.props.history.push('/register');\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (validatePlanner(this.state.user, this.state.pass, this.props.storage)) {\n            this.props.history.push('/planner');\n        } else {\n            this.setState({error: 'loginError'});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className= 'box' id= 'plannerLogin'>\n                <h2>Login as Planner</h2>\n                <form data-testid=\"plannerLoginForm\" onSubmit={this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input data-testid={this.state.user} type='text' className='textBox' id='email'\n                               placeholder='E-mail' value={this.state.user} onChange={ this.changeUser} />\n                        <input data-testid={this.state.pass} type='password' className='textBox' id='pass'\n                               placeholder='Password' value ={this.state.pass} onChange={this.changePass} />\n                        <div className='loginError' id={this.state.error}>\n                            Invalid Username/Password\n                        </div>\n                    </div>\n                    <div id='newRegister' onClick={this.handleRegister}>\n                        New User? Click Here to Register\n                    </div>\n                    <input type='submit' className='button' id='planner' value='LOGIN' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport default withRouter(LoginBox);","import {User} from \"./User\";\n\nexport function validateGuest(gID) {\n    return gID !== \"\" && gID.length === 10;\n}\n\nexport function validatePlanner(user, pass, storage) {\n    if (user !== \"\" && pass !== \"\") {\n        let newUser = new User(user);\n        storage.setUser(newUser);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function registerPlanner(name, user, pass, repass) {\n    if (pass !== repass) {\n      return false\n    } else {\n        return name !== \"\" && user !== \"\" && pass !== \"\" && repass !== \"\";\n      }\n}\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\"\nimport {registerPlanner} from \"../../services/Validator\";\nimport {User} from \"../../services/User\";\n\nclass RegisterBox extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {name: '', user:'', pass:'', repass:'', error:'plannerError'};\n\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeUser = this.changeUser.bind(this);\n\t\tthis.changePass = this.changePass.bind(this);\n\t\tthis.changeRepass = this.changeRepass.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tchangeName(event) {\n\t\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeUser(event) {\n\t\t\tthis.setState({user: event.target.value});\n\t}\n\n\tchangePass(event) {\n\t\t\tthis.setState({pass: event.target.value});\n\t}\n\n\tchangeRepass(event) {\n\t\t\tthis.setState({repass: event.target.value});\n\t}\n\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tif (registerPlanner(this.state.name, this.state.user, this.state.pass, this.state.repass)) {\n\t\t\tlet user = new User(this.state.user);\n\t\t\tif (this.props.storage.setUser(user)) {\n\t\t\t\tthis.props.history.push('/planner');\n\t\t\t} else {\n\t\t\t\t\talert(\"Cannot set \" + this.state.user + \" as Current User\");\n\t\t\t}\n\t\t} else {\n\t\t\t\tthis.setState({error: 'passError'});\n\t\t}\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className='userMain' id = 'wrapperbox'>\n\t\t\t\t<form id='registerBox' onSubmit={this.handleSubmit}>\n        \t\t\t<h1 id='registerTitle'>Account Information</h1>\n        \t\t\t<div id='inputs'>\n          \t\t\t\t<input type='text' className='textBox' id='firstName' placeholder='Full Name'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.name} onChange={this.changeName} />\n          \t\t\t\t<input type='text' className='textBox' id='e-mail' placeholder='E-mail Address'\n\t\t\t\t\t\t\t\t\t\t\t\t value={this.state.user} onChange={ this.changeUser}/>\n          \t\t\t\t<input type='password' className='textBox' id='password' placeholder='Password'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.pass} onChange={this.changePass}/>\n          \t\t\t\t<input type='password' className='textBox' id='re_password' placeholder='Re-Enter Password'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue ={this.state.repass} onChange={this.changeRepass}/>\n\t\t\t\t\t\t\t\t\t<div className='loginError' id={this.state.error}>\n\t\t\t\t\t\t\t\t\t\tInvalid Registration\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n        \t\t\t<input type='submit' className='button' id='newUser' value='Create Account' />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default withRouter(RegisterBox);\n","import React from 'react';\nimport '../../SeatPlanner.css';\n\nclass CreateGuest extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {clicked: 'false', name: '', email: '', phone: '', address: ''};\n\n\n\t\tthis.openDialog = this.openDialog.bind(this);\n\t\tthis.closeDialog = this.closeDialog.bind(this);\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeEmail = this.changeEmail.bind(this);\n\t\tthis.changeAddress = this.changeAddress.bind(this);\n\t\tthis.changePhone = this.changePhone.bind(this);\n\t}\n\n\topenDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'block';\n\t}\n\n\tcloseDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'none';\n\t}\n\n\tchangeName(event) {\n\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeEmail(event) {\n\t\tthis.setState({email: event.target.value});\n\t}\n\n\tchangeAddress(event) {\n\t\tthis.setState({address: event.target.value});\n\t}\n\n\tchangePhone(event) {\n\t\tthis.setState({phone: event.target.value});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"wrapperbox\">\n\t\t\t\t<div id = \"welcome\">\n\t\t\t\t\t<h1>Event Title</h1>\n\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Add Guest' onClick={() => this.openDialog()}/>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"dialogbox\">\n\t\t\t\t\t<dialog open>\n\t\t\t\t\t\t<h1>Add a Guest</h1>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"name\"\n\t\t\t\t\t\t\t\tplaceholder=\"Name\" onChange={this.changeName}/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\" onChange={this.changeEmail}/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"phone\"\n\t\t\t\t\t\t\t\tplaceholder=\"Phone Number\" onChange={this.changePhone}/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"address\"\n\t\t\t\t\t\t\t\tplaceholder=\"Address\" onChange={this.changeAddress}/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<div id=\"buttonbox\">\n\t\t\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Submit' onClick={() => this.closeDialog()}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</dialog>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default function Planner() {\n\treturn <CreateGuest />\n}\n","import React from 'react';\nimport '../../SeatPlanner.css';\n\nexport default function Guest() {\n    return <GuestView />\n}\n\nclass GuestView extends React.Component {\n\n    render() {\n        return(\n            <div id = \"welcome\">\n                <h1>Welcome to the Guest Page</h1>\n                <h1>We are currently working on this page...</h1>\n            </div>\n        );\n    }\n}","import ls from 'local-storage';\nimport {Guest, User} from \"./User\";\n\nexport class LocalStorage {\n    constructor() {\n        const guestList = [];\n        ls('guestList', guestList);\n        const itemList = [];\n        ls('itemList', itemList);\n        const eventList = [];\n        ls('eventList', eventList);\n        let curUser;\n        let curEvent;\n\n    }\n\n    setUser(newUser) {\n        if (newUser instanceof User) {\n            this.curUser = newUser;\n            ls('curUser', this.curUser);\n            return true;\n        } else {\n            return false;\n        }\n    }\n    addGuest() {\n\n    }\n\n    clear() {\n        this.curUser = undefined;\n        ls('curUser', this.curUser);\n        this.curEvent = undefined;\n        ls('curEvent', this.curEvent);\n        this.guestList = [];\n        ls('guestList', this.guestList);\n        this.itemList = [];\n        ls('itemList', this.itemList);\n        this.eventList = [];\n        ls('eventList', this.eventList);\n\n    }\n\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Login from '../pages/Login';\nimport Register from '../pages/Register';\nimport Planner from '../pages/Planner';\nimport Guest from '../pages/Guest';\nimport {LocalStorage} from '../services/LocalStorage'\n\nexport default function Routes() {\n    let storage = new LocalStorage();\n    return (\n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact\n                   render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n            />\n            <Route path=\"/register\"\n                   render = {(props) =><Register{...props} history = {Routes.history} storage = {storage}/>}\n            />\n            <Route path=\"/planner\"\n                   render = {(props) =><Planner{...props} history = {Routes.history} storage = {storage}/>}\n            />\n            <Route path=\"/guest\"\n                   render = {(props) =><Guest{...props} history = {Routes.history} storage = {storage}/>}\n            />\n            {/* redirect user to Login page if route does not exist and user is not authenticated */}\n            <Route\n                render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n            />\n        </Switch>\n       </BrowserRouter>\n    );\n}\n","import React from 'react';\nimport { Router } from 'react-router';\n\nimport history from './services/history';\nimport Routes from './routes';\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <Routes  />\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"mainbox\"));\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}