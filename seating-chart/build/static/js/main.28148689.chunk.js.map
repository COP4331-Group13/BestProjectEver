{"version":3,"sources":["services/history.js","services/User.js","services/event.js","services/Validator.js","pages/Login/index.js","pages/Register/index.js","services/navigation.js","pages/Planner/index.js","pages/Guest/index.js","pages/Events/index.js","services/LocalStorage.js","routes/Route.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","User","userName","this","Guest","username","name","address","phoneNumber","guestId","Event","pin","eventDate","maxPeople","randomize","require","callAuthenticate","state","xhr","XMLHttpRequest","open","setRequestHeader","send","user","pass","status","registerPlanner","storage","repass","match","authCode","callRegister","newUser","setUser","addEvent","curUser","date","max","callEvent","addGuest","curEventPin","guestPin","email","phone_number","callGuest","getEventList","eventListCode","responseText","callEventList","data","JSON","parse","events","i","length","push","results","event_name","event_pin","event_time","max_people","LoginBox","id","props","React","Component","GuestLogin","gID","error","changeGID","bind","handleSubmit","event","target","value","setState","substr","preventDefault","className","onSubmit","type","placeholder","onChange","PlannerLogin","changeUser","changePass","handleRegister","validated","validatePlanner","errorMessage","data-testid","required","onClick","withRouter","RegisterBox","changeName","changeRepass","registered","console","log","Navigation","handleEventPage","towhere","text","CreateGuest","clicked","phone","search","curEvent","getEvent","openDialog","closeDialog","changeEmail","changeAddress","changePhone","changeSearch","document","getElementById","style","display","added","alert","GuestView","EventList","gotEvents","getEvents","eventList","listItems","Key","eventName","setEvent","undefined","handleLogout","changeDate","changeMax","listLength","prevState","clear","getUser","EventItem","goToEvent","key","LocalStorage","ls","guests","newEvent","RouteWrapper","isPrivate","rest","isSigned","to","Routes","path","exact","render","Login","Register","Events","Planner","defaultProps","App","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28148689.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default history;","export class User {\n\n    constructor(userName) {\n        this.userName = userName;\n    }\n}\n\nexport class Guest extends User {\n    constructor(username, name, address, phoneNumber, guestId) {\n        super(username);\n        this.name = name;\n        this.address = address;\n        this.phoneNumber = phoneNumber;\n        this.guestId = guestId;\n    }\n\n}","\n\nexport class Event {\n    constructor(name, pin, address, eventDate, maxPeople) {\n        this.name = name;\n        this.pin = pin;\n        this.address = address;\n        this.eventDate = eventDate;\n        this.maxPeople = maxPeople;\n    }\n}","import {User, Guest} from \"./User\";\nimport {Event} from \"./event\";\n\nconst randomize = require(\"randomatic\");\n\nfunction callAuthenticate(state) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/login\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"email=\"+state.user+\"&password=\"+state.pass);\n  return xhr.status;\n}\n\nfunction callRegister(state) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/register\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"full_name=\"+state.name+\"&email=\"+state.user+\"&password=\"+state.pass);\n  return xhr.status;\n}\n\nfunction callEvent(state, curUser, pin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/add-event\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"planner=\"+curUser+\"&pin=\"+pin+\"&event_name=\"+state.name+\"&event_time=\"+state.date+\"&address=\"+state.address+\"&max_people=\"+state.max);\n  return xhr.status;\n}\n\nfunction callGuest(state, curEventPin, guestPin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/add-guest\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"full_name=\"+state.name+\"&email=\"+state.email+\"&address=\"+state.address+\"&phone_number=\"+state.phone_number+\"&event_pin=\"+curEventPin+\"&guest_pin=\"+guestPin);\n  return xhr.status;\n}\n\nfunction callEventList(curUser) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/get-event-list\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"planner=\"+curUser);\n  return [xhr.status, xhr.responseText];\n}\n\nexport function validateGuest(gID) {\n    return gID !== \"\" && gID.length === 10;\n}\n\nexport function validatePlanner(state, storage) {\n    if (state.user !== \"\" && state.pass !== \"\") {\n        let authCode = callAuthenticate(state);\n        if (authCode === 200) { // account exists\n          let newUser = new User(state.user);\n          storage.setUser(newUser);\n          return [true];\n        } else if (authCode === 204 || authCode === 205) { // email or password are wrong\n          return [false, 'Invalid email or password']\n        } else { // error sending query 400\n          return [false, 'Error has occured']\n        }\n    } else {\n        return [false, 'Please fill in all fields'];\n    }\n}\n\nexport function registerPlanner(state, storage) {\n    let emailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,24})+$/;\n    let passFormat = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n\n    if (state.pass !== state.repass) {\n      return [false, 'Passwords do not match']\n    } else if (!state.user.match(emailFormat)) {\n        return [false, `${state.user} is not a valid email address`]\n    } else if (!state.pass.match(passFormat)){\n        return [false, 'Passwords must be at least 8 characters long; contain at least 1 lower case letter [a-z]; at least 1 upper case letter [A-Z]; at least 1 number [0-9]']\n    } else if (state.name !== \"\" && state.user !== \"\" && state.pass !== \"\" && state.repass !== \"\"){\n        let authCode = callAuthenticate(state);\n        if (authCode === 200 || authCode === 204) { // email with password already exists\n          return [false, `An account already exists for ${state.user}`]\n        } else if (authCode === 205) { // email does not exist\n            let registerCode = callRegister(state);\n            if (registerCode === 200) {\n              let newUser = new User(state.user);\n              storage.setUser(newUser);\n              return [true];\n            } else { // error sending query 400\n                  return [false, 'Error has occurred']\n            }\n        } else { // error sending query 400\n           return [false, 'Error has occurred']\n        }\n    } else {\n        return [false, 'Please fill in all fields']\n    }\n}\n\nexport function addEvent(state, curUser) {\n  let pin = randomize('Aa0', 5);\n  let addEventCode = callEvent(state, curUser, pin);\n  if (addEventCode === 200) { // event added successfully\n    let newEvent = new Event(state.name, pin, state.address, state.date, state.max);\n    return [true, newEvent];\n  } else {\n    return [false, 'Error has occurred'];\n  }\n}\n\nexport function addGuest(state, curEventPin) {\n  let guestPin = curEventPin + randomize('Aa0', 5);\n  let addGuestCode = callGuest(state, curEventPin, guestPin);\n  if (addGuestCode === 200) { // event added successfully\n    // do stuff to add to storage\n    return [true, new Guest(state.email, state.name, state.address, state.phone_number, guestPin)];\n  } else {\n    return [false, 'Error has occurred'];\n  }\n}\n\nexport function getEventList(curUser) {\n  let eventListCode = callEventList(curUser.userName);\n  if (eventListCode[0] === 200) {\n    let data = JSON.parse(eventListCode[1]);\n    let events = [];\n      for (let i = 0; i < data.length; i++) {\n          events.push(new Event(data.results[i].event_name, data.results[i].event_pin,\n              data.results[i].address, data.results[i].event_time, data.results[i].max_people));\n      }\n\n    return [true, events];\n  } else {\n      return [false, 'Error has occurred'];\n  }\n}\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {validatePlanner, validateGuest} from \"../../services/Validator\";\n\n\nexport class LoginBox extends React.Component {\n    render() {\n\n        return (\n            <div id = \"wrapperbox\">\n                <div id = \"welcome\">\n                    <h1>Welcome to Best Fit Seating<br/>Are you here as an Event Planner or as a Guest?</h1>\n                </div>\n                <div id = \"loginbox\">\n                    <PlannerLogin history = {this.props.history} storage = {this.props.storage}/>\n                    <GuestLogin history = {this.props.history} storage = {this.props.storage}/>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport class GuestLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {gID: '', error: \"guestError\"};\n\n        this.changeGID = this.changeGID.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeGID(event) {\n        if (event.target.value.length > 10) {\n            this.setState({gID: event.target.value.substr(0,10)});\n        } else {\n            this.setState({gID: event.target.value});\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (validateGuest(this.state.gID)) {\n            this.props.history.push('/guest');\n        } else {\n            this.setState({error: 'loginError'});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className='box' id= 'guestLogin'>\n                <h2>Login as Guest</h2>\n                <form onSubmit= {this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input type= 'text' className='textBox' id='guestID'\n                               placeholder='Unique Guest ID' value={this.state.gID} onChange={this.changeGID} />\n                        <div className='loginError' id={this.state.error}>\n                            Invalid Guest ID\n                        </div>\n                    </div>\n                    <input type='submit' className='button' id='guest' value='CONTINUE' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport class PlannerLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {user:'', pass:'', error:'plannerError'};\n\n        this.changeUser = this.changeUser.bind(this);\n        this.changePass = this.changePass.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeUser(event) {\n        this.setState({user: event.target.value});\n    }\n\n    changePass(event) {\n        this.setState({pass: event.target.value});\n    }\n\n    handleRegister(event) {\n        event.preventDefault();\n        this.props.history.push('/register');\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let validated = validatePlanner(this.state, this.props.storage);\n        if (validated[0]) {\n    \t\t\tthis.props.history.push('/events');\n    \t\t} else {\n            this.setState({error: 'loginError'});\n            this.setState({errorMessage: validated[1]});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className= 'box' id= 'plannerLogin'>\n                <h2>Login as Planner</h2>\n                <form data-testid=\"plannerLoginForm\" onSubmit={this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input data-testid={this.state.user} type='text' className='textBox' id='email' required\n                               placeholder='E-mail' value={this.state.user} onChange={ this.changeUser} />\n                        <input data-testid={this.state.pass} type='password' className='textBox' id='pass' required\n                               placeholder='Password' value ={this.state.pass} onChange={this.changePass} />\n                        <div className='loginError' id={this.state.error}>\n                            {this.state.errorMessage}\n                        </div>\n                    </div>\n                    <div id='newRegister' onClick={this.handleRegister}>\n                        New User? Click Here to Register\n                    </div>\n                    <input type='submit' className='button' id='planner' value='LOGIN' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport default withRouter(LoginBox);\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\"\nimport {registerPlanner} from \"../../services/Validator\";\n\nclass RegisterBox extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {name: '', user:'', pass:'', repass:'', error:'plannerError', errorMessage:\"Invalid Registration\"};\n\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeUser = this.changeUser.bind(this);\n\t\tthis.changePass = this.changePass.bind(this);\n\t\tthis.changeRepass = this.changeRepass.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tchangeName(event) {\n\t\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeUser(event) {\n\t\t\tthis.setState({user: event.target.value});\n\t}\n\n\tchangePass(event) {\n\t\t\tthis.setState({pass: event.target.value});\n\t}\n\n\tchangeRepass(event) {\n\t\t\tthis.setState({repass: event.target.value});\n\t}\n\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tlet registered = registerPlanner(this.state, this.props.storage);\n\t\tif (registered[0]) {\n\t\t\tthis.props.history.push('/events');\n\t\t} else {\n\t\t\tthis.setState({error: 'loginError'});\n\t\t\tthis.setState({errorMessage: registered[1]});\n\t\t}\n\t\tconsole.log(registered[0]);\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className='userMain' id = 'wrapperbox'>\n\t\t\t\t<form id='registerBox' onSubmit={this.handleSubmit}>\n        \t\t\t<h1 id='registerTitle'>Account Information</h1>\n        \t\t\t<div id='inputs'>\n          \t\t\t\t<input type='text' className='textBox' id='firstName' required placeholder='Full Name'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.name} onChange={this.changeName}/>\n          \t\t\t\t<input type='text' className='textBox' id='e-mail' required placeholder='E-mail Address'\n\t\t\t\t\t\t\t\t\t\t\t\t value={this.state.user} onChange={ this.changeUser}/>\n          \t\t\t\t<input type='password' className='textBox' id='password' required placeholder='Password'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.pass} onChange={this.changePass}/>\n          \t\t\t\t<input type='password' className='textBox' id='re_password' required placeholder='Re-Enter Password'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue ={this.state.repass} onChange={this.changeRepass}/>\n\t\t\t\t\t\t\t\t\t<div className='loginError' id={this.state.error} >\n\t\t\t\t\t\t\t\t\t\t{this.state.errorMessage}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n        \t\t\t<input type='submit' className='button' id='newUser' value='Create Account' />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default withRouter(RegisterBox);\n","import React from 'react';\r\n\r\nexport class Navigation extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.handleEventPage = this.handleEventPage.bind(this);\r\n\t}\r\n\r\n\thandleEventPage(event){\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.history.push(this.props.towhere);\r\n\t}\r\n\r\n    render(){\r\n        return(\r\n          <div className='button' id=\"navigation\" onClick={this.handleEventPage}>\r\n              {this.props.text}\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {Navigation} from '../../services/navigation.js';\n\n\nclass CreateGuest extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {clicked: 'false', name: '', email: '',\n\t\t\tphone: '', address: '', search: '', curEvent:this.props.storage.getEvent()};\n\n\t\tthis.openDialog = this.openDialog.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.closeDialog = this.closeDialog.bind(this);\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeEmail = this.changeEmail.bind(this);\n\t\tthis.changeAddress = this.changeAddress.bind(this);\n\t\tthis.changePhone = this.changePhone.bind(this);\n\t\tthis.changeSearch = this.changeSearch.bind(this);\n\t}\n\n\topenDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'block';\n\t}\n\n\tcloseDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'none';\n\t}\n\n\tchangeName(event) {\n\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeEmail(event) {\n\t\tthis.setState({email: event.target.value});\n\t}\n\n\tchangeAddress(event) {\n\t\tthis.setState({address: event.target.value});\n\t}\n\n\tchangePhone(event) {\n\t\tthis.setState({phone: event.target.value});\n\t}\n\n\tchangeSearch(event) {\n\t\tthis.setState({search: event.target.value});\n\t}\n\n\thandleSubmit(event) {\n\t\t\tevent.preventDefault();\n\t\t\tlet added = this.props.storage.addGuest(this.state);\n\t\t\tif (added[0]) {\n\t\t\t\tthis.closeDialog();\n\t\t\t\talert(\"Guest was successfully added!\");\n\t\t\t} else {\n\t\t\t\t\tthis.setState({error: 'guestError'});\n\t\t\t\t\tthis.setState({errorMessage: added[1]});\n\t\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"wrapperbox\">\n\t\t\t\t<div id = \"welcome\">\n\t\t\t\t<Navigation history={this.props.history} towhere={\"/events\"} text={\"Events\"} />\n\t\t\t\t<h1>{this.state.curEvent.name}</h1>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"sidebar\">\n\t\t\t\t\t<div id=\"search\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"search\"\n\t\t\t\t\t\t\t\tplaceholder=\"Search...\" onChange={this.changeSearch}/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Add Guest' onClick={() => this.openDialog()}/>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"dialogbox\">\n\t\t\t\t\t<dialog open>\n\t\t\t\t\t\t<div id=\"closeWindow\">\n\t\t\t\t\t\t\t<input type='submit' id=\"closeButton\" value='X' onClick={() => this.closeDialog()}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h1>Add a Guest</h1>\n\t\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"name\"\n\t\t\t\t\t\t\t\tplaceholder=\"Name\" value ={this.state.name} onChange={this.changeName} required/>\n\t\t\t\t\t\t\t<input type=\"email\" className=\"textBox\" id=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\" value ={this.state.email} onChange={this.changeEmail} required/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"phone\"\n\t\t\t\t\t\t\t\tplaceholder=\"Phone Number\" value ={this.state.phone_number} onChange={this.changePhone} required/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"address\"\n\t\t\t\t\t\t\t\tplaceholder=\"Address\" value ={this.state.address} onChange={this.changeAddress} required/>\n\t\t\t\t\t\t\t<div className='eventError' id={this.state.error} >\n\t\t\t\t\t\t\t\t{this.state.errorMessage}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id=\"buttonbox\">\n\t\t\t\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Submit'/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</dialog>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default withRouter(CreateGuest);\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {Navigation} from '../../services/navigation.js';\n\nexport default function Guest() {\n    return <GuestView />\n}\n\nclass GuestView extends React.Component {\n\n    render() {\n        return(\n            <div id = \"wrapperbox\">\n                <div id = \"welcome\">\n                    <Navigation history={this.props.history} towhere={\"/Login\"} text={\"Home\"} />\n                    <h1>Welcome to the Guest Page</h1>\n                    <h1>We are currently working on this page...</h1>\n                </div>\n            </div>\n\n        );\n    }\n\n    render () {\n        return (\n            <div className='box' id= 'seatingChart'>\n                <h2>Pretend this is a seating chart...</h2>\n            </div>\n        );\n    }\n\n    render () {\n        return (\n            <div className='box' id= 'guestInfo'>\n                <h2>Pretend this is information about you, the guest...</h2>\n            </div>\n        );\n    }\n}\n","import {withRouter} from \"react-router-dom\";\nimport '../../SeatPlanner.css';\nimport React from \"react\";\n\nexport class EventList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let gotEvents = this.props.storage.getEvents();\n        if (gotEvents[0]) {\n            this.state = {\n                eventList: gotEvents[1],\n                listItems: [],\n                name: '',\n                date: '',\n                address: '',\n                max: ''\n            };\n\n            for (let i = 0; i < this.state.eventList.length; i++) {\n                this.state.listItems.push(\n                    <EventItem\n                        Key={this.state.eventList[i].pin}\n                        Event={this.state.eventList[i]}\n                        eventName={this.state.eventList[i].name}\n                        storage={this.props.storage}\n                        history={this.props.history}\n                    />);\n            }\n        } else {\n            this.state = {\n                eventList: [],\n                listItems: [],\n                name: '',\n                date: '',\n                address: '',\n                max: ''\n            };\n        }\n\n        this.props.storage.setEvent(undefined);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.openDialog = this.openDialog.bind(this);\n        this.closeDialog = this.closeDialog.bind(this);\n        this.changeName = this.changeName.bind(this);\n        this.changeDate = this.changeDate.bind(this);\n        this.changeAddress = this.changeAddress.bind(this);\n        this.changeMax = this.changeMax.bind(this);\n    }\n\n    openDialog() {\n  \t\tdocument.getElementById('dialogbox').style.display = 'block';\n  \t}\n\n  \tcloseDialog() {\n  \t\tdocument.getElementById('dialogbox').style.display = 'none';\n  \t}\n\n    changeName(event) {\n  \t\tthis.setState({name: event.target.value});\n  \t}\n\n  \tchangeDate(event) {\n  \t\tthis.setState({date: event.target.value});\n  \t}\n\n  \tchangeAddress(event) {\n  \t\tthis.setState({address: event.target.value});\n  \t}\n\n  \tchangeMax(event) {\n  \t\tthis.setState({max: event.target.value});\n  \t}\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let added = this.props.storage.addEvent(this.state);\n        if (added[0]) {\n          this.closeDialog();\n          let listLength = this.state.eventList.length;\n          this.setState({eventList: this.props.storage.getEvents()});\n          this.setState(prevState => ({\n              listItems: [...prevState.listItems, <EventItem\n                  Key={listLength}\n                  Event = {added[1]}\n                  eventName = {added[1].name}\n                  storage = {this.props.storage}\n                  history = {this.props.history}\n              />]\n          }));\n    \t\t} else {\n            this.setState({error: 'eventError'});\n            this.setState({errorMessage: added[1]});\n        }\n    }\n\n    handleLogout(event) {\n        event.preventDefault();\n        this.props.storage.clear();\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        return (\n            <div id=\"logoutBox\">\n\n                <div id=\"wrapperbox\">\n                    <div id = \"welcome\">\n                        <div className='button' id='logout' onClick={this.handleLogout}>\n                            Logout\n                        </div>\n                        <h1>Welcome, {this.props.storage.getUser()}!</h1>\n                    </div>\n                    <div id=\"listWrapper\">\n                        <ul id=\"eventList\">{this.state.listItems}</ul>\n                        <input type='submit' className='button' id='add_event' value='Add Event' onClick={() => this.openDialog()}/>\n                    </div>\n                    <div id=\"dialogbox\">\n                        <dialog open>\n                            <div id=\"closeWindow\">\n                                <input type='submit' id=\"closeButton\" value='X' onClick={() => this.closeDialog()}/>\n                            </div>\n                            <h1>Add an Event</h1>\n                            <form onSubmit={this.handleSubmit}>\n                                <input type=\"text\" className=\"textBox\"\n                                        id=\"name\" placeholder=\"Event Name\"\n                                        value ={this.state.name}\n                                        onChange={this.changeName} required />\n                                <input type=\"datetime-local\" className=\"textBox\"\n                                       id=\"date\" placeholder=\"Date/Time\"\n                                       value ={this.state.date}\n                                       onChange={this.changeDate} required />\n                                <input type=\"text\" className=\"textBox\"\n                                        id=\"address\" placeholder=\"Address\"\n                                        value ={this.state.address}\n                                        onChange={this.changeAddress} required/>\n                                <input type=\"number\" className=\"textBox\"\n                                        id=\"max\" placeholder=\"Max # of Guests\"\n                                        value ={this.state.max}\n                                        onChange={this.changeMax} required/>\n                                <div className='eventError' id={this.state.error} >\n                                    {this.state.errorMessage}\n                                </div>\n                                <div id=\"buttonbox\">\n                                    <input type='submit' className='button' id='add_event' value='Submit'/>\n                                </div>\n                            </form>\n                        </dialog>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass EventItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.goToEvent = this.goToEvent.bind(this);\n    }\n\n    goToEvent(event) {\n        event.preventDefault();\n        this.props.storage.setEvent(this.props.Event);\n        this.props.history.push('/planner');\n    }\n\n    render() {\n        return (\n            <li key={this.props.Key} className='eventItem' onClick={this.goToEvent} value={this.props.eventName}>{this.props.eventName}</li>\n        );\n    }\n}\n\n\nexport default withRouter(EventList);\n","import ls from 'local-storage';\nimport {Guest, User} from \"./User\";\nimport {addEvent, addGuest, getEventList} from \"./Validator\";\n\nexport class LocalStorage {\n    constructor() {\n        if (ls('guestList') === null)\n            ls('guestList', []);\n        if (ls('itemList') === null)\n            ls('itemList', []);\n        if (ls('eventList') === null)\n            ls('eventList', []);\n        if (ls('curUser') === null)\n            ls('curUser', undefined);\n        if (ls('curEvent') == null)\n            ls('curEvent', undefined);\n        if (ls('signed') === null)\n            ls('signed', false);\n    }\n\n    setUser(newUser) {\n        if (newUser instanceof User) {\n            ls('curUser', newUser);\n            ls('signed', true);\n            return true;\n        } else {\n            return false;\n        }\n    }\n    getUser() {\n        return ls('curUser').userName;\n    }\n    addGuest(state) {\n        if (ls('curEvent') !== undefined) {\n            let guests = ls('guestList');\n            let added = addGuest(state, ls('curEvent').pin);\n            if (added[0]) {\n                guests.push(added[1]);\n                ls('guestList', guests);\n                return [true];\n            } else {\n                return added;\n            }\n        }\n        return [false];\n    }\n    addEvent(state) {\n        let eventList = ls('eventList');\n        let added = addEvent(state, this.getUser());\n        if (added[0]) {\n            eventList.push(added[1]);\n            ls('eventList', eventList);\n        }\n        return added;\n    }\n    setEvent(newEvent) {\n        ls('curEvent', newEvent);\n    }\n    getEvent() {\n        return ls('curEvent');\n    }\n    getEvents() {\n\n        if (ls('eventList').length !== 0) {\n            return [true, ls('eventList')];\n        } else {\n            if (ls('curUser') !== undefined) {\n\n                let added = getEventList(ls('curUser'));\n                if (added[0]) {\n                    ls('eventList', added[1]);\n                }\n                return added\n            }\n\n            return [false, \"No Current User\"];\n        }\n    }\n\n    clear() {\n        ls('curUser', undefined);\n        ls('curEvent', undefined);\n        ls('guestList', []);\n        ls('itemList', []);\n        ls('eventList', []);\n        ls('signed', false);\n    }\n\n    isSigned() {\n        return ls('signed');\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {LocalStorage} from \"../services/LocalStorage\";\n\nexport default function RouteWrapper({\n    isPrivate,\n    storage,\n    ...rest\n    }) {\n\n    /**\n     * Redirect user to SignIn page if he tries to access a private route\n     * without authentication.\n     */\n    if (isPrivate && !storage.isSigned()) {\n        return <Redirect to=\"/\" />;\n    }\n\n    /**\n     * If not included on both previous cases, redirect user to the desired route.\n     */\n    return <Route {...rest} />;\n}\n\nRouteWrapper.propTypes = {\n    isPrivate: PropTypes.bool,\n    storage: PropTypes.instanceOf(LocalStorage).isRequired\n};\n\nRouteWrapper.defaultProps = {\n    isPrivate: false\n};","import React from \"react\";\nimport { BrowserRouter, Switch} from \"react-router-dom\";\nimport Login from '../pages/Login';\nimport Register from '../pages/Register';\nimport Planner from '../pages/Planner';\nimport Guest from '../pages/Guest';\nimport Events from '../pages/Events';\nimport Route from './Route'\nimport {LocalStorage} from '../services/LocalStorage'\n\nexport default function Routes() {\n    let storage = new LocalStorage();\n    return (\n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact\n                   render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path=\"/register\"\n                   render = {(props) =><Register{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path = \"/events\"\n                    render = {(props) =><Events{...props} history = {Routes.history} storage = {storage}/>}\n                    isPrivate = {true} storage={storage}\n            />\n            <Route path=\"/planner\"\n                   render = {(props) =><Planner{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            <Route path=\"/guest\"\n                   render = {(props) =><Guest{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            {/* redirect user to Login page if route does not exist and user is not authenticated */}\n            <Route\n                render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                storage={storage}\n            />\n        </Switch>\n       </BrowserRouter>\n    );\n}\n","import React from 'react';\nimport { Router } from 'react-router';\n\nimport history from './services/history';\nimport Routes from './routes';\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <Routes  />\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"mainbox\"));\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}