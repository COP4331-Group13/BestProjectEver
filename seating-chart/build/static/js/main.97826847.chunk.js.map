{"version":3,"sources":["services/history.js","services/User.js","services/event.js","services/Validator.js","pages/Login/index.js","pages/Register/index.js","services/navigation.js","pages/Planner/index.js","pages/Guest/index.js","pages/Events/index.js","services/LocalStorage.js","routes/Route.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","User","userName","this","Guest","username","name","address","phoneNumber","guestId","Event","pin","eventDate","maxPeople","randomize","require","callAuthenticate","state","xhr","XMLHttpRequest","open","setRequestHeader","send","user","pass","status","validateGuest","storage","gID","length","guestAuthCode","responseText","callGuestAuthenticate","data","JSON","parse","newGuest","results","email","full_name","phone_number","guest_pin","setUser","registerPlanner","repass","match","authCode","callRegister","newUser","addEvent","curUser","date","max","callEvent","addGuest","curEventPin","guestPin","phone","callGuest","getEventList","eventListCode","callEventList","events","i","push","event_name","event_pin","event_time","max_people","getGuestList","guestListCode","callGuestList","guests","LoginBox","id","props","React","Component","GuestLogin","error","changeGID","bind","handleSubmit","event","target","value","setState","substr","preventDefault","validated","errorMessage","className","onSubmit","type","placeholder","onChange","PlannerLogin","changeUser","changePass","handleRegister","validatePlanner","data-testid","required","onClick","withRouter","RegisterBox","changeName","changeRepass","registered","console","log","Navigation","handleEventPage","towhere","text","CreateGuest","gotGuests","getGuests","guestList","listItems","clicked","search","curEvent","getEvent","Key","guestName","guestEmail","guestPhone","guestAddress","setGuest","undefined","openDialog","closeDialog","changeEmail","changeAddress","changePhone","changeSearch","document","getElementById","style","display","added","alert","prevState","GuestItem","resetGuest","key","GuestView","handleLogout","clear","getUser","EventList","resetGuests","gotEvents","getEvents","eventList","eventName","setEvent","changeDate","changeMax","listLength","EventItem","goToEvent","LocalStorage","ls","newEvent","RouteWrapper","isPrivate","rest","isSigned","to","Routes","path","exact","render","Login","Register","Events","Planner","defaultProps","App","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97826847.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default history;","export class User {\n\n    constructor(userName) {\n        this.userName = userName;\n    }\n}\n\nexport class Guest extends User {\n    constructor(username, name, address, phoneNumber, guestId) {\n        super(username);\n        this.name = name;\n        this.address = address;\n        this.phoneNumber = phoneNumber;\n        this.guestId = guestId;\n    }\n\n}\n","\n\nexport class Event {\n    constructor(name, pin, address, eventDate, maxPeople) {\n        this.name = name;\n        this.pin = pin;\n        this.address = address;\n        this.eventDate = eventDate;\n        this.maxPeople = maxPeople;\n    }\n}","import {User, Guest} from \"./User\";\nimport {Event} from \"./event\";\n\nconst randomize = require(\"randomatic\");\n\nfunction callAuthenticate(state) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/login\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"email=\"+state.user+\"&password=\"+state.pass);\n  return xhr.status;\n}\n\nfunction callGuestAuthenticate(gID) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/guest-login\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"guest_pin=\"+gID);\n  return [xhr.status, xhr.responseText];\n}\n\nfunction callRegister(state) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/register\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"full_name=\"+state.name+\"&email=\"+state.user+\"&password=\"+state.pass);\n  return xhr.status;\n}\n\nfunction callEvent(state, curUser, pin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/add-event\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"planner=\"+curUser+\"&pin=\"+pin+\"&event_name=\"+state.name+\"&event_time=\"+state.date+\"&address=\"+state.address+\"&max_people=\"+state.max);\n  return xhr.status;\n}\n\nfunction callGuest(state, curEventPin, guestPin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/add-guest\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"full_name=\"+state.name+\"&email=\"+state.email+\"&address=\"+state.address+\"&phone_number=\"+state.phone+\"&event_pin=\"+curEventPin+\"&guest_pin=\"+guestPin);\n  return xhr.status;\n}\n\nfunction callEventList(curUser) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/get-event-list\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"planner=\"+curUser);\n  return [xhr.status, xhr.responseText];\n}\n\nfunction callGuestList(curEventPin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/get-guest-list\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"event_pin=\"+curEventPin);\n  return [xhr.status, xhr.responseText];\n}\n\nexport function validatePlanner(state, storage) {\n    if (state.user !== \"\" && state.pass !== \"\") {\n        let authCode = callAuthenticate(state);\n        if (authCode === 200) { // account exists\n          let newUser = new User(state.user);\n          storage.setUser(newUser);\n          return [true];\n        } else if (authCode === 204 || authCode === 205) { // email or password are wrong\n          return [false, 'Invalid email or password']\n        } else { // error sending query 400\n          return [false, 'Error has occured']\n        }\n    } else {\n        return [false, 'Please fill in all fields'];\n    }\n}\n\nexport function validateGuest(state, storage) {\n    if (state.gID !== \"\" && state.gID.length === 10) {\n        let guestAuthCode = callGuestAuthenticate(state.gID);\n        let data = JSON.parse(guestAuthCode[1]);\n        if (guestAuthCode[0] === 200) { // guest account exists\n          let newGuest = new Guest(data.results[0].email, data.results[0].full_name, data.results[0].address,\n            data.results[0].phone_number, data.results[0].guest_pin);\n          storage.setUser(newGuest);\n          return [true];\n        } else if (guestAuthCode === 205) { // wrong guest pin\n          return [false, 'Invalid Guest ID']\n        } else { // error sending query 400\n          return [false, 'Error has occured']\n        }\n    } else {\n        return [false, 'Invalid Guest ID'];\n    }\n}\n\nexport function registerPlanner(state, storage) {\n    let emailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,24})+$/;\n    let passFormat = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n\n    if (state.pass !== state.repass) {\n      return [false, 'Passwords do not match']\n    } else if (!state.user.match(emailFormat)) {\n        return [false, `${state.user} is not a valid email address`]\n    } else if (!state.pass.match(passFormat)){\n        return [false, 'Passwords must be at least 8 characters long; contain at least 1 lower case letter [a-z]; at least 1 upper case letter [A-Z]; at least 1 number [0-9]']\n    } else if (state.name !== \"\" && state.user !== \"\" && state.pass !== \"\" && state.repass !== \"\"){\n        let authCode = callAuthenticate(state);\n        if (authCode === 200 || authCode === 204) { // email with password already exists\n          return [false, `An account already exists for ${state.user}`]\n        } else if (authCode === 205) { // email does not exist\n            let registerCode = callRegister(state);\n            if (registerCode === 200) {\n              let newUser = new User(state.user);\n              storage.setUser(newUser);\n              return [true];\n            } else { // error sending query 400\n                  return [false, 'Error has occurred']\n            }\n        } else { // error sending query 400\n           return [false, 'Error has occurred']\n        }\n    } else {\n        return [false, 'Please fill in all fields']\n    }\n}\n\nexport function addEvent(state, curUser) {\n  let pin = randomize('Aa0', 5);\n  let addEventCode = callEvent(state, curUser, pin);\n  if (addEventCode === 200) { // event added successfully\n    let newEvent = new Event(state.name, pin, state.address, state.date, state.max);\n    return [true, newEvent];\n  } else {\n    return [false, 'Error has occurred'];\n  }\n}\n\nexport function addGuest(state, curEventPin) {\n  let guestPin = curEventPin + randomize('Aa0', 5);\n  let addGuestCode = callGuest(state, curEventPin, guestPin);\n  if (addGuestCode === 200) { // event added successfully\n    let newGuest = new Guest(state.email, state.name, state.address, state.phone, guestPin);\n    return [true, newGuest];\n  } else {\n    return [false, 'Error has occurred'];\n  }\n}\n\nexport function getEventList(curUser) {\n  let eventListCode = callEventList(curUser.userName);\n  if (eventListCode[0] === 200) {\n    let data = JSON.parse(eventListCode[1]);\n    let events = [];\n      for (let i = 0; i < data.length; i++) {\n          events.push(new Event(data.results[i].event_name, data.results[i].event_pin,\n              data.results[i].address, data.results[i].event_time, data.results[i].max_people));\n      }\n\n    return [true, events];\n  } else {\n      return [false, 'Error has occurred'];\n  }\n}\n\nexport function getGuestList(curEventPin) {\n  let guestListCode = callGuestList(curEventPin);\n  if (guestListCode[0] === 200) {\n    let data = JSON.parse(guestListCode[1]);\n    let guests = [];\n    for (let i = 0; i < data.length; i++) {\n      guests.push(new Guest(data.results[i].email, data.results[i].full_name, data.results[i].address,\n        data.results[i].phone_number, data.results[i].guest_pin));\n    }\n    return [true, guests];\n  } else {\n      return [false, 'Error has occurred'];\n  }\n}\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {validatePlanner, validateGuest} from \"../../services/Validator\";\n\n\nexport class LoginBox extends React.Component {\n    render() {\n\n        return (\n            <div id = \"wrapperbox\">\n                <div id = \"welcome\">\n                    <h1>Welcome to Best Fit Seating<br/>Are you here as an Event Planner or as a Guest?</h1>\n                </div>\n                <div id = \"loginbox\">\n                    <PlannerLogin history = {this.props.history} storage = {this.props.storage}/>\n                    <GuestLogin history = {this.props.history} storage = {this.props.storage}/>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport class GuestLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {gID: '', error: \"guestError\"};\n\n        this.changeGID = this.changeGID.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeGID(event) {\n        if (event.target.value.length > 10) {\n            this.setState({gID: event.target.value.substr(0,10)});\n        } else {\n            this.setState({gID: event.target.value});\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let validated = validateGuest(this.state, this.props.storage);\n        if (validated[0]) {\n    \t\t\tthis.props.history.push('/guest');\n    \t\t} else {\n            this.setState({error: 'loginError'});\n            this.setState({errorMessage: validated[1]});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className='box' id= 'guestLogin'>\n                <h2>Login as Guest</h2>\n                <form onSubmit= {this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input type= 'text' className='textBox' id='guestID'\n                               placeholder='Unique Guest ID' value={this.state.gID} onChange={this.changeGID} />\n                        <div className='loginError' id={this.state.error}>\n                            {this.state.errorMessage}\n                        </div>\n                    </div>\n                    <input type='submit' className='button' id='guest' value='CONTINUE' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport class PlannerLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {user:'', pass:'', error:'plannerError'};\n\n        this.changeUser = this.changeUser.bind(this);\n        this.changePass = this.changePass.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeUser(event) {\n        this.setState({user: event.target.value});\n    }\n\n    changePass(event) {\n        this.setState({pass: event.target.value});\n    }\n\n    handleRegister(event) {\n        event.preventDefault();\n        this.props.history.push('/register');\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let validated = validatePlanner(this.state, this.props.storage);\n        if (validated[0]) {\n    \t\t\tthis.props.history.push('/events');\n    \t\t} else {\n            this.setState({error: 'loginError'});\n            this.setState({errorMessage: validated[1]});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className= 'box' id= 'plannerLogin'>\n                <h2>Login as Planner</h2>\n                <form data-testid=\"plannerLoginForm\" onSubmit={this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input data-testid={this.state.user} type='text' className='textBox' id='email' required\n                               placeholder='E-mail' value={this.state.user} onChange={ this.changeUser} />\n                        <input data-testid={this.state.pass} type='password' className='textBox' id='pass' required\n                               placeholder='Password' value ={this.state.pass} onChange={this.changePass} />\n                        <div className='loginError' id={this.state.error}>\n                            {this.state.errorMessage}\n                        </div>\n                    </div>\n                    <div id='newRegister' onClick={this.handleRegister}>\n                        New User? Click Here to Register\n                    </div>\n                    <input type='submit' className='button' id='planner' value='LOGIN' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport default withRouter(LoginBox);\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\"\nimport {registerPlanner} from \"../../services/Validator\";\n\nclass RegisterBox extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {name: '', user:'', pass:'', repass:'', error:'plannerError', errorMessage:\"Invalid Registration\"};\n\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeUser = this.changeUser.bind(this);\n\t\tthis.changePass = this.changePass.bind(this);\n\t\tthis.changeRepass = this.changeRepass.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tchangeName(event) {\n\t\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeUser(event) {\n\t\t\tthis.setState({user: event.target.value});\n\t}\n\n\tchangePass(event) {\n\t\t\tthis.setState({pass: event.target.value});\n\t}\n\n\tchangeRepass(event) {\n\t\t\tthis.setState({repass: event.target.value});\n\t}\n\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tlet registered = registerPlanner(this.state, this.props.storage);\n\t\tif (registered[0]) {\n\t\t\tthis.props.history.push('/events');\n\t\t} else {\n\t\t\tthis.setState({error: 'loginError'});\n\t\t\tthis.setState({errorMessage: registered[1]});\n\t\t}\n\t\tconsole.log(registered[0]);\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className='userMain' id = 'wrapperbox'>\n\t\t\t\t<form id='registerBox' onSubmit={this.handleSubmit}>\n        \t\t\t<h1 id='registerTitle'>Account Information</h1>\n        \t\t\t<div id='inputs'>\n          \t\t\t\t<input type='text' className='textBox' id='firstName' required placeholder='Full Name'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.name} onChange={this.changeName}/>\n          \t\t\t\t<input type='text' className='textBox' id='e-mail' required placeholder='E-mail Address'\n\t\t\t\t\t\t\t\t\t\t\t\t value={this.state.user} onChange={ this.changeUser}/>\n          \t\t\t\t<input type='password' className='textBox' id='password' required placeholder='Password'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.pass} onChange={this.changePass}/>\n          \t\t\t\t<input type='password' className='textBox' id='re_password' required placeholder='Re-Enter Password'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue ={this.state.repass} onChange={this.changeRepass}/>\n\t\t\t\t\t\t\t\t\t<div className='loginError' id={this.state.error} >\n\t\t\t\t\t\t\t\t\t\t{this.state.errorMessage}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n        \t\t\t<input type='submit' className='button' id='newUser' value='Create Account' />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default withRouter(RegisterBox);\n","import React from 'react';\r\n\r\nexport class Navigation extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.handleEventPage = this.handleEventPage.bind(this);\r\n\t}\r\n\r\n\thandleEventPage(event){\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.history.push(this.props.towhere);\r\n\t}\r\n\r\n    render(){\r\n        return(\r\n          <div className='button' id=\"navigation\" onClick={this.handleEventPage}>\r\n              {this.props.text}\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {Navigation} from '../../services/navigation.js';\n\nclass CreateGuest extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tlet gotGuests = this.props.storage.getGuests();\n\t\tif (gotGuests[0]) {\n\t\t\t\tthis.state = {\n\t\t\t\t\t\tguestList: gotGuests[1],\n\t\t\t\t\t\tlistItems: [],\n\t\t\t\t\t\tclicked: 'false',\n\t\t\t\t\t\tname: '',\n\t\t\t\t\t\temail: '',\n\t\t\t\t\t\tphone: '',\n\t\t\t\t\t\taddress: '',\n\t\t\t\t\t\tsearch: '',\n\t\t\t\t\t\tcurEvent:this.props.storage.getEvent()\n\t\t\t\t};\n\n\t\t\t\tfor (let i = 0; i < this.state.guestList.length; i++) {\n\t\t\t\t\t\tthis.state.listItems.push(\n\t\t\t\t\t\t\t\t<GuestItem\n\t\t\t\t\t\t\t\t\t\tKey={this.state.guestList[i].guestId}\n\t\t\t\t\t\t\t\t\t\tGuest={this.state.guestList[i]}\n\t\t\t\t\t\t\t\t\t\tguestName={this.state.guestList[i].name}\n\t\t\t\t\t\t\t\t\t\tguestEmail={this.state.guestList[i].userName}\n\t\t\t\t\t\t\t\t\t\tguestPhone={this.state.guestList[i].phoneNumber}\n\t\t\t\t\t\t\t\t\t\tguestAddress={this.state.guestList[i].address}\n\t\t\t\t\t\t\t\t\t\tguestId={this.state.guestList[i].guestId}\n\t\t\t\t\t\t\t\t\t\tstorage={this.props.storage}\n\t\t\t\t\t\t\t\t\t\thistory={this.props.history}\n\t\t\t\t\t\t\t\t/>);\n\t\t\t\t}\n\t\t} else {\n\t\t\t\tthis.state = {\n\t\t\t\t\t\tguestList: [],\n\t\t\t\t\t\tlistItems: [],\n\t\t\t\t\t\tclicked: 'false',\n\t\t\t\t\t\tname: '',\n\t\t\t\t\t\temail: '',\n\t\t\t\t\t\tphone: '',\n\t\t\t\t\t\taddress: '',\n\t\t\t\t\t\tsearch: '',\n\t\t\t\t\t\tcurEvent:this.props.storage.getEvent()\n\t\t\t\t};\n\t\t}\n\n\t\tthis.props.storage.setGuest(undefined);\n\t\tthis.openDialog = this.openDialog.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.closeDialog = this.closeDialog.bind(this);\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeEmail = this.changeEmail.bind(this);\n\t\tthis.changeAddress = this.changeAddress.bind(this);\n\t\tthis.changePhone = this.changePhone.bind(this);\n\t\tthis.changeSearch = this.changeSearch.bind(this);\n\t}\n\n\topenDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'block';\n\t}\n\n\tcloseDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'none';\n\t}\n\n\tchangeName(event) {\n\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeEmail(event) {\n\t\tthis.setState({email: event.target.value});\n\t}\n\n\tchangeAddress(event) {\n\t\tthis.setState({address: event.target.value});\n\t}\n\n\tchangePhone(event) {\n\t\tthis.setState({phone: event.target.value});\n\t}\n\n\tchangeSearch(event) {\n\t\tthis.setState({search: event.target.value});\n\t}\n\n\thandleSubmit(event) {\n\t\t\tevent.preventDefault();\n\t\t\tlet added = this.props.storage.addGuest(this.state);\n\t\t\tif (added[0]) {\n\t\t\t\tthis.closeDialog();\n\t\t\t\talert(\"Guest was successfully added!\");\n\t\t\t\tlet listLength = this.state.guestList.length;\n\t\t\t\tthis.setState({guestList: this.props.storage.getGuests()});\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\t\tlistItems: [...prevState.listItems, <GuestItem\n\t\t\t\t\t\t\tKey={this.state.guestList.guestId}\n\t\t\t\t\t\t\tGuest={added[1]}\n\t\t\t\t\t\t\tguestName={added[1].name}\n\t\t\t\t\t\t\tguestEmail={added[1].userName}\n\t\t\t\t\t\t\tguestPhone={added[1].phoneNumber}\n\t\t\t\t\t\t\tguestAddress={added[1].address}\n\t\t\t\t\t\t\tguestId={added[1].guestId}\n\t\t\t\t\t\t\tstorage={this.props.storage}\n\t\t\t\t\t\t\thistory={this.props.history}\n\t\t\t\t\t\t/>]\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\t\tthis.setState({error: 'guestError'});\n\t\t\t\t\tthis.setState({errorMessage: added[1]});\n\t\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"wrapperbox\">\n\t\t\t\t<div id = \"welcome\">\n\t\t\t\t<Navigation history={this.props.history} towhere={\"/events\"} text={\"Events\"} />\n\t\t\t\t<h1>{this.state.curEvent.name}</h1>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"sidebar\">\n\t\t\t\t\t<div id=\"search\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"searchBox\"\n\t\t\t\t\t\t\t\tplaceholder=\"Search...\" onChange={this.changeSearch}/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"list\">\n\t\t\t\t\t\t<ul id=\"guestList\">{this.state.listItems}</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"add\">\n\t\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Add Guest' onClick={() => this.openDialog()}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"dialogbox\">\n\t\t\t\t\t<dialog open>\n\t\t\t\t\t\t<div id=\"closeWindow\">\n\t\t\t\t\t\t\t<input type='submit' id=\"closeButton\" value='X' onClick={() => this.closeDialog()}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h1>Add a Guest</h1>\n\t\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"name\"\n\t\t\t\t\t\t\t\tplaceholder=\"Name\" value ={this.state.name} onChange={this.changeName} required/>\n\t\t\t\t\t\t\t<input type=\"email\" className=\"textBox\" id=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\" value ={this.state.email} onChange={this.changeEmail} required/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"phone\"\n\t\t\t\t\t\t\t\tplaceholder=\"Phone Number\" value ={this.state.phone} onChange={this.changePhone} required/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"address\"\n\t\t\t\t\t\t\t\tplaceholder=\"Address\" value ={this.state.address} onChange={this.changeAddress} required/>\n\t\t\t\t\t\t\t<div className='eventError' id={this.state.error} >\n\t\t\t\t\t\t\t\t{this.state.errorMessage}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id=\"buttonbox\">\n\t\t\t\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Submit'/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</dialog>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nclass GuestItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n\t\t\t\tthis.openDialog = this.openDialog.bind(this);\n\t\t\t\tthis.closeDialog = this.closeDialog.bind(this);\n    }\n\n\t\topenDialog() {\n\t\t\tthis.props.storage.setGuest(this.props.Guest);\n\t\t\tdocument.getElementById(this.props.Key).style.display = 'block';\n\t\t}\n\n\t\tcloseDialog() {\n\t\t\tthis.props.storage.resetGuest();\n\t\t\tdocument.getElementById(this.props.Key).style.display = 'none';\n\t\t}\n\n    render() {\n        return (\n\t\t\t\t\t<div id=\"sidebar\">\n\t\t\t\t\t\t<div id=\"guestListItem\">\n            \t<li\n\t\t\t\t\t\t\t\tkey={this.props.Key} className='guestItem' value={this.props.guestName}>{this.props.guestName}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<input type='submit' id='guestItemOpen' value='+' onClick={() => this.openDialog()}/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"dialogbox2\" id={this.props.Key}>\n\t\t\t\t\t\t\t<dialog open>\n\t\t\t\t\t\t\t\t\t<div id='guestBoxInfo'>\n\t\t\t\t\t\t\t\t\t\t<h1>{this.props.guestName}</h1>\n\t\t\t\t\t\t\t\t\t\t<label><b>Guest ID:</b> {this.props.guestId}</label>\n\t\t\t\t\t\t\t\t\t\t<form id=\"formGuest\" onSubmit={() => this.closeDialog()}>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.guestName} />\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"email\" className=\"textBox\" id=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.guestEmail} />\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Phone</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"phone\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.guestPhone} />\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Address</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"address\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={this.props.guestAddress}/>\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t<input type='submit' className='button' id='guestButtons' value='Save'/>\n\t\t\t\t\t\t\t\t\t\t<input type='submit' className='button' id='guestButtons' value='Cancel' onClick={() => this.closeDialog()}/>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div id='guestBoxPreferences'>\n\t\t\t\t\t\t\t\t\t\t<h1>Preferences</h1>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div id='guestBoxGroups'>\n\t\t\t\t\t\t\t\t\t\t<h1>Groups</h1>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</dialog>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n    }\n}\n\nexport default withRouter(CreateGuest);\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {Navigation} from '../../services/navigation.js';\n\nexport class GuestView extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    handleLogout(event) {\n        event.preventDefault();\n        this.props.storage.clear();\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        return(\n            <div id = \"wrapperbox\">\n                <div id = \"welcome\">\n                  <div className='button' id='logout' onClick={this.handleLogout}>\n                      Logout\n                  </div>\n                  <h1>Welcome Guest, {this.props.storage.getUser()}!</h1>\n                </div>\n            </div>\n\n        );\n    }\n    /*\n    render () {\n        return (\n            <div className='box' id= 'seatingChart'>\n                <h2>Pretend this is a seating chart...</h2>\n            </div>\n        );\n    }\n\n    render () {\n        return (\n            <div className='box' id= 'guestInfo'>\n                <h2>Pretend this is information about you, the guest...</h2>\n            </div>\n        );\n    }\n    */\n}\n\nexport default withRouter(GuestView);\n","import {withRouter} from \"react-router-dom\";\nimport '../../SeatPlanner.css';\nimport React from \"react\";\n\nexport class EventList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.props.storage.resetGuests();\n        let gotEvents = this.props.storage.getEvents();\n        if (gotEvents[0]) {\n            this.state = {\n                eventList: gotEvents[1],\n                listItems: [],\n                name: '',\n                date: '',\n                address: '',\n                max: ''\n            };\n\n            for (let i = 0; i < this.state.eventList.length; i++) {\n                this.state.listItems.push(\n                    <EventItem\n                        Key={this.state.eventList[i].pin}\n                        Event={this.state.eventList[i]}\n                        eventName={this.state.eventList[i].name}\n                        storage={this.props.storage}\n                        history={this.props.history}\n                    />);\n            }\n        } else {\n            this.state = {\n                eventList: [],\n                listItems: [],\n                name: '',\n                date: '',\n                address: '',\n                max: ''\n            };\n        }\n\n        this.props.storage.setEvent(undefined);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.openDialog = this.openDialog.bind(this);\n        this.closeDialog = this.closeDialog.bind(this);\n        this.changeName = this.changeName.bind(this);\n        this.changeDate = this.changeDate.bind(this);\n        this.changeAddress = this.changeAddress.bind(this);\n        this.changeMax = this.changeMax.bind(this);\n    }\n\n    openDialog() {\n  \t\tdocument.getElementById('dialogbox').style.display = 'block';\n  \t}\n\n  \tcloseDialog() {\n  \t\tdocument.getElementById('dialogbox').style.display = 'none';\n  \t}\n\n    changeName(event) {\n  \t\tthis.setState({name: event.target.value});\n  \t}\n\n  \tchangeDate(event) {\n  \t\tthis.setState({date: event.target.value});\n  \t}\n\n  \tchangeAddress(event) {\n  \t\tthis.setState({address: event.target.value});\n  \t}\n\n  \tchangeMax(event) {\n  \t\tthis.setState({max: event.target.value});\n  \t}\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let added = this.props.storage.addEvent(this.state);\n        if (added[0]) {\n          this.closeDialog();\n          let listLength = this.state.eventList.length;\n          this.setState({eventList: this.props.storage.getEvents()});\n          this.setState(prevState => ({\n              listItems: [...prevState.listItems, <EventItem\n                  Key={listLength}\n                  Event = {added[1]}\n                  eventName = {added[1].name}\n                  storage = {this.props.storage}\n                  history = {this.props.history}\n              />]\n          }));\n    \t\t} else {\n            this.setState({error: 'eventError'});\n            this.setState({errorMessage: added[1]});\n        }\n    }\n\n    handleLogout(event) {\n        event.preventDefault();\n        this.props.storage.clear();\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        return (\n            <div id=\"logoutBox\">\n\n                <div id=\"wrapperbox\">\n                    <div id = \"welcome\">\n                        <div className='button' id='logout' onClick={this.handleLogout}>\n                            Logout\n                        </div>\n                        <h1>Welcome, {this.props.storage.getUser()}!</h1>\n                    </div>\n                    <div id=\"listWrapper\">\n                        <ul id=\"eventList\">{this.state.listItems}</ul>\n                        <input type='submit' className='button' id='add_event' value='Add Event' onClick={() => this.openDialog()}/>\n                    </div>\n                    <div id=\"dialogbox\">\n                        <dialog open>\n                            <div id=\"closeWindow\">\n                                <input type='submit' id=\"closeButton\" value='X' onClick={() => this.closeDialog()}/>\n                            </div>\n                            <h1>Add an Event</h1>\n                            <form onSubmit={this.handleSubmit}>\n                                <input type=\"text\" className=\"textBox\"\n                                        id=\"name\" placeholder=\"Event Name\"\n                                        value ={this.state.name}\n                                        onChange={this.changeName} required />\n                                <input type=\"datetime-local\" className=\"textBox\"\n                                       id=\"date\" placeholder=\"Date/Time\"\n                                       value ={this.state.date}\n                                       onChange={this.changeDate} required />\n                                <input type=\"text\" className=\"textBox\"\n                                        id=\"address\" placeholder=\"Address\"\n                                        value ={this.state.address}\n                                        onChange={this.changeAddress} required/>\n                                <input type=\"number\" className=\"textBox\"\n                                        id=\"max\" placeholder=\"Max # of Guests\"\n                                        value ={this.state.max}\n                                        onChange={this.changeMax} required/>\n                                <div className='eventError' id={this.state.error} >\n                                    {this.state.errorMessage}\n                                </div>\n                                <div id=\"buttonbox\">\n                                    <input type='submit' className='button' id='add_event' value='Submit'/>\n                                </div>\n                            </form>\n                        </dialog>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass EventItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.goToEvent = this.goToEvent.bind(this);\n    }\n\n    goToEvent(event) {\n        event.preventDefault();\n        this.props.storage.setEvent(this.props.Event);\n        this.props.history.push('/planner');\n    }\n\n    render() {\n        return (\n            <li key={this.props.Key} className='eventItem' onClick={this.goToEvent} value={this.props.eventName}>{this.props.eventName}</li>\n        );\n    }\n}\n\n\nexport default withRouter(EventList);\n","import ls from 'local-storage';\nimport {Guest, User} from \"./User\";\nimport {addEvent, addGuest, getEventList, getGuestList} from \"./Validator\";\n\nexport class LocalStorage {\n    constructor() {\n        if (ls('guestList') === null)\n            ls('guestList', []);\n        if (ls('itemList') === null)\n            ls('itemList', []);\n        if (ls('eventList') === null)\n            ls('eventList', []);\n        if (ls('curUser') === null)\n            ls('curUser', undefined);\n        if (ls('curGuest') === null)\n            ls('curGuest', undefined);\n        if (ls('curEvent') == null)\n            ls('curEvent', undefined);\n        if (ls('signed') === null)\n            ls('signed', false);\n    }\n\n    setUser(newUser) {\n        if (newUser instanceof User) {\n            ls('curUser', newUser);\n            ls('signed', true);\n            return true;\n        } else if (newUser instanceof Guest) {\n             ls('curUser', newUser);\n             ls('signed', true);\n             return true;\n        } else {\n            return false;\n        }\n    }\n    getUser() {\n        return ls('curUser').userName;\n    }\n    addGuest(state) {\n        if (ls('curEvent') !== undefined) {\n            let guests = ls('guestList');\n            let added = addGuest(state, ls('curEvent').pin);\n            if (added[0]) {\n                guests.push(added[1]);\n                ls('guestList', guests);\n                return added;\n            } else {\n                return added;\n            }\n        }\n        return [false];\n    }\n    setGuest(newGuest) {\n      ls('curGuest', newGuest)\n    }\n    getGuest() {\n      return ls('curGuest');\n    }\n    getGuests() {\n      if (ls('guestList').length !== 0) {\n          return [true, ls('guestList')];\n      } else {\n           if (ls('curEvent') !== undefined) {\n              let added = getGuestList(ls('curEvent').pin);\n              if (added[0]) {\n                  ls('guestList', added[1]);\n              }\n              return added\n          }\n          return [false, \"No Current Event\"];\n      }\n    }\n    resetGuest() {\n      ls('curGuest', undefined);\n    }\n    resetGuests() {\n      ls('guestList', []);\n    }\n    addEvent(state) {\n        let eventList = ls('eventList');\n        let added = addEvent(state, this.getUser());\n        if (added[0]) {\n            eventList.push(added[1]);\n            ls('eventList', eventList);\n        }\n        return added;\n    }\n    setEvent(newEvent) {\n        ls('curEvent', newEvent);\n    }\n    getEvent() {\n        return ls('curEvent');\n    }\n    getEvents() {\n\n        if (ls('eventList').length !== 0) {\n            return [true, ls('eventList')];\n        } else {\n            if (ls('curUser') !== undefined) {\n\n                let added = getEventList(ls('curUser'));\n                if (added[0]) {\n                    ls('eventList', added[1]);\n                }\n                return added\n            }\n\n            return [false, \"No Current User\"];\n        }\n    }\n\n    clear() {\n        ls('curUser', undefined);\n        ls('curGuest', undefined);\n        ls('curEvent', undefined);\n        ls('guestList', []);\n        ls('itemList', []);\n        ls('eventList', []);\n        ls('signed', false);\n    }\n\n    isSigned() {\n        return ls('signed');\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {LocalStorage} from \"../services/LocalStorage\";\n\nexport default function RouteWrapper({\n    isPrivate,\n    storage,\n    ...rest\n    }) {\n\n    /**\n     * Redirect user to SignIn page if he tries to access a private route\n     * without authentication.\n     */\n    if (isPrivate && !storage.isSigned()) {\n        return <Redirect to=\"/\" />;\n    }\n\n    /**\n     * If not included on both previous cases, redirect user to the desired route.\n     */\n    return <Route {...rest} />;\n}\n\nRouteWrapper.propTypes = {\n    isPrivate: PropTypes.bool,\n    storage: PropTypes.instanceOf(LocalStorage).isRequired\n};\n\nRouteWrapper.defaultProps = {\n    isPrivate: false\n};","import React from \"react\";\nimport { BrowserRouter, Switch} from \"react-router-dom\";\nimport Login from '../pages/Login';\nimport Register from '../pages/Register';\nimport Planner from '../pages/Planner';\nimport Guest from '../pages/Guest';\nimport Events from '../pages/Events';\nimport Route from './Route'\nimport {LocalStorage} from '../services/LocalStorage'\n\nexport default function Routes() {\n    let storage = new LocalStorage();\n    return (\n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact\n                   render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path=\"/register\"\n                   render = {(props) =><Register{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path = \"/events\"\n                    render = {(props) =><Events{...props} history = {Routes.history} storage = {storage}/>}\n                    isPrivate = {true} storage={storage}\n            />\n            <Route path=\"/planner\"\n                   render = {(props) =><Planner{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            <Route path=\"/guest\"\n                   render = {(props) =><Guest{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            {/* redirect user to Login page if route does not exist and user is not authenticated */}\n            <Route\n                render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                storage={storage}\n            />\n        </Switch>\n       </BrowserRouter>\n    );\n}\n","import React from 'react';\nimport { Router } from 'react-router';\n\nimport history from './services/history';\nimport Routes from './routes';\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <Routes  />\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"mainbox\"));\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}