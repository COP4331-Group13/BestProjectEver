{"version":3,"sources":["services/history.js","pages/Login/index.js","services/Validator.js","pages/Register/index.js","pages/Planner/index.js","pages/Guest/index.js","routes/Route.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","LoginBox","id","this","props","React","Component","GuestLogin","state","gID","error","changeGID","bind","handleSubmit","event","setState","target","value","preventDefault","push","className","onSubmit","type","placeholder","onChange","PlannerLogin","user","pass","changeUser","changePass","handleRegister","data-testid","onClick","withRouter","RegisterBox","CreateGuest","clicked","name","email","phone","address","openDialog","closeDialog","changeName","changeEmail","changeAddress","changePhone","document","getElementById","style","display","open","href","Planner","Guest","GuestView","RouteWrapper","component","isPrivate","rest","to","Routes","path","exact","Login","Register","defaultProps","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01c20fc4.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\nexport default history;","import React from 'react';\r\nimport '../../SeatPlanner.css';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {validatePlanner, validateGuest} from \"../../services/Validator\";\r\n\r\n\r\nexport class LoginBox extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id = \"wrapperbox\">\r\n                <div id = \"welcome\">\r\n                    <h1>Welcome to Best Fit Seating</h1>\r\n                    <h1>Are you here as an Event Planner or as a Guest?</h1>\r\n                </div>\r\n                <div id = \"loginbox\">\r\n                    <PlannerLogin history = {this.props.history}/>\r\n                    <GuestLogin history = {this.props.history}/>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport class GuestLogin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {gID: '', error: \"guestError\"};\r\n\r\n        this.changeGID = this.changeGID.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    changeGID(event) {\r\n        this.setState({gID: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (validateGuest(this.state.gID)) {\r\n            this.props.history.push('/guest');\r\n        } else {\r\n            this.setState({error: 'loginError'});\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <div className='box' id= 'guestLogin'>\r\n                <h2>Login as Guest</h2>\r\n                <form onSubmit= {this.handleSubmit}>\r\n                    <div className='infoBox'>\r\n                        <input type= 'text' className='textBox' id='guestID'\r\n                               placeholder='Unique Guest ID' value={this.state.gID} onChange={this.changeGID} />\r\n                        <div className='loginError' id={this.state.error}>\r\n                            Invalid Guest ID\r\n                        </div>\r\n                    </div>\r\n                    <input type='submit' className='button' id='guest' value='CONTINUE' />\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport class PlannerLogin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {user:'', pass:'', error:'plannerError'};\r\n\r\n        this.changeUser = this.changeUser.bind(this);\r\n        this.changePass = this.changePass.bind(this);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    changeUser(event) {\r\n        this.setState({user: event.target.value});\r\n    }\r\n\r\n    changePass(event) {\r\n        this.setState({pass: event.target.value});\r\n    }\r\n\r\n    handleRegister(event) {\r\n        event.preventDefault();\r\n        this.props.history.push('/register');\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (validatePlanner(this.state.user, this.state.pass)) {\r\n            this.props.history.push('/planner');\r\n        } else {\r\n            this.setState({error: 'loginError'});\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <div className= 'box' id= 'plannerLogin'>\r\n                <h2>Login as Planner</h2>\r\n                <form data-testid=\"plannerLoginForm\" onSubmit={this.handleSubmit}>\r\n                    <div className='infoBox'>\r\n                        <input data-testid={this.state.user} type='text' className='textBox' id='email'\r\n                               placeholder='E-mail' value={this.state.user} onChange={ this.changeUser} />\r\n                        <input data-testid={this.state.pass} type='password' className='textBox' id='pass'\r\n                               placeholder='Password' value ={this.state.pass} onChange={this.changePass} />\r\n                        <div className='loginError' id={this.state.error}>\r\n                            Invalid Username/Password\r\n                        </div>\r\n                    </div>\r\n                    <div id='newRegister' onClick={this.handleRegister}>\r\n                        New User? Click Here to Register\r\n                    </div>\r\n                    <input type='submit' className='button' id='planner' value='LOGIN' />\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginBox);","export function validateGuest(gID) {\r\n    return gID !== \"\";\r\n}\r\n\r\nexport function validatePlanner(user, pass) {\r\n    return user !== \"\" && pass !== \"\";\r\n}\r\n","import React from 'react';\r\nimport '../../SeatPlanner.css';\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\n\r\nclass RegisterBox extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.history.push('/planner');\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className='userMain' id = 'wrapperbox'>\r\n\t\t\t\t<form id='registerBox' onSubmit={this.handleSubmit}>\r\n        \t\t\t<h1 id='registerTitle'>Account Information</h1>\r\n        \t\t\t<div id='inputs'>\r\n          \t\t\t\t<input type='text' className='textBox' id='firstName' placeholder='First Name' />\r\n          \t\t\t\t<input type='text' className='textBox' id='lastName' placeholder='Last Name' />\r\n          \t\t\t\t<input type='text' className='textBox' id='e-mail' placeholder='E-mail Address' />\r\n          \t\t\t\t<input type='password' className='textBox' id='password' placeholder='Password' />\r\n          \t\t\t\t<input type='password' className='textBox' id='re_password' placeholder='Re-Enter Password' />\r\n\t\t\t\t\t</div>\r\n        \t\t\t<input type='submit' className='button' id='newUser' value='Create Account' />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default withRouter(RegisterBox);","import React from 'react';\r\nimport '../../SeatPlanner.css';\r\n\r\nclass CreateGuest extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {clicked: 'false', name: '', email: '', phone: '', address: ''};\r\n\r\n\r\n\t\tthis.openDialog = this.openDialog.bind(this);\r\n\t\tthis.closeDialog = this.closeDialog.bind(this);\r\n\t\tthis.changeName = this.changeName.bind(this);\r\n\t\tthis.changeEmail = this.changeEmail.bind(this);\r\n\t\tthis.changeAddress = this.changeAddress.bind(this);\r\n\t\tthis.changePhone = this.changePhone.bind(this);\r\n\t}\r\n\r\n\topenDialog() {\r\n\t\tdocument.getElementById('dialogbox').style.display = 'block';\r\n\t}\r\n\r\n\tcloseDialog() {\r\n\t\tdocument.getElementById('dialogbox').style.display = 'none';\r\n\t}\r\n\r\n\tchangeName(event) {\r\n\t\tthis.setState({name: event.target.value});\r\n\t}\r\n\r\n\tchangeEmail(event) {\r\n\t\tthis.setState({email: event.target.value});\r\n\t}\r\n\r\n\tchangeAddress(event) {\r\n\t\tthis.setState({address: event.target.value});\r\n\t}\r\n\r\n\tchangePhone(event) {\r\n\t\tthis.setState({phone: event.target.value});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"wrapperbox\">\r\n\t\t\t\t<div id = \"welcome\">\r\n\t\t\t\t\t<h1>Welcome to the Planner Page</h1>\r\n\t\t\t\t\t<h1>We are currently working on this page...</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id = \"buttonbox\">\r\n\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Add Guest' onClick={() => this.openDialog()}/>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div id=\"dialogbox\">\r\n\t\t\t\t\t<dialog open>\r\n\t\t\t\t\t\t<h1>Add a Guest</h1>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"name\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Name\" onChange={this.changeName}/>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"email\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\" onChange={this.changeEmail}/>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"phone\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Phone Number\" onChange={this.changePhone}/>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"address\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Address\" onChange={this.changeAddress}/>\r\n\t\t\t\t\t\t<a href=\"javascript:void(0);\" onClick={() => this.closeDialog()}>Close</a>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</dialog>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default function Planner() {\r\n\treturn <CreateGuest />\r\n}\r\n","import React from 'react';\r\nimport '../../SeatPlanner.css';\r\n\r\nexport default function Guest() {\r\n    return <GuestView />\r\n}\r\n\r\nclass GuestView extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div id = \"welcome\">\r\n                <h1>Welcome to the Guest Page</h1>\r\n                <h1>We are currently working on this page...</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\n\r\nexport default function RouteWrapper({\r\n    component: Component,\r\n    isPrivate,\r\n    ...rest\r\n    }) {\r\n    const signed = false;\r\n\r\n    /**\r\n     * Redirect user to SignIn page if he tries to access a private route\r\n     * without authentication.\r\n     */\r\n    if (isPrivate && !signed) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    /**\r\n     * Redirect user to Main page if he tries to access a non private route\r\n     * (SignIn or SignUp) after being authenticated.\r\n     */\r\n    if (!isPrivate && signed) {\r\n        return <Redirect to=\"/planner\" />;\r\n    }\r\n\r\n    /**\r\n     * If not included on both previous cases, redirect user to the desired route.\r\n     */\r\n    return <Route {...rest} component={Component} />;\r\n}\r\n\r\nRouteWrapper.propTypes = {\r\n    isPrivate: PropTypes.bool,\r\n    component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\r\n};\r\n\r\nRouteWrapper.defaultProps = {\r\n    isPrivate: false\r\n};","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport Login from '../pages/Login';\r\nimport Register from '../pages/Register';\r\nimport Planner from '../pages/Planner';\r\nimport Guest from '../pages/Guest';\r\nimport Route from './Route';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Login} history = {Routes.history}/>\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/planner\" component={Planner} />\r\n            <Route path=\"/guest\" component={Guest} />\r\n            {/* redirect user to Login page if route does not exist and user is not authenticated */}\r\n            <Route component={Login} />\r\n        </Switch>\r\n    );\r\n}","import React from 'react';\r\nimport { Router } from 'react-router';\r\n\r\nimport history from './services/history';\r\nimport Routes from './routes';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router history={history}>\r\n            <Routes />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"mainbox\"));\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}