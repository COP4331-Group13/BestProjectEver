{"version":3,"sources":["services/history.js","services/User.js","services/event.js","services/Validator.js","pages/Login/index.js","pages/Register/index.js","services/navigation.js","pages/Planner/index.js","pages/Guest/index.js","pages/Events/index.js","services/LocalStorage.js","routes/Route.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","User","userName","this","Guest","username","name","address","phoneNumber","guestId","eventPin","Event","pin","eventDate","maxPeople","randomize","require","callAuthenticate","state","xhr","XMLHttpRequest","open","setRequestHeader","send","user","pass","status","validateGuest","storage","gID","length","guestAuthCode","responseText","callGuestAuthenticate","data","JSON","parse","newGuest","results","email","full_name","phone_number","guest_pin","event_pin","setUser","registerPlanner","repass","match","authCode","callRegister","newUser","addGuest","curEventPin","guestPin","phone","callGuest","deleteGuest","callDeleteGuest","updateGuest","callUpdateGuest","getGuestList","guestListCode","callGuestList","guests","i","push","addEvent","curUser","date","max","callEvent","getSingleEvent","eventCode","callSingleEvent","event_name","event_time","max_people","getEventList","eventListCode","callEventList","events","LoginBox","id","props","React","Component","GuestLogin","error","changeGID","bind","handleSubmit","event","target","value","setState","substr","preventDefault","validated","errorMessage","className","onSubmit","type","placeholder","onChange","PlannerLogin","changeUser","changePass","handleRegister","validatePlanner","data-testid","required","onClick","withRouter","RegisterBox","changeName","changeRepass","registered","console","log","Navigation","handleEventPage","towhere","text","CreateGuest","gotGuests","getGuests","guestList","listItems","clicked","search","curEvent","getEvent","Key","guestName","guestEmail","guestPhone","guestAddress","setGuest","undefined","openDialog","closeDialog","changeEmail","changeAddress","changePhone","changeSearch","document","getElementById","style","display","added","alert","prevState","GuestItem","disableForm","enableForm","deleteForm","cancelForm","resetGuest","curGuest","getGuest","window","confirm","location","reload","inputForm","getElementsByClassName","disabled","key","GuestView","getUser","handleLogout","clear","EventList","resetGuests","gotEvents","getEvents","eventList","eventName","setEvent","changeDate","changeMax","listLength","EventItem","goToEvent","LocalStorage","ls","filtered","filter","index","arr","newEvent","RouteWrapper","isPrivate","rest","isSigned","to","Routes","path","exact","render","Login","Register","Events","Planner","defaultProps","App","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.acc690e4.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default history;","export class User {\n\n    constructor(userName) {\n        this.userName = userName;\n    }\n}\n\nexport class Guest extends User {\n    constructor(username, name, address, phoneNumber, guestId, eventPin) {\n        super(username);\n        this.name = name;\n        this.address = address;\n        this.phoneNumber = phoneNumber;\n        this.guestId = guestId;\n        this.eventPin = eventPin;\n    }\n\n}\n","\n\nexport class Event {\n    constructor(name, pin, address, eventDate, maxPeople) {\n        this.name = name;\n        this.pin = pin;\n        this.address = address;\n        this.eventDate = eventDate;\n        this.maxPeople = maxPeople;\n    }\n}","import {User, Guest} from \"./User\";\nimport {Event} from \"./event\";\n\nconst randomize = require(\"randomatic\");\n\nfunction callAuthenticate(state) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://localhost:5000/api/login\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"email=\"+state.user+\"&password=\"+state.pass);\n  return xhr.status;\n}\n\nfunction callGuestAuthenticate(gID) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://localhost:5000/api/guest-login\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"guest_pin=\"+gID);\n  return [xhr.status, xhr.responseText];\n}\n\nfunction callRegister(state) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/register\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"full_name=\"+state.name+\"&email=\"+state.user+\"&password=\"+state.pass);\n  return xhr.status;\n}\n\nfunction callGuest(state, curEventPin, guestPin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://localhost:5000/api/add-guest\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"full_name=\"+state.name+\"&email=\"+state.email+\"&address=\"+state.address+\"&phone_number=\"+state.phone+\"&event_pin=\"+curEventPin+\"&guest_pin=\"+guestPin);\n  return xhr.status;\n}\n\nfunction callDeleteGuest(guestPin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://localhost:5000/api/delete-guest\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"guest_pin=\"+guestPin);\n  return xhr.status;\n}\n\nfunction callUpdateGuest(state, guestPin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://localhost:5000/api/update-guest\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"full_name=\"+state.name+\"&email=\"+state.email+\"&phone_number=\"+state.phone+\"&address=\"+state.address+\"&guest_pin=\"+guestPin);\n  return xhr.status;\n}\n\nfunction callGuestList(curEventPin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://localhost:5000/api/get-guest-list\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"event_pin=\"+curEventPin);\n  return [xhr.status, xhr.responseText];\n}\n\nfunction callEvent(state, curUser, pin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://localhost:5000/api/add-event\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"planner=\"+curUser+\"&pin=\"+pin+\"&event_name=\"+state.name+\"&event_time=\"+state.date+\"&address=\"+state.address+\"&max_people=\"+state.max);\n  return xhr.status;\n}\n\nfunction callSingleEvent(eventPin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://localhost:5000/api/get-event\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"event_pin=\"+eventPin);\n  return [xhr.status, xhr.responseText];\n}\n\nfunction callEventList(curUser) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://localhost:5000/api/get-event-list\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"planner=\"+curUser);\n  return [xhr.status, xhr.responseText];\n}\n\n// post calls ^^^^^^^^^^\n// functions to ls vvvvvvvvv\n\nexport function validatePlanner(state, storage) {\n    if (state.user !== \"\" && state.pass !== \"\") {\n        let authCode = callAuthenticate(state);\n        if (authCode === 200) { // account exists\n          let newUser = new User(state.user);\n          storage.setUser(newUser);\n          return [true];\n        } else if (authCode === 204 || authCode === 205) { // email or password are wrong\n          return [false, 'Invalid email or password']\n        } else { // error sending query 400\n          return [false, 'Error has occured']\n        }\n    } else {\n        return [false, 'Please fill in all fields'];\n    }\n}\n\nexport function validateGuest(state, storage) {\n    if (state.gID !== \"\" && state.gID.length === 10) {\n        let guestAuthCode = callGuestAuthenticate(state.gID);\n        if (guestAuthCode[0] === 200) { // guest account exists\n          let data = JSON.parse(guestAuthCode[1]);\n          let newGuest = new Guest(data.results[0].email, data.results[0].full_name, data.results[0].address,\n            data.results[0].phone_number, data.results[0].guest_pin, data.results[0].event_pin);\n          storage.setUser(newGuest);\n          return [true];\n        } else if (guestAuthCode[0] === 205) { // wrong guest pin\n          return [false, 'Invalid Guest ID']\n        } else { // error sending query 400\n          return [false, 'Error has occured']\n        }\n    } else {\n        return [false, 'Invalid Guest ID'];\n    }\n}\n\nexport function registerPlanner(state, storage) {\n    let emailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,24})+$/;\n    let passFormat = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n\n    if (state.pass !== state.repass) {\n      return [false, 'Passwords do not match']\n    } else if (!state.user.match(emailFormat)) {\n        return [false, `${state.user} is not a valid email address`]\n    } else if (!state.pass.match(passFormat)){\n        return [false, 'Passwords must be at least 8 characters long; contain at least 1 lower case letter [a-z]; at least 1 upper case letter [A-Z]; at least 1 number [0-9]']\n    } else if (state.name !== \"\" && state.user !== \"\" && state.pass !== \"\" && state.repass !== \"\"){\n        let authCode = callAuthenticate(state);\n        if (authCode === 200 || authCode === 204) { // email with password already exists\n          return [false, `An account already exists for ${state.user}`]\n        } else if (authCode === 205) { // email does not exist\n            let registerCode = callRegister(state);\n            if (registerCode === 200) {\n              let newUser = new User(state.user);\n              storage.setUser(newUser);\n              return [true];\n            } else { // error sending query 400\n                  return [false, 'Error has occurred']\n            }\n        } else { // error sending query 400\n           return [false, 'Error has occurred']\n        }\n    } else {\n        return [false, 'Please fill in all fields']\n    }\n}\n\nexport function addGuest(state, curEventPin) {\n  let guestPin = curEventPin + randomize('Aa0', 5);\n  let addGuestCode = callGuest(state, curEventPin, guestPin);\n  if (addGuestCode === 200) { // event added successfully\n    let newGuest = new Guest(state.email, state.name, state.address, state.phone, guestPin, curEventPin);\n    return [true, newGuest];\n  } else {\n    return [false, 'Error has occurred'];\n  }\n}\n\nexport function deleteGuest(guestId) {\n  let deleteGuestCode = callDeleteGuest(guestId);\n  if (deleteGuestCode === 200) {// guest deleted successfully\n    return [true];\n  } else {\n      return [false, 'Error has occurred'];\n  }\n}\n\nexport function updateGuest(state, guestId) {\n  let updateGuestCode = callUpdateGuest(state, guestId);\n  if (updateGuestCode === 200) {// guest deleted successfully\n    return [true];\n  } else {\n      return [false, 'Error has occurred'];\n  }\n}\n\nexport function getGuestList(curEventPin) {\n  let guestListCode = callGuestList(curEventPin);\n  if (guestListCode[0] === 200) {\n    let data = JSON.parse(guestListCode[1]);\n    let guests = [];\n    for (let i = 0; i < data.length; i++) {\n      guests.push(new Guest(data.results[i].email, data.results[i].full_name, data.results[i].address,\n        data.results[i].phone_number, data.results[i].guest_pin, data.results[i].event_pin));\n    }\n    return [true, guests];\n  } else {\n      return [false, 'Error has occurred'];\n  }\n}\n\nexport function addEvent(state, curUser) {\n  let pin = randomize('Aa0', 5);\n  let addEventCode = callEvent(state, curUser, pin);\n  if (addEventCode === 200) { // event added successfully\n    let newEvent = new Event(state.name, pin, state.address, state.date, state.max);\n    return [true, newEvent];\n  } else {\n    return [false, 'Error has occurred'];\n  }\n}\n\nexport function getSingleEvent(eventPin) {\n  let eventCode = callSingleEvent(eventPin);\n  if (eventCode[0] === 200) {\n    let data = JSON.parse(eventCode[1]);\n    let newEvent = new Event(data.results[0].event_name, data.results[0].event_pin,\n        data.results[0].address, data.results[0].event_time, data.results[0].max_people);\n    return [true, newEvent];\n  } else {\n      return [false, 'Error has occurred'];\n  }\n}\n\nexport function getEventList(curUser) {\n  let eventListCode = callEventList(curUser.userName);\n  if (eventListCode[0] === 200) {\n    let data = JSON.parse(eventListCode[1]);\n    let events = [];\n      for (let i = 0; i < data.length; i++) {\n          events.push(new Event(data.results[i].event_name, data.results[i].event_pin,\n              data.results[i].address, data.results[i].event_time, data.results[i].max_people));\n      }\n\n    return [true, events];\n  } else {\n      return [false, 'Error has occurred'];\n  }\n}\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {validatePlanner, validateGuest} from \"../../services/Validator\";\n\n\nexport class LoginBox extends React.Component {\n    render() {\n\n        return (\n            <div id = \"wrapperbox\">\n                <div id = \"welcome\">\n                    <h1>Welcome to Best Fit Seating<br/>Are you here as an Event Planner or as a Guest?</h1>\n                </div>\n                <div id = \"loginbox\">\n                    <PlannerLogin history = {this.props.history} storage = {this.props.storage}/>\n                    <GuestLogin history = {this.props.history} storage = {this.props.storage}/>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport class GuestLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {gID: '', error: \"guestError\"};\n\n        this.changeGID = this.changeGID.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeGID(event) {\n        if (event.target.value.length > 10) {\n            this.setState({gID: event.target.value.substr(0,10)});\n        } else {\n            this.setState({gID: event.target.value});\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let validated = validateGuest(this.state, this.props.storage);\n        if (validated[0]) {\n    \t\t\tthis.props.history.push('/guest');\n    \t\t} else {\n            this.setState({error: 'loginError'});\n            this.setState({errorMessage: validated[1]});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className='box' id= 'guestLogin'>\n                <h2>Login as Guest</h2>\n                <form onSubmit= {this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input type= 'text' className='textBox' id='guestID'\n                               placeholder='Unique Guest ID' value={this.state.gID} onChange={this.changeGID} />\n                        <div className='loginError' id={this.state.error}>\n                            {this.state.errorMessage}\n                        </div>\n                    </div>\n                    <input type='submit' className='button' id='guest' value='CONTINUE' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport class PlannerLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {user:'', pass:'', error:'plannerError'};\n\n        this.changeUser = this.changeUser.bind(this);\n        this.changePass = this.changePass.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeUser(event) {\n        this.setState({user: event.target.value});\n    }\n\n    changePass(event) {\n        this.setState({pass: event.target.value});\n    }\n\n    handleRegister(event) {\n        event.preventDefault();\n        this.props.history.push('/register');\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let validated = validatePlanner(this.state, this.props.storage);\n        if (validated[0]) {\n    \t\t\tthis.props.history.push('/events');\n    \t\t} else {\n            this.setState({error: 'loginError'});\n            this.setState({errorMessage: validated[1]});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className= 'box' id= 'plannerLogin'>\n                <h2>Login as Planner</h2>\n                <form data-testid=\"plannerLoginForm\" onSubmit={this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input data-testid={this.state.user} type='text' className='textBox' id='email' required\n                               placeholder='E-mail' value={this.state.user} onChange={ this.changeUser} />\n                        <input data-testid={this.state.pass} type='password' className='textBox' id='pass' required\n                               placeholder='Password' value ={this.state.pass} onChange={this.changePass} />\n                        <div className='loginError' id={this.state.error}>\n                            {this.state.errorMessage}\n                        </div>\n                    </div>\n                    <div id='newRegister' onClick={this.handleRegister}>\n                        New User? Click Here to Register\n                    </div>\n                    <input type='submit' className='button' id='planner' value='LOGIN' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport default withRouter(LoginBox);\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\"\nimport {registerPlanner} from \"../../services/Validator\";\n\nclass RegisterBox extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {name: '', user:'', pass:'', repass:'', error:'plannerError', errorMessage:\"Invalid Registration\"};\n\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeUser = this.changeUser.bind(this);\n\t\tthis.changePass = this.changePass.bind(this);\n\t\tthis.changeRepass = this.changeRepass.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tchangeName(event) {\n\t\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeUser(event) {\n\t\t\tthis.setState({user: event.target.value});\n\t}\n\n\tchangePass(event) {\n\t\t\tthis.setState({pass: event.target.value});\n\t}\n\n\tchangeRepass(event) {\n\t\t\tthis.setState({repass: event.target.value});\n\t}\n\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tlet registered = registerPlanner(this.state, this.props.storage);\n\t\tif (registered[0]) {\n\t\t\tthis.props.history.push('/events');\n\t\t} else {\n\t\t\tthis.setState({error: 'loginError'});\n\t\t\tthis.setState({errorMessage: registered[1]});\n\t\t}\n\t\tconsole.log(registered[0]);\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className='userMain' id = 'wrapperbox'>\n\t\t\t\t<form id='registerBox' onSubmit={this.handleSubmit}>\n        \t\t\t<h1 id='registerTitle'>Account Information</h1>\n        \t\t\t<div id='inputs'>\n          \t\t\t\t<input type='text' className='textBox' id='firstName' required placeholder='Full Name'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.name} onChange={this.changeName}/>\n          \t\t\t\t<input type='text' className='textBox' id='e-mail' required placeholder='E-mail Address'\n\t\t\t\t\t\t\t\t\t\t\t\t value={this.state.user} onChange={ this.changeUser}/>\n          \t\t\t\t<input type='password' className='textBox' id='password' required placeholder='Password'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.pass} onChange={this.changePass}/>\n          \t\t\t\t<input type='password' className='textBox' id='re_password' required placeholder='Re-Enter Password'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue ={this.state.repass} onChange={this.changeRepass}/>\n\t\t\t\t\t\t\t\t\t<div className='loginError' id={this.state.error} >\n\t\t\t\t\t\t\t\t\t\t{this.state.errorMessage}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n        \t\t\t<input type='submit' className='button' id='newUser' value='Create Account' />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default withRouter(RegisterBox);\n","import React from 'react';\r\n\r\nexport class Navigation extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.handleEventPage = this.handleEventPage.bind(this);\r\n\t}\r\n\r\n\thandleEventPage(event){\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.history.push(this.props.towhere);\r\n\t}\r\n\r\n    render(){\r\n        return(\r\n          <div className='button' id=\"navigation\" onClick={this.handleEventPage}>\r\n              {this.props.text}\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {Navigation} from '../../services/navigation.js';\n\nclass CreateGuest extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tlet gotGuests = this.props.storage.getGuests();\n\t\tif (gotGuests[0]) {\n\t\t\t\tthis.state = {\n\t\t\t\t\t\tguestList: gotGuests[1],\n\t\t\t\t\t\tlistItems: [],\n\t\t\t\t\t\tclicked: 'false',\n\t\t\t\t\t\tname: '',\n\t\t\t\t\t\temail: '',\n\t\t\t\t\t\tphone: '',\n\t\t\t\t\t\taddress: '',\n\t\t\t\t\t\tsearch: '',\n\t\t\t\t\t\tcurEvent:this.props.storage.getEvent()\n\t\t\t\t};\n\n\t\t\t\tfor (let i = 0; i < this.state.guestList.length; i++) {\n\t\t\t\t\t\tthis.state.listItems.push(\n\t\t\t\t\t\t\t\t<GuestItem\n\t\t\t\t\t\t\t\t\t\tKey={this.state.guestList[i].guestId}\n\t\t\t\t\t\t\t\t\t\tGuest={this.state.guestList[i]}\n\t\t\t\t\t\t\t\t\t\tguestName={this.state.guestList[i].name}\n\t\t\t\t\t\t\t\t\t\tguestEmail={this.state.guestList[i].userName}\n\t\t\t\t\t\t\t\t\t\tguestPhone={this.state.guestList[i].phoneNumber}\n\t\t\t\t\t\t\t\t\t\tguestAddress={this.state.guestList[i].address}\n\t\t\t\t\t\t\t\t\t\tguestId={this.state.guestList[i].guestId}\n\t\t\t\t\t\t\t\t\t\tstorage={this.props.storage}\n\t\t\t\t\t\t\t\t\t\thistory={this.props.history}\n\t\t\t\t\t\t\t\t/>);\n\t\t\t\t}\n\t\t} else {\n\t\t\t\tthis.state = {\n\t\t\t\t\t\tguestList: [],\n\t\t\t\t\t\tlistItems: [],\n\t\t\t\t\t\tclicked: 'false',\n\t\t\t\t\t\tname: '',\n\t\t\t\t\t\temail: '',\n\t\t\t\t\t\tphone: '',\n\t\t\t\t\t\taddress: '',\n\t\t\t\t\t\tsearch: '',\n\t\t\t\t\t\tcurEvent:this.props.storage.getEvent()\n\t\t\t\t};\n\t\t}\n\n\t\tthis.props.storage.setGuest(undefined);\n\t\tthis.openDialog = this.openDialog.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.closeDialog = this.closeDialog.bind(this);\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeEmail = this.changeEmail.bind(this);\n\t\tthis.changeAddress = this.changeAddress.bind(this);\n\t\tthis.changePhone = this.changePhone.bind(this);\n\t\tthis.changeSearch = this.changeSearch.bind(this);\n\t}\n\n\topenDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'block';\n\t}\n\n\tcloseDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'none';\n\t}\n\n\tchangeName(event) {\n\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeEmail(event) {\n\t\tthis.setState({email: event.target.value});\n\t}\n\n\tchangeAddress(event) {\n\t\tthis.setState({address: event.target.value});\n\t}\n\n\tchangePhone(event) {\n\t\tthis.setState({phone: event.target.value});\n\t}\n\n\tchangeSearch(event) {\n\t\tthis.setState({search: event.target.value});\n\t}\n\n\thandleSubmit(event) {\n\t\t\tevent.preventDefault();\n\t\t\tlet added = this.props.storage.addGuest(this.state);\n\t\t\tif (added[0]) {\n\t\t\t\tthis.closeDialog();\n\t\t\t\talert(\"Guest was successfully added!\");\n\t\t\t\tlet listLength = this.state.guestList.length;\n\t\t\t\tthis.setState({guestList: this.props.storage.getGuests()});\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\t\tlistItems: [...prevState.listItems, <GuestItem\n\t\t\t\t\t\t\tKey={added[1].guestId}\n\t\t\t\t\t\t\tGuest={added[1]}\n\t\t\t\t\t\t\tguestName={added[1].name}\n\t\t\t\t\t\t\tguestEmail={added[1].userName}\n\t\t\t\t\t\t\tguestPhone={added[1].phoneNumber}\n\t\t\t\t\t\t\tguestAddress={added[1].address}\n\t\t\t\t\t\t\tguestId={added[1].guestId}\n\t\t\t\t\t\t\tstorage={this.props.storage}\n\t\t\t\t\t\t\thistory={this.props.history}\n\t\t\t\t\t\t/>]\n\t\t\t\t}));\n\n\t\t\t} else {\n\t\t\t\t\tthis.setState({error: 'guestError'});\n\t\t\t\t\tthis.setState({errorMessage: added[1]});\n\t\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"wrapperbox\">\n\t\t\t\t<div id = \"welcome\">\n\t\t\t\t<Navigation history={this.props.history} towhere={\"/events\"} text={\"Events\"} />\n\t\t\t\t<h1>{this.state.curEvent.name}</h1>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"sidebar\">\n\t\t\t\t\t<div id=\"search\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"searchBox\"\n\t\t\t\t\t\t\t\tplaceholder=\"Search...\" onChange={this.changeSearch}/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"list\">\n\t\t\t\t\t\t<ul id=\"guestList\">{this.state.listItems}</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"add\">\n\t\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Add Guest' onClick={() => this.openDialog()}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"dialogbox\">\n\t\t\t\t\t<dialog open>\n\t\t\t\t\t\t<div id=\"closeWindow\">\n\t\t\t\t\t\t\t<input type='submit' id=\"closeButton\" value='X' onClick={() => this.closeDialog()}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h1>Add a Guest</h1>\n\t\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"name\"\n\t\t\t\t\t\t\t\tplaceholder=\"Name\" value ={this.state.name} onChange={this.changeName} required/>\n\t\t\t\t\t\t\t<input type=\"email\" className=\"textBox\" id=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\" value ={this.state.email} onChange={this.changeEmail} required/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"phone\"\n\t\t\t\t\t\t\t\tplaceholder=\"Phone Number\" value ={this.state.phone} onChange={this.changePhone} required/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"address\"\n\t\t\t\t\t\t\t\tplaceholder=\"Address\" value ={this.state.address} onChange={this.changeAddress} required/>\n\t\t\t\t\t\t\t<div className='eventError' id={this.state.error} >\n\t\t\t\t\t\t\t\t{this.state.errorMessage}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id=\"buttonbox\">\n\t\t\t\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Submit'/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</dialog>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nclass GuestItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n\t\t\t\tthis.state = {\n\t\t\t\t\t\tname: this.props.guestName,\n\t\t\t\t\t\temail: this.props.guestEmail,\n\t\t\t\t\t\tphone: this.props.guestPhone,\n\t\t\t\t\t\taddress: this.props.guestAddress\n\t\t\t\t};\n\n\t\t\t\tthis.changeName = this.changeName.bind(this);\n\t\t\t\tthis.changeEmail = this.changeEmail.bind(this);\n\t\t\t\tthis.changeAddress = this.changeAddress.bind(this);\n\t\t\t\tthis.changePhone = this.changePhone.bind(this);\n\t\t\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\t\t\tthis.openDialog = this.openDialog.bind(this);\n\t\t\t\tthis.closeDialog = this.closeDialog.bind(this);\n\t\t\t\tthis.disableForm = this.disableForm.bind(this);\n\t\t\t\tthis.enableForm = this.enableForm.bind(this);\n\t\t\t\tthis.deleteForm = this.deleteForm.bind(this);\n\t\t\t\tthis.cancelForm = this.cancelForm.bind(this);\n    }\n\n\t\tchangeName(event) {\n\t\t\tthis.setState({name: event.target.value});\n\t\t}\n\n\t\tchangeEmail(event) {\n\t\t\tthis.setState({email: event.target.value});\n\t\t}\n\n\t\tchangeAddress(event) {\n\t\t\tthis.setState({address: event.target.value});\n\t\t}\n\n\t\tchangePhone(event) {\n\t\t\tthis.setState({phone: event.target.value});\n\t\t}\n\n\t\topenDialog() {\n\t\t\tthis.props.storage.setGuest(this.props.Guest);\n\t\t\tdocument.getElementById(this.props.Key).style.display = 'block';\n\t\t}\n\n\t\tcloseDialog() {\n\t\t\tthis.disableForm();\n\t\t\tthis.cancelForm();\n\t\t\tthis.props.storage.resetGuest();\n\t\t\tdocument.getElementById(this.props.Key).style.display = 'none';\n\t\t}\n\n\t\tdeleteForm() {\n\t\t\tlet curGuest = this.props.storage.getGuest();\n\t\t\tif (window.confirm(\"Are you sure you want to delete the guest: \" + curGuest.guestId + \" ?\") === true) {\n\t\t\t\t\tlet deleted = this.props.storage.deleteGuest();\n\t\t\t\t\tif (deleted) {\n\t\t\t\t   \talert(\"Guest deleted!\");\n\t\t\t\t\t\tthis.closeDialog();\n\t\t\t\t\t\twindow.location.reload(); // for now pages reload after deleting so that it updates the guest list.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\talert(\"Error deleting guest\");\n\t\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t}\n\n\t\tcancelForm() {\n\t\t\tthis.disableForm();\n\t\t\tthis.setState({name: this.props.guestName});\n\t\t\tthis.setState({email: this.props.guestEmail});\n\t\t\tthis.setState({phone: this.props.guestPhone});\n\t\t\tthis.setState({address: this.props.guestAddress});\n\t\t}\n\n\t\tdisableForm() {\n\t\t\tvar inputForm = document.getElementsByClassName('textFormBox')\n\t\t\tfor (var i = 0; i < inputForm.length; i++) {\n    \t\tinputForm[i].disabled = true;\n\t\t\t}\n\t\t}\n\n\t\tenableForm() {\n\t\t\tvar inputForm = document.getElementsByClassName('textFormBox')\n\t\t\tfor (var i = 0; i < inputForm.length; i++) {\n    \t\tinputForm[i].disabled = false;\n\t\t\t}\n\t\t}\n\n\t\thandleSubmit(event) {\n\t\t\tevent.preventDefault();\n\t\t\tlet curGuest = this.props.storage.getGuest();\n\t\t\tif (window.confirm(\"Do you want to save changes?\") === true) {\n\t\t\t\t\tlet updated = this.props.storage.updateGuest(this.state);\n\t\t\t\t\tif (updated) {\n\t\t\t\t\t\talert(\"Guest info updated!\");\n\t\t\t\t\t\tthis.closeDialog();\n\t\t\t\t\t\twindow.location.reload(); // for now page reloads to get the updated info.\n\t\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t}\n\n    render() {\n        return (\n\t\t\t\t\t<div id=\"sidebar\">\n\t\t\t\t\t\t<div id=\"guestListItem\">\n            \t<li\n\t\t\t\t\t\t\t\tkey={this.props.Key} className='guestItem' value={this.props.guestName}>{this.props.guestName}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<input type='submit' id='guestItemOpen' value='+' onClick={() => this.openDialog()}/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"dialogbox2\" id={this.props.Key}>\n\t\t\t\t\t\t\t<dialog open>\n\t\t\t\t\t\t\t\t\t<div id=\"closeWindow\">\n\t\t\t\t\t\t\t\t\t\t<input type='submit' id=\"closeButton\" value='X' onClick={() => this.closeDialog()}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div id='guestBoxInfo'>\n\t\t\t\t\t\t\t\t\t\t<h1>{this.props.guestName}</h1>\n\t\t\t\t\t\t\t\t\t\t<label><b>Guest ID:</b> {this.props.guestId}</label>\n\t\t\t\t\t\t\t\t\t\t<form id=\"formGuest\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"textFormBox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.name} onChange={this.changeName} disabled/>\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"email\" className=\"textFormBox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.email} onChange={this.changeEmail} disabled/>\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Phone</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"textFormBox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.phone} onChange={this.changePhone} disabled/>\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Address</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"textFormBox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.address} onChange={this.changeAddress} disabled/>\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<input type='submit' className='button' id='guestButtons' value='Save'/>\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t<input type='submit' className='button' id='guestButtons' value='Edit' onClick={() => this.enableForm()}/>\n\t\t\t\t\t\t\t\t\t\t<input type='submit' className='button' id='guestButtons' value='Delete'onClick={() => this.deleteForm()}/>\n\t\t\t\t\t\t\t\t\t\t<input type='submit' className='button' id='guestButtons' value='Cancel' onClick={() => this.cancelForm()}/>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div id='guestBoxPreferences'>\n\t\t\t\t\t\t\t\t\t\t<h1>Preferences</h1>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div id='guestBoxGroups'>\n\t\t\t\t\t\t\t\t\t\t<h1>Groups</h1>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</dialog>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n    }\n}\n\nexport default withRouter(CreateGuest);\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {Navigation} from '../../services/navigation.js';\n\nexport class GuestView extends React.Component {\n\n    constructor(props) {\n      super(props);\n\n      this.props.storage.getSingleEvent();\n\n      this.state = {\n        curUser: this.props.storage.getUser(),\n        curEvent: this.props.storage.getEvent()\n      };\n\n      this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    handleLogout(event) {\n        event.preventDefault();\n        this.props.storage.clear();\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        return(\n            <div id = \"wrapperbox\">\n                <div id = \"welcome\">\n                  <div className='button' id='logout' onClick={this.handleLogout}>\n                      Logout\n                  </div>\n                  <h1>Welcome, {this.state.curUser.name}!</h1>\n                </div>\n\n                <div id= 'seatingChart'>\n                  <h1>Pretend this is a seating chart...</h1>\n                </div>\n\n                <div id= 'guestInfo'>\n                  <div className='box' id='guestBox'>\n                    <h3>Account Information</h3>\n                    <div id= 'guestInformation'>\n                      <p><b>Guest ID: </b>{this.state.curUser.guestId}</p>\n                      <p><b>Name: </b>{this.state.curUser.name}</p>\n                      <p><b>Email: </b>{this.state.curUser.userName}</p>\n                      <p><b>Phone Number: </b>{this.state.curUser.phoneNumber}</p>\n                      <p><b>Address: </b>{this.state.curUser.address}</p>\n                    </div>\n                  </div>\n                  <div className='box' id= 'preferencesBox'>\n                    <h3>Preferences</h3>\n                    <div id='guestPreferences'>\n                      <p> here goes guest preferences </p>\n                    </div>\n                  </div>\n                  <div className='box' id= 'groupsBox'>\n                    <h3>Groups</h3>\n                    <div id='guestGroups'>\n                      <p><b>Your Group:</b> ........ </p>\n                    </div>\n                  </div>\n                  <div className='box' id='eventBox'>\n                    <h3>Event Information</h3>\n                    <div id= 'eventInformation'>\n                      <p><b>Event Name: </b>{this.state.curEvent.name}</p>\n                      <p><b>Event Address: </b>{this.state.curEvent.address}</p>\n                      <p><b>Event Date/Time: </b>{this.state.curEvent.eventDate}</p>\n                    </div>\n                  </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default withRouter(GuestView);\n","import {withRouter} from \"react-router-dom\";\nimport '../../SeatPlanner.css';\nimport React from \"react\";\n\nexport class EventList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.props.storage.resetGuests();\n        let gotEvents = this.props.storage.getEvents();\n        if (gotEvents[0]) {\n            this.state = {\n                eventList: gotEvents[1],\n                listItems: [],\n                name: '',\n                date: '',\n                address: '',\n                max: ''\n            };\n\n            for (let i = 0; i < this.state.eventList.length; i++) {\n                this.state.listItems.push(\n                    <EventItem\n                        Key={this.state.eventList[i].pin}\n                        Event={this.state.eventList[i]}\n                        eventName={this.state.eventList[i].name}\n                        storage={this.props.storage}\n                        history={this.props.history}\n                    />);\n            }\n        } else {\n            this.state = {\n                eventList: [],\n                listItems: [],\n                name: '',\n                date: '',\n                address: '',\n                max: ''\n            };\n        }\n\n        this.props.storage.setEvent(undefined);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.openDialog = this.openDialog.bind(this);\n        this.closeDialog = this.closeDialog.bind(this);\n        this.changeName = this.changeName.bind(this);\n        this.changeDate = this.changeDate.bind(this);\n        this.changeAddress = this.changeAddress.bind(this);\n        this.changeMax = this.changeMax.bind(this);\n    }\n\n    openDialog() {\n  \t\tdocument.getElementById('dialogbox').style.display = 'block';\n  \t}\n\n  \tcloseDialog() {\n  \t\tdocument.getElementById('dialogbox').style.display = 'none';\n  \t}\n\n    changeName(event) {\n  \t\tthis.setState({name: event.target.value});\n  \t}\n\n  \tchangeDate(event) {\n  \t\tthis.setState({date: event.target.value});\n  \t}\n\n  \tchangeAddress(event) {\n  \t\tthis.setState({address: event.target.value});\n  \t}\n\n  \tchangeMax(event) {\n  \t\tthis.setState({max: event.target.value});\n  \t}\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let added = this.props.storage.addEvent(this.state);\n        if (added[0]) {\n          this.closeDialog();\n          let listLength = this.state.eventList.length;\n          this.setState({eventList: this.props.storage.getEvents()});\n          this.setState(prevState => ({\n              listItems: [...prevState.listItems, <EventItem\n                  Key={listLength}\n                  Event = {added[1]}\n                  eventName = {added[1].name}\n                  storage = {this.props.storage}\n                  history = {this.props.history}\n              />]\n          }));\n    \t\t} else {\n            this.setState({error: 'eventError'});\n            this.setState({errorMessage: added[1]});\n        }\n    }\n\n    handleLogout(event) {\n        event.preventDefault();\n        this.props.storage.clear();\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        return (\n            <div id=\"logoutBox\">\n\n                <div id=\"wrapperbox\">\n                    <div id = \"welcome\">\n                        <div className='button' id='logout' onClick={this.handleLogout}>\n                            Logout\n                        </div>\n                        <h1>Welcome, {this.props.storage.getUser().userName}!</h1>\n                    </div>\n                    <div id=\"listWrapper\">\n                        <ul id=\"eventList\">{this.state.listItems}</ul>\n                        <input type='submit' className='button' id='add_event' value='Add Event' onClick={() => this.openDialog()}/>\n                    </div>\n                    <div id=\"dialogbox\">\n                        <dialog open>\n                            <div id=\"closeWindow\">\n                                <input type='submit' id=\"closeButton\" value='X' onClick={() => this.closeDialog()}/>\n                            </div>\n                            <h1>Add an Event</h1>\n                            <form onSubmit={this.handleSubmit}>\n                                <input type=\"text\" className=\"textBox\"\n                                        id=\"name\" placeholder=\"Event Name\"\n                                        value ={this.state.name}\n                                        onChange={this.changeName} required />\n                                <input type=\"datetime-local\" className=\"textBox\"\n                                       id=\"date\" placeholder=\"Date/Time\"\n                                       value ={this.state.date}\n                                       onChange={this.changeDate} required />\n                                <input type=\"text\" className=\"textBox\"\n                                        id=\"address\" placeholder=\"Address\"\n                                        value ={this.state.address}\n                                        onChange={this.changeAddress} required/>\n                                <input type=\"number\" className=\"textBox\"\n                                        id=\"max\" placeholder=\"Max # of Guests\"\n                                        value ={this.state.max}\n                                        onChange={this.changeMax} required/>\n                                <div className='eventError' id={this.state.error} >\n                                    {this.state.errorMessage}\n                                </div>\n                                <div id=\"buttonbox\">\n                                    <input type='submit' className='button' id='add_event' value='Submit'/>\n                                </div>\n                            </form>\n                        </dialog>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass EventItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.goToEvent = this.goToEvent.bind(this);\n    }\n\n    goToEvent(event) {\n        event.preventDefault();\n        this.props.storage.setEvent(this.props.Event);\n        this.props.history.push('/planner');\n    }\n\n    render() {\n        return (\n            <li key={this.props.Key} className='eventItem' onClick={this.goToEvent} value={this.props.eventName}>{this.props.eventName}</li>\n        );\n    }\n}\n\n\nexport default withRouter(EventList);\n","import ls from 'local-storage';\nimport {Guest, User} from \"./User\";\nimport {addEvent, addGuest, deleteGuest, updateGuest, getEventList, getGuestList, getSingleEvent} from \"./Validator\";\n\nexport class LocalStorage {\n    constructor() {\n        if (ls('guestList') === null)\n            ls('guestList', []);\n        if (ls('itemList') === null)\n            ls('itemList', []);\n        if (ls('eventList') === null)\n            ls('eventList', []);\n        if (ls('curUser') === null)\n            ls('curUser', undefined);\n        if (ls('curGuest') === null)\n            ls('curGuest', undefined);\n        if (ls('curEvent') == null)\n            ls('curEvent', undefined);\n        if (ls('signed') === null)\n            ls('signed', false);\n    }\n\n    setUser(newUser) {\n        if (newUser instanceof User) {\n            ls('curUser', newUser);\n            ls('signed', true);\n            return true;\n        } else if (newUser instanceof Guest) {\n             ls('curUser', newUser);\n             ls('signed', true);\n             return true;\n        } else {\n            return false;\n        }\n    }\n    getUser() {\n        return ls('curUser');\n    }\n    addGuest(state) {\n        if (ls('curEvent') !== undefined) {\n            let guests = ls('guestList');\n            let added = addGuest(state, ls('curEvent').pin);\n            if (added[0]) {\n                guests.push(added[1]);\n                ls('guestList', guests);\n                return added;\n            } else {\n                return added;\n            }\n        }\n        return [false];\n    }\n    setGuest(newGuest) {\n      ls('curGuest', newGuest)\n    }\n    deleteGuest() {\n      if (ls('curGuest') !== undefined) {\n        let guests = ls('guestList');\n        let deleted = deleteGuest(ls('curGuest').guestId);\n        if (deleted[0]) {\n          let filtered = guests.filter(function(value, index, arr) {\n            return value.guestId !== ls('curGuest').guestId;\n          });\n          ls('guestList', filtered);\n          return true;\n        }\n      }\n      return false;\n    }\n    updateGuest(state) {\n      if (ls('curGuest') !== undefined) {\n        let guests = ls('guestList');\n        let updated = updateGuest(state, ls('curGuest').guestId);\n        if (updated[0]) {\n          for (let i in guests) {\n            if (guests[i].guestId === ls('curGuest').guestId) {\n              guests[i].userName = state.email;\n              guests[i].name = state.name;\n              guests[i].phoneNumber = state.phone;\n              guests[i].address = state.address;\n              break; // found it\n            }\n          }\n          ls('guestList', guests);\n          return true;\n        }\n      }\n      return false;\n    }\n    getGuest() {\n      return ls('curGuest');\n    }\n    getGuests() {\n      if (ls('guestList').length !== 0) {\n          return [true, ls('guestList')];\n      } else {\n           if (ls('curEvent') !== undefined) {\n              let added = getGuestList(ls('curEvent').pin);\n              if (added[0]) {\n                  ls('guestList', added[1]);\n              }\n              return added\n          }\n          return [false, \"No Current Event\"];\n      }\n    }\n    resetGuest() {\n      ls('curGuest', undefined);\n    }\n    resetGuests() {\n      ls('guestList', []);\n    }\n    addEvent(state) {\n        let eventList = ls('eventList');\n        let added = addEvent(state, this.getUser());\n        if (added[0]) {\n            eventList.push(added[1]);\n            ls('eventList', eventList);\n        }\n        return added;\n    }\n    setEvent(newEvent) {\n        ls('curEvent', newEvent);\n    }\n    getSingleEvent() {\n        let newEvent = getSingleEvent(ls('curUser').eventPin);\n        if (newEvent[0]) {\n          ls('curEvent', newEvent[1]);\n        }\n    }\n    getEvent() {\n        return ls('curEvent');\n    }\n    getEvents() {\n\n        if (ls('eventList').length !== 0) {\n            return [true, ls('eventList')];\n        } else {\n            if (ls('curUser') !== undefined) {\n\n                let added = getEventList(ls('curUser'));\n                if (added[0]) {\n                    ls('eventList', added[1]);\n                }\n                return added\n            }\n\n            return [false, \"No Current User\"];\n        }\n    }\n\n    clear() {\n        ls('curUser', undefined);\n        ls('curGuest', undefined);\n        ls('curEvent', undefined);\n        ls('guestList', []);\n        ls('itemList', []);\n        ls('eventList', []);\n        ls('signed', false);\n    }\n\n    isSigned() {\n        return ls('signed');\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {LocalStorage} from \"../services/LocalStorage\";\n\nexport default function RouteWrapper({\n    isPrivate,\n    storage,\n    ...rest\n    }) {\n\n    /**\n     * Redirect user to SignIn page if he tries to access a private route\n     * without authentication.\n     */\n    if (isPrivate && !storage.isSigned()) {\n        return <Redirect to=\"/\" />;\n    }\n\n    /**\n     * If not included on both previous cases, redirect user to the desired route.\n     */\n    return <Route {...rest} />;\n}\n\nRouteWrapper.propTypes = {\n    isPrivate: PropTypes.bool,\n    storage: PropTypes.instanceOf(LocalStorage).isRequired\n};\n\nRouteWrapper.defaultProps = {\n    isPrivate: false\n};","import React from \"react\";\nimport { BrowserRouter, Switch} from \"react-router-dom\";\nimport Login from '../pages/Login';\nimport Register from '../pages/Register';\nimport Planner from '../pages/Planner';\nimport Guest from '../pages/Guest';\nimport Events from '../pages/Events';\nimport Route from './Route'\nimport {LocalStorage} from '../services/LocalStorage'\n\nexport default function Routes() {\n    let storage = new LocalStorage();\n    return (\n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact\n                   render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path=\"/register\"\n                   render = {(props) =><Register{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path = \"/events\"\n                    render = {(props) =><Events{...props} history = {Routes.history} storage = {storage}/>}\n                    isPrivate = {true} storage={storage}\n            />\n            <Route path=\"/planner\"\n                   render = {(props) =><Planner{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            <Route path=\"/guest\"\n                   render = {(props) =><Guest{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            {/* redirect user to Login page if route does not exist and user is not authenticated */}\n            <Route\n                render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                storage={storage}\n            />\n        </Switch>\n       </BrowserRouter>\n    );\n}\n","import React from 'react';\nimport { Router } from 'react-router';\n\nimport history from './services/history';\nimport Routes from './routes';\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <Routes  />\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"mainbox\"));\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}