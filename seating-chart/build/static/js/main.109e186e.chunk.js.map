{"version":3,"sources":["services/history.js","services/User.js","services/event.js","services/Validator.js","pages/Login/index.js","pages/Register/index.js","services/navigation.js","pages/Planner/index.js","pages/Guest/index.js","pages/Events/index.js","services/LocalStorage.js","routes/Route.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","User","userName","this","Guest","username","name","address","phoneNumber","guestId","Event","pin","eventDate","maxPeople","randomize","require","callAuthenticate","state","xhr","XMLHttpRequest","open","setRequestHeader","send","user","pass","status","validateGuest","storage","gID","length","guestAuthCode","responseText","callGuestAuthenticate","data","JSON","parse","newGuest","results","email","full_name","phone_number","guest_pin","setUser","registerPlanner","repass","match","authCode","callRegister","newUser","addEvent","curUser","date","max","callEvent","addGuest","curEventPin","guestPin","callGuest","getEventList","eventListCode","callEventList","events","i","push","event_name","event_pin","event_time","max_people","LoginBox","id","props","React","Component","GuestLogin","error","changeGID","bind","handleSubmit","event","target","value","setState","substr","preventDefault","validated","errorMessage","className","onSubmit","type","placeholder","onChange","PlannerLogin","changeUser","changePass","handleRegister","validatePlanner","data-testid","required","onClick","withRouter","RegisterBox","changeName","changeRepass","registered","console","log","Navigation","handleEventPage","towhere","text","CreateGuest","clicked","phone","search","curEvent","getEvent","openDialog","closeDialog","changeEmail","changeAddress","changePhone","changeSearch","document","getElementById","style","display","added","alert","GuestView","handleLogout","clear","getUser","EventList","gotEvents","getEvents","eventList","listItems","Key","eventName","setEvent","undefined","changeDate","changeMax","listLength","prevState","EventItem","goToEvent","key","LocalStorage","ls","guests","newEvent","RouteWrapper","isPrivate","rest","isSigned","to","Routes","path","exact","render","Login","Register","Events","Planner","defaultProps","App","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.109e186e.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default history;","export class User {\n\n    constructor(userName) {\n        this.userName = userName;\n    }\n}\n\nexport class Guest extends User {\n    constructor(username, name, address, phoneNumber, guestId) {\n        super(username);\n        this.name = name;\n        this.address = address;\n        this.phoneNumber = phoneNumber;\n        this.guestId = guestId;\n    }\n\n}","\n\nexport class Event {\n    constructor(name, pin, address, eventDate, maxPeople) {\n        this.name = name;\n        this.pin = pin;\n        this.address = address;\n        this.eventDate = eventDate;\n        this.maxPeople = maxPeople;\n    }\n}","import {User, Guest} from \"./User\";\nimport {Event} from \"./event\";\n\nconst randomize = require(\"randomatic\");\n\nfunction callAuthenticate(state) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/login\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"email=\"+state.user+\"&password=\"+state.pass);\n  return xhr.status;\n}\n\nfunction callGuestAuthenticate(gID) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/guest-login\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"guest_pin=\"+gID);\n  return [xhr.status, xhr.responseText];\n}\n\nfunction callRegister(state) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/register\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"full_name=\"+state.name+\"&email=\"+state.user+\"&password=\"+state.pass);\n  return xhr.status;\n}\n\nfunction callEvent(state, curUser, pin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/add-event\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"planner=\"+curUser+\"&pin=\"+pin+\"&event_name=\"+state.name+\"&event_time=\"+state.date+\"&address=\"+state.address+\"&max_people=\"+state.max);\n  return xhr.status;\n}\n\nfunction callGuest(state, curEventPin, guestPin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/add-guest\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"full_name=\"+state.name+\"&email=\"+state.email+\"&address=\"+state.address+\"&phone_number=\"+state.phone_number+\"&event_pin=\"+curEventPin+\"&guest_pin=\"+guestPin);\n  return xhr.status;\n}\n\nfunction callEventList(curUser) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/get-event-list\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"planner=\"+curUser);\n  return [xhr.status, xhr.responseText];\n}\n\nfunction callGuestList(curEventPin) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"http://35.243.169.229:5000/api/get-guest-list\", false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"event_pin=\"+curEventPin);\n  return [xhr.status, xhr.responseText];\n}\n\nexport function validatePlanner(state, storage) {\n    if (state.user !== \"\" && state.pass !== \"\") {\n        let authCode = callAuthenticate(state);\n        if (authCode === 200) { // account exists\n          let newUser = new User(state.user);\n          storage.setUser(newUser);\n          return [true];\n        } else if (authCode === 204 || authCode === 205) { // email or password are wrong\n          return [false, 'Invalid email or password']\n        } else { // error sending query 400\n          return [false, 'Error has occured']\n        }\n    } else {\n        return [false, 'Please fill in all fields'];\n    }\n}\n\nexport function validateGuest(state, storage) {\n    if (state.gID !== \"\" && state.gID.length === 10) {\n        let guestAuthCode = callGuestAuthenticate(state.gID);\n        let data = JSON.parse(guestAuthCode[1]);\n        if (guestAuthCode[0] === 200) { // guest account exists\n          let newGuest = new Guest(data.results[0].email, data.results[0].full_name, data.results[0].address,\n            data.results[0].phone_number, data.results[0].guest_pin);\n          storage.setUser(newGuest);\n          return [true];\n        } else if (guestAuthCode === 205) { // wrong guest pin\n          return [false, 'Invalid Guest ID']\n        } else { // error sending query 400\n          return [false, 'Error has occured']\n        }\n    } else {\n        return [false, 'Invalid Guest ID'];\n    }\n}\n\nexport function registerPlanner(state, storage) {\n    let emailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,24})+$/;\n    let passFormat = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n\n    if (state.pass !== state.repass) {\n      return [false, 'Passwords do not match']\n    } else if (!state.user.match(emailFormat)) {\n        return [false, `${state.user} is not a valid email address`]\n    } else if (!state.pass.match(passFormat)){\n        return [false, 'Passwords must be at least 8 characters long; contain at least 1 lower case letter [a-z]; at least 1 upper case letter [A-Z]; at least 1 number [0-9]']\n    } else if (state.name !== \"\" && state.user !== \"\" && state.pass !== \"\" && state.repass !== \"\"){\n        let authCode = callAuthenticate(state);\n        if (authCode === 200 || authCode === 204) { // email with password already exists\n          return [false, `An account already exists for ${state.user}`]\n        } else if (authCode === 205) { // email does not exist\n            let registerCode = callRegister(state);\n            if (registerCode === 200) {\n              let newUser = new User(state.user);\n              storage.setUser(newUser);\n              return [true];\n            } else { // error sending query 400\n                  return [false, 'Error has occurred']\n            }\n        } else { // error sending query 400\n           return [false, 'Error has occurred']\n        }\n    } else {\n        return [false, 'Please fill in all fields']\n    }\n}\n\nexport function addEvent(state, curUser) {\n  let pin = randomize('Aa0', 5);\n  let addEventCode = callEvent(state, curUser, pin);\n  if (addEventCode === 200) { // event added successfully\n    let newEvent = new Event(state.name, pin, state.address, state.date, state.max);\n    return [true, newEvent];\n  } else {\n    return [false, 'Error has occurred'];\n  }\n}\n\nexport function addGuest(state, curEventPin) {\n  let guestPin = curEventPin + randomize('Aa0', 5);\n  let addGuestCode = callGuest(state, curEventPin, guestPin);\n  if (addGuestCode === 200) { // event added successfully\n    // do stuff to add to storage\n    return [true, new Guest(state.email, state.name, state.address, state.phone_number, guestPin)];\n  } else {\n    return [false, 'Error has occurred'];\n  }\n}\n\nexport function getEventList(curUser) {\n  let eventListCode = callEventList(curUser.userName);\n  if (eventListCode[0] === 200) {\n    let data = JSON.parse(eventListCode[1]);\n    let events = [];\n      for (let i = 0; i < data.length; i++) {\n          events.push(new Event(data.results[i].event_name, data.results[i].event_pin,\n              data.results[i].address, data.results[i].event_time, data.results[i].max_people));\n      }\n\n    return [true, events];\n  } else {\n      return [false, 'Error has occurred'];\n  }\n}\n\nexport function getGuestList(curEventPin) {\n  let guestListCode = callGuestList(curEventPin);\n  if (guestListCode[0] === 200) {\n    let data = JSON.parse(guestListCode[1]);\n    let guests = [];\n    for (let i = 0; i < data.length; i++) {\n      guests.push(new Guest(data.results[i].email, data.results[i].full_name, data.results[i].address,\n        data.results[i].phone_number, data.results[i].guest_pin));\n    }\n    return [true, guests];\n  } else {\n      return [false, 'Error has occurred'];\n  }\n}\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {validatePlanner, validateGuest} from \"../../services/Validator\";\n\n\nexport class LoginBox extends React.Component {\n    render() {\n\n        return (\n            <div id = \"wrapperbox\">\n                <div id = \"welcome\">\n                    <h1>Welcome to Best Fit Seating<br/>Are you here as an Event Planner or as a Guest?</h1>\n                </div>\n                <div id = \"loginbox\">\n                    <PlannerLogin history = {this.props.history} storage = {this.props.storage}/>\n                    <GuestLogin history = {this.props.history} storage = {this.props.storage}/>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport class GuestLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {gID: '', error: \"guestError\"};\n\n        this.changeGID = this.changeGID.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeGID(event) {\n        if (event.target.value.length > 10) {\n            this.setState({gID: event.target.value.substr(0,10)});\n        } else {\n            this.setState({gID: event.target.value});\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let validated = validateGuest(this.state, this.props.storage);\n        if (validated[0]) {\n    \t\t\tthis.props.history.push('/guest');\n    \t\t} else {\n            this.setState({error: 'loginError'});\n            this.setState({errorMessage: validated[1]});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className='box' id= 'guestLogin'>\n                <h2>Login as Guest</h2>\n                <form onSubmit= {this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input type= 'text' className='textBox' id='guestID'\n                               placeholder='Unique Guest ID' value={this.state.gID} onChange={this.changeGID} />\n                        <div className='loginError' id={this.state.error}>\n                            {this.state.errorMessage}\n                        </div>\n                    </div>\n                    <input type='submit' className='button' id='guest' value='CONTINUE' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport class PlannerLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {user:'', pass:'', error:'plannerError'};\n\n        this.changeUser = this.changeUser.bind(this);\n        this.changePass = this.changePass.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeUser(event) {\n        this.setState({user: event.target.value});\n    }\n\n    changePass(event) {\n        this.setState({pass: event.target.value});\n    }\n\n    handleRegister(event) {\n        event.preventDefault();\n        this.props.history.push('/register');\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let validated = validatePlanner(this.state, this.props.storage);\n        if (validated[0]) {\n    \t\t\tthis.props.history.push('/events');\n    \t\t} else {\n            this.setState({error: 'loginError'});\n            this.setState({errorMessage: validated[1]});\n        }\n    }\n\n    render () {\n\n        return (\n            <div className= 'box' id= 'plannerLogin'>\n                <h2>Login as Planner</h2>\n                <form data-testid=\"plannerLoginForm\" onSubmit={this.handleSubmit}>\n                    <div className='infoBox'>\n                        <input data-testid={this.state.user} type='text' className='textBox' id='email' required\n                               placeholder='E-mail' value={this.state.user} onChange={ this.changeUser} />\n                        <input data-testid={this.state.pass} type='password' className='textBox' id='pass' required\n                               placeholder='Password' value ={this.state.pass} onChange={this.changePass} />\n                        <div className='loginError' id={this.state.error}>\n                            {this.state.errorMessage}\n                        </div>\n                    </div>\n                    <div id='newRegister' onClick={this.handleRegister}>\n                        New User? Click Here to Register\n                    </div>\n                    <input type='submit' className='button' id='planner' value='LOGIN' />\n                </form>\n            </div>\n        );\n\n    }\n}\n\nexport default withRouter(LoginBox);\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\"\nimport {registerPlanner} from \"../../services/Validator\";\n\nclass RegisterBox extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {name: '', user:'', pass:'', repass:'', error:'plannerError', errorMessage:\"Invalid Registration\"};\n\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeUser = this.changeUser.bind(this);\n\t\tthis.changePass = this.changePass.bind(this);\n\t\tthis.changeRepass = this.changeRepass.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tchangeName(event) {\n\t\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeUser(event) {\n\t\t\tthis.setState({user: event.target.value});\n\t}\n\n\tchangePass(event) {\n\t\t\tthis.setState({pass: event.target.value});\n\t}\n\n\tchangeRepass(event) {\n\t\t\tthis.setState({repass: event.target.value});\n\t}\n\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tlet registered = registerPlanner(this.state, this.props.storage);\n\t\tif (registered[0]) {\n\t\t\tthis.props.history.push('/events');\n\t\t} else {\n\t\t\tthis.setState({error: 'loginError'});\n\t\t\tthis.setState({errorMessage: registered[1]});\n\t\t}\n\t\tconsole.log(registered[0]);\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className='userMain' id = 'wrapperbox'>\n\t\t\t\t<form id='registerBox' onSubmit={this.handleSubmit}>\n        \t\t\t<h1 id='registerTitle'>Account Information</h1>\n        \t\t\t<div id='inputs'>\n          \t\t\t\t<input type='text' className='textBox' id='firstName' required placeholder='Full Name'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.name} onChange={this.changeName}/>\n          \t\t\t\t<input type='text' className='textBox' id='e-mail' required placeholder='E-mail Address'\n\t\t\t\t\t\t\t\t\t\t\t\t value={this.state.user} onChange={ this.changeUser}/>\n          \t\t\t\t<input type='password' className='textBox' id='password' required placeholder='Password'\n\t\t\t\t\t\t\t\t\t\t\t\t value ={this.state.pass} onChange={this.changePass}/>\n          \t\t\t\t<input type='password' className='textBox' id='re_password' required placeholder='Re-Enter Password'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue ={this.state.repass} onChange={this.changeRepass}/>\n\t\t\t\t\t\t\t\t\t<div className='loginError' id={this.state.error} >\n\t\t\t\t\t\t\t\t\t\t{this.state.errorMessage}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n        \t\t\t<input type='submit' className='button' id='newUser' value='Create Account' />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default withRouter(RegisterBox);\n","import React from 'react';\r\n\r\nexport class Navigation extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.handleEventPage = this.handleEventPage.bind(this);\r\n\t}\r\n\r\n\thandleEventPage(event){\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.history.push(this.props.towhere);\r\n\t}\r\n\r\n    render(){\r\n        return(\r\n          <div className='button' id=\"navigation\" onClick={this.handleEventPage}>\r\n              {this.props.text}\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {Navigation} from '../../services/navigation.js';\n\n\nclass CreateGuest extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {clicked: 'false', name: '', email: '',\n\t\t\tphone: '', address: '', search: '', curEvent:this.props.storage.getEvent()};\n\n\t\tthis.openDialog = this.openDialog.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.closeDialog = this.closeDialog.bind(this);\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeEmail = this.changeEmail.bind(this);\n\t\tthis.changeAddress = this.changeAddress.bind(this);\n\t\tthis.changePhone = this.changePhone.bind(this);\n\t\tthis.changeSearch = this.changeSearch.bind(this);\n\t}\n\n\topenDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'block';\n\t}\n\n\tcloseDialog() {\n\t\tdocument.getElementById('dialogbox').style.display = 'none';\n\t}\n\n\tchangeName(event) {\n\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeEmail(event) {\n\t\tthis.setState({email: event.target.value});\n\t}\n\n\tchangeAddress(event) {\n\t\tthis.setState({address: event.target.value});\n\t}\n\n\tchangePhone(event) {\n\t\tthis.setState({phone: event.target.value});\n\t}\n\n\tchangeSearch(event) {\n\t\tthis.setState({search: event.target.value});\n\t}\n\n\thandleSubmit(event) {\n\t\t\tevent.preventDefault();\n\t\t\tlet added = this.props.storage.addGuest(this.state);\n\t\t\tif (added[0]) {\n\t\t\t\tthis.closeDialog();\n\t\t\t\talert(\"Guest was successfully added!\");\n\t\t\t} else {\n\t\t\t\t\tthis.setState({error: 'guestError'});\n\t\t\t\t\tthis.setState({errorMessage: added[1]});\n\t\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"wrapperbox\">\n\t\t\t\t<div id = \"welcome\">\n\t\t\t\t<Navigation history={this.props.history} towhere={\"/events\"} text={\"Events\"} />\n\t\t\t\t<h1>{this.state.curEvent.name}</h1>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"sidebar\">\n\t\t\t\t\t<div id=\"search\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"search\"\n\t\t\t\t\t\t\t\tplaceholder=\"Search...\" onChange={this.changeSearch}/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Add Guest' onClick={() => this.openDialog()}/>\n\t\t\t\t</div>\n\n\t\t\t\t<div id=\"dialogbox\">\n\t\t\t\t\t<dialog open>\n\t\t\t\t\t\t<div id=\"closeWindow\">\n\t\t\t\t\t\t\t<input type='submit' id=\"closeButton\" value='X' onClick={() => this.closeDialog()}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h1>Add a Guest</h1>\n\t\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"name\"\n\t\t\t\t\t\t\t\tplaceholder=\"Name\" value ={this.state.name} onChange={this.changeName} required/>\n\t\t\t\t\t\t\t<input type=\"email\" className=\"textBox\" id=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"E-mail\" value ={this.state.email} onChange={this.changeEmail} required/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"phone\"\n\t\t\t\t\t\t\t\tplaceholder=\"Phone Number\" value ={this.state.phone_number} onChange={this.changePhone} required/>\n\t\t\t\t\t\t\t<input type=\"text\" className=\"textBox\" id=\"address\"\n\t\t\t\t\t\t\t\tplaceholder=\"Address\" value ={this.state.address} onChange={this.changeAddress} required/>\n\t\t\t\t\t\t\t<div className='eventError' id={this.state.error} >\n\t\t\t\t\t\t\t\t{this.state.errorMessage}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id=\"buttonbox\">\n\t\t\t\t\t\t\t\t<input type='submit' className='button' id='add_guest' value='Submit'/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</dialog>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nexport default withRouter(CreateGuest);\n","import React from 'react';\nimport '../../SeatPlanner.css';\nimport {withRouter} from \"react-router-dom\";\nimport {Navigation} from '../../services/navigation.js';\n\nexport class GuestView extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    handleLogout(event) {\n        event.preventDefault();\n        this.props.storage.clear();\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        return(\n            <div id = \"wrapperbox\">\n                <div id = \"welcome\">\n                  <div className='button' id='logout' onClick={this.handleLogout}>\n                      Logout\n                  </div>\n                  <h1>Welcome Guest, {this.props.storage.getUser()}!</h1>\n                </div>\n            </div>\n\n        );\n    }\n    /*\n    render () {\n        return (\n            <div className='box' id= 'seatingChart'>\n                <h2>Pretend this is a seating chart...</h2>\n            </div>\n        );\n    }\n\n    render () {\n        return (\n            <div className='box' id= 'guestInfo'>\n                <h2>Pretend this is information about you, the guest...</h2>\n            </div>\n        );\n    }\n    */\n}\n\nexport default withRouter(GuestView);\n","import {withRouter} from \"react-router-dom\";\nimport '../../SeatPlanner.css';\nimport React from \"react\";\n\nexport class EventList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let gotEvents = this.props.storage.getEvents();\n        if (gotEvents[0]) {\n            this.state = {\n                eventList: gotEvents[1],\n                listItems: [],\n                name: '',\n                date: '',\n                address: '',\n                max: ''\n            };\n\n            for (let i = 0; i < this.state.eventList.length; i++) {\n                this.state.listItems.push(\n                    <EventItem\n                        Key={this.state.eventList[i].pin}\n                        Event={this.state.eventList[i]}\n                        eventName={this.state.eventList[i].name}\n                        storage={this.props.storage}\n                        history={this.props.history}\n                    />);\n            }\n        } else {\n            this.state = {\n                eventList: [],\n                listItems: [],\n                name: '',\n                date: '',\n                address: '',\n                max: ''\n            };\n        }\n\n        this.props.storage.setEvent(undefined);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.openDialog = this.openDialog.bind(this);\n        this.closeDialog = this.closeDialog.bind(this);\n        this.changeName = this.changeName.bind(this);\n        this.changeDate = this.changeDate.bind(this);\n        this.changeAddress = this.changeAddress.bind(this);\n        this.changeMax = this.changeMax.bind(this);\n    }\n\n    openDialog() {\n  \t\tdocument.getElementById('dialogbox').style.display = 'block';\n  \t}\n\n  \tcloseDialog() {\n  \t\tdocument.getElementById('dialogbox').style.display = 'none';\n  \t}\n\n    changeName(event) {\n  \t\tthis.setState({name: event.target.value});\n  \t}\n\n  \tchangeDate(event) {\n  \t\tthis.setState({date: event.target.value});\n  \t}\n\n  \tchangeAddress(event) {\n  \t\tthis.setState({address: event.target.value});\n  \t}\n\n  \tchangeMax(event) {\n  \t\tthis.setState({max: event.target.value});\n  \t}\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let added = this.props.storage.addEvent(this.state);\n        if (added[0]) {\n          this.closeDialog();\n          let listLength = this.state.eventList.length;\n          this.setState({eventList: this.props.storage.getEvents()});\n          this.setState(prevState => ({\n              listItems: [...prevState.listItems, <EventItem\n                  Key={listLength}\n                  Event = {added[1]}\n                  eventName = {added[1].name}\n                  storage = {this.props.storage}\n                  history = {this.props.history}\n              />]\n          }));\n    \t\t} else {\n            this.setState({error: 'eventError'});\n            this.setState({errorMessage: added[1]});\n        }\n    }\n\n    handleLogout(event) {\n        event.preventDefault();\n        this.props.storage.clear();\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        return (\n            <div id=\"logoutBox\">\n\n                <div id=\"wrapperbox\">\n                    <div id = \"welcome\">\n                        <div className='button' id='logout' onClick={this.handleLogout}>\n                            Logout\n                        </div>\n                        <h1>Welcome, {this.props.storage.getUser()}!</h1>\n                    </div>\n                    <div id=\"listWrapper\">\n                        <ul id=\"eventList\">{this.state.listItems}</ul>\n                        <input type='submit' className='button' id='add_event' value='Add Event' onClick={() => this.openDialog()}/>\n                    </div>\n                    <div id=\"dialogbox\">\n                        <dialog open>\n                            <div id=\"closeWindow\">\n                                <input type='submit' id=\"closeButton\" value='X' onClick={() => this.closeDialog()}/>\n                            </div>\n                            <h1>Add an Event</h1>\n                            <form onSubmit={this.handleSubmit}>\n                                <input type=\"text\" className=\"textBox\"\n                                        id=\"name\" placeholder=\"Event Name\"\n                                        value ={this.state.name}\n                                        onChange={this.changeName} required />\n                                <input type=\"datetime-local\" className=\"textBox\"\n                                       id=\"date\" placeholder=\"Date/Time\"\n                                       value ={this.state.date}\n                                       onChange={this.changeDate} required />\n                                <input type=\"text\" className=\"textBox\"\n                                        id=\"address\" placeholder=\"Address\"\n                                        value ={this.state.address}\n                                        onChange={this.changeAddress} required/>\n                                <input type=\"number\" className=\"textBox\"\n                                        id=\"max\" placeholder=\"Max # of Guests\"\n                                        value ={this.state.max}\n                                        onChange={this.changeMax} required/>\n                                <div className='eventError' id={this.state.error} >\n                                    {this.state.errorMessage}\n                                </div>\n                                <div id=\"buttonbox\">\n                                    <input type='submit' className='button' id='add_event' value='Submit'/>\n                                </div>\n                            </form>\n                        </dialog>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass EventItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.goToEvent = this.goToEvent.bind(this);\n    }\n\n    goToEvent(event) {\n        event.preventDefault();\n        this.props.storage.setEvent(this.props.Event);\n        this.props.history.push('/planner');\n    }\n\n    render() {\n        return (\n            <li key={this.props.Key} className='eventItem' onClick={this.goToEvent} value={this.props.eventName}>{this.props.eventName}</li>\n        );\n    }\n}\n\n\nexport default withRouter(EventList);\n","import ls from 'local-storage';\nimport {Guest, User} from \"./User\";\nimport {addEvent, addGuest, getEventList} from \"./Validator\";\n\nexport class LocalStorage {\n    constructor() {\n        if (ls('guestList') === null)\n            ls('guestList', []);\n        if (ls('itemList') === null)\n            ls('itemList', []);\n        if (ls('eventList') === null)\n            ls('eventList', []);\n        if (ls('curUser') === null)\n            ls('curUser', undefined);\n        if (ls('curEvent') == null)\n            ls('curEvent', undefined);\n        if (ls('signed') === null)\n            ls('signed', false);\n    }\n\n    setUser(newUser) {\n        if (newUser instanceof User) {\n            ls('curUser', newUser);\n            ls('signed', true);\n            return true;\n        } else if (newUser instanceof Guest) {\n             ls('curUser', newUser);\n             ls('signed', true);\n             return true;\n        } else {\n            return false;\n        }\n    }\n    getUser() {\n        return ls('curUser').userName;\n    }\n    addGuest(state) {\n        if (ls('curEvent') !== undefined) {\n            let guests = ls('guestList');\n            let added = addGuest(state, ls('curEvent').pin);\n            if (added[0]) {\n                guests.push(added[1]);\n                ls('guestList', guests);\n                return [true];\n            } else {\n                return added;\n            }\n        }\n        return [false];\n    }\n    addEvent(state) {\n        let eventList = ls('eventList');\n        let added = addEvent(state, this.getUser());\n        if (added[0]) {\n            eventList.push(added[1]);\n            ls('eventList', eventList);\n        }\n        return added;\n    }\n    setEvent(newEvent) {\n        ls('curEvent', newEvent);\n    }\n    getEvent() {\n        return ls('curEvent');\n    }\n    getEvents() {\n\n        if (ls('eventList').length !== 0) {\n            return [true, ls('eventList')];\n        } else {\n            if (ls('curUser') !== undefined) {\n\n                let added = getEventList(ls('curUser'));\n                if (added[0]) {\n                    ls('eventList', added[1]);\n                }\n                return added\n            }\n\n            return [false, \"No Current User\"];\n        }\n    }\n\n    clear() {\n        ls('curUser', undefined);\n        ls('curEvent', undefined);\n        ls('guestList', []);\n        ls('itemList', []);\n        ls('eventList', []);\n        ls('signed', false);\n    }\n\n    isSigned() {\n        return ls('signed');\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {LocalStorage} from \"../services/LocalStorage\";\n\nexport default function RouteWrapper({\n    isPrivate,\n    storage,\n    ...rest\n    }) {\n\n    /**\n     * Redirect user to SignIn page if he tries to access a private route\n     * without authentication.\n     */\n    if (isPrivate && !storage.isSigned()) {\n        return <Redirect to=\"/\" />;\n    }\n\n    /**\n     * If not included on both previous cases, redirect user to the desired route.\n     */\n    return <Route {...rest} />;\n}\n\nRouteWrapper.propTypes = {\n    isPrivate: PropTypes.bool,\n    storage: PropTypes.instanceOf(LocalStorage).isRequired\n};\n\nRouteWrapper.defaultProps = {\n    isPrivate: false\n};","import React from \"react\";\nimport { BrowserRouter, Switch} from \"react-router-dom\";\nimport Login from '../pages/Login';\nimport Register from '../pages/Register';\nimport Planner from '../pages/Planner';\nimport Guest from '../pages/Guest';\nimport Events from '../pages/Events';\nimport Route from './Route'\nimport {LocalStorage} from '../services/LocalStorage'\n\nexport default function Routes() {\n    let storage = new LocalStorage();\n    return (\n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact\n                   render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path=\"/register\"\n                   render = {(props) =><Register{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path = \"/events\"\n                    render = {(props) =><Events{...props} history = {Routes.history} storage = {storage}/>}\n                    isPrivate = {true} storage={storage}\n            />\n            <Route path=\"/planner\"\n                   render = {(props) =><Planner{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            <Route path=\"/guest\"\n                   render = {(props) =><Guest{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            {/* redirect user to Login page if route does not exist and user is not authenticated */}\n            <Route\n                render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                storage={storage}\n            />\n        </Switch>\n       </BrowserRouter>\n    );\n}\n","import React from 'react';\nimport { Router } from 'react-router';\n\nimport history from './services/history';\nimport Routes from './routes';\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <Routes  />\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"mainbox\"));\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}